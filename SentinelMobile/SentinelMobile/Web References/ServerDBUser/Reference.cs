//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.17929.
// 
#pragma warning disable 1591

namespace SentinelMobile.ServerDBUser {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="DBUserSoap", Namespace="http://www.sentinelfm.com")]
    public partial class DBUser : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetUserPreferencesXMLOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddUserPreferenceOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateUserPreferenceOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteUserPreferencesOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteUserPreferenceOperationCompleted;
        
        private System.Threading.SendOrPostCallback UserPreference_Add_UpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAssignedGroupsByUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserInfoByUserIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserInfoByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChangeUserPasswordByUserNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback ResetPasswordBySuperUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValidateLockedUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddNewUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteUserByUserIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateUserInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback RecordUserActionOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValidatePasswordInLastEightOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddNewUserToGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddUserToGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback AssignUserToGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteUserAssignmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUsersByUserGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUsersByUserGroupAndOrganizationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllUnassignedUsersToUserGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllUnassignedUsersToUserGroupByOrganizationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllUserGroupsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserGroupsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllUserGroupsByLangOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserPermissionsXMLOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserLastLoginOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllNotificationsForUserIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUsersDashboardsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDashboardTypesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserGroupOperationsByTypeOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public DBUser() {
            this.Url = global::SentinelMobile.Properties.Settings.Default.SentinelMobile_ServerDBUser_DBUser;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetUserPreferencesXMLCompletedEventHandler GetUserPreferencesXMLCompleted;
        
        /// <remarks/>
        public event AddUserPreferenceCompletedEventHandler AddUserPreferenceCompleted;
        
        /// <remarks/>
        public event UpdateUserPreferenceCompletedEventHandler UpdateUserPreferenceCompleted;
        
        /// <remarks/>
        public event DeleteUserPreferencesCompletedEventHandler DeleteUserPreferencesCompleted;
        
        /// <remarks/>
        public event DeleteUserPreferenceCompletedEventHandler DeleteUserPreferenceCompleted;
        
        /// <remarks/>
        public event UserPreference_Add_UpdateCompletedEventHandler UserPreference_Add_UpdateCompleted;
        
        /// <remarks/>
        public event GetAssignedGroupsByUserCompletedEventHandler GetAssignedGroupsByUserCompleted;
        
        /// <remarks/>
        public event GetUserInfoByUserIdCompletedEventHandler GetUserInfoByUserIdCompleted;
        
        /// <remarks/>
        public event GetUserInfoByIdCompletedEventHandler GetUserInfoByIdCompleted;
        
        /// <remarks/>
        public event ChangeUserPasswordByUserNameCompletedEventHandler ChangeUserPasswordByUserNameCompleted;
        
        /// <remarks/>
        public event ResetPasswordBySuperUserCompletedEventHandler ResetPasswordBySuperUserCompleted;
        
        /// <remarks/>
        public event ValidateLockedUserCompletedEventHandler ValidateLockedUserCompleted;
        
        /// <remarks/>
        public event AddNewUserCompletedEventHandler AddNewUserCompleted;
        
        /// <remarks/>
        public event DeleteUserByUserIdCompletedEventHandler DeleteUserByUserIdCompleted;
        
        /// <remarks/>
        public event UpdateInfoCompletedEventHandler UpdateInfoCompleted;
        
        /// <remarks/>
        public event UpdateUserInfoCompletedEventHandler UpdateUserInfoCompleted;
        
        /// <remarks/>
        public event RecordUserActionCompletedEventHandler RecordUserActionCompleted;
        
        /// <remarks/>
        public event ValidatePasswordInLastEightCompletedEventHandler ValidatePasswordInLastEightCompleted;
        
        /// <remarks/>
        public event AddNewUserToGroupCompletedEventHandler AddNewUserToGroupCompleted;
        
        /// <remarks/>
        public event AddUserToGroupCompletedEventHandler AddUserToGroupCompleted;
        
        /// <remarks/>
        public event AssignUserToGroupCompletedEventHandler AssignUserToGroupCompleted;
        
        /// <remarks/>
        public event DeleteUserAssignmentCompletedEventHandler DeleteUserAssignmentCompleted;
        
        /// <remarks/>
        public event GetUsersByUserGroupCompletedEventHandler GetUsersByUserGroupCompleted;
        
        /// <remarks/>
        public event GetUsersByUserGroupAndOrganizationCompletedEventHandler GetUsersByUserGroupAndOrganizationCompleted;
        
        /// <remarks/>
        public event GetAllUnassignedUsersToUserGroupCompletedEventHandler GetAllUnassignedUsersToUserGroupCompleted;
        
        /// <remarks/>
        public event GetAllUnassignedUsersToUserGroupByOrganizationCompletedEventHandler GetAllUnassignedUsersToUserGroupByOrganizationCompleted;
        
        /// <remarks/>
        public event GetAllUserGroupsCompletedEventHandler GetAllUserGroupsCompleted;
        
        /// <remarks/>
        public event GetUserGroupsCompletedEventHandler GetUserGroupsCompleted;
        
        /// <remarks/>
        public event GetAllUserGroupsByLangCompletedEventHandler GetAllUserGroupsByLangCompleted;
        
        /// <remarks/>
        public event GetUserPermissionsXMLCompletedEventHandler GetUserPermissionsXMLCompleted;
        
        /// <remarks/>
        public event GetUserLastLoginCompletedEventHandler GetUserLastLoginCompleted;
        
        /// <remarks/>
        public event GetAllNotificationsForUserIdCompletedEventHandler GetAllNotificationsForUserIdCompleted;
        
        /// <remarks/>
        public event GetUsersDashboardsCompletedEventHandler GetUsersDashboardsCompleted;
        
        /// <remarks/>
        public event GetDashboardTypesCompletedEventHandler GetDashboardTypesCompleted;
        
        /// <remarks/>
        public event GetUserGroupOperationsByTypeCompletedEventHandler GetUserGroupOperationsByTypeCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetUserPreferencesXML", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetUserPreferencesXML(int userId, string SID, ref string xml) {
            object[] results = this.Invoke("GetUserPreferencesXML", new object[] {
                        userId,
                        SID,
                        xml});
            xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserPreferencesXMLAsync(int userId, string SID, string xml) {
            this.GetUserPreferencesXMLAsync(userId, SID, xml, null);
        }
        
        /// <remarks/>
        public void GetUserPreferencesXMLAsync(int userId, string SID, string xml, object userState) {
            if ((this.GetUserPreferencesXMLOperationCompleted == null)) {
                this.GetUserPreferencesXMLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserPreferencesXMLOperationCompleted);
            }
            this.InvokeAsync("GetUserPreferencesXML", new object[] {
                        userId,
                        SID,
                        xml}, this.GetUserPreferencesXMLOperationCompleted, userState);
        }
        
        private void OnGetUserPreferencesXMLOperationCompleted(object arg) {
            if ((this.GetUserPreferencesXMLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserPreferencesXMLCompleted(this, new GetUserPreferencesXMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/AddUserPreference", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AddUserPreference(int userId, string SID, int preferenceId, string preferenceValue) {
            object[] results = this.Invoke("AddUserPreference", new object[] {
                        userId,
                        SID,
                        preferenceId,
                        preferenceValue});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AddUserPreferenceAsync(int userId, string SID, int preferenceId, string preferenceValue) {
            this.AddUserPreferenceAsync(userId, SID, preferenceId, preferenceValue, null);
        }
        
        /// <remarks/>
        public void AddUserPreferenceAsync(int userId, string SID, int preferenceId, string preferenceValue, object userState) {
            if ((this.AddUserPreferenceOperationCompleted == null)) {
                this.AddUserPreferenceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddUserPreferenceOperationCompleted);
            }
            this.InvokeAsync("AddUserPreference", new object[] {
                        userId,
                        SID,
                        preferenceId,
                        preferenceValue}, this.AddUserPreferenceOperationCompleted, userState);
        }
        
        private void OnAddUserPreferenceOperationCompleted(object arg) {
            if ((this.AddUserPreferenceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddUserPreferenceCompleted(this, new AddUserPreferenceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/UpdateUserPreference", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateUserPreference(int userId, string SID, int preferenceId, string preferenceValue) {
            object[] results = this.Invoke("UpdateUserPreference", new object[] {
                        userId,
                        SID,
                        preferenceId,
                        preferenceValue});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateUserPreferenceAsync(int userId, string SID, int preferenceId, string preferenceValue) {
            this.UpdateUserPreferenceAsync(userId, SID, preferenceId, preferenceValue, null);
        }
        
        /// <remarks/>
        public void UpdateUserPreferenceAsync(int userId, string SID, int preferenceId, string preferenceValue, object userState) {
            if ((this.UpdateUserPreferenceOperationCompleted == null)) {
                this.UpdateUserPreferenceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateUserPreferenceOperationCompleted);
            }
            this.InvokeAsync("UpdateUserPreference", new object[] {
                        userId,
                        SID,
                        preferenceId,
                        preferenceValue}, this.UpdateUserPreferenceOperationCompleted, userState);
        }
        
        private void OnUpdateUserPreferenceOperationCompleted(object arg) {
            if ((this.UpdateUserPreferenceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateUserPreferenceCompleted(this, new UpdateUserPreferenceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/DeleteUserPreferences", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int DeleteUserPreferences(int userId, string SID, ref int rowsAffected) {
            object[] results = this.Invoke("DeleteUserPreferences", new object[] {
                        userId,
                        SID,
                        rowsAffected});
            rowsAffected = ((int)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteUserPreferencesAsync(int userId, string SID, int rowsAffected) {
            this.DeleteUserPreferencesAsync(userId, SID, rowsAffected, null);
        }
        
        /// <remarks/>
        public void DeleteUserPreferencesAsync(int userId, string SID, int rowsAffected, object userState) {
            if ((this.DeleteUserPreferencesOperationCompleted == null)) {
                this.DeleteUserPreferencesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteUserPreferencesOperationCompleted);
            }
            this.InvokeAsync("DeleteUserPreferences", new object[] {
                        userId,
                        SID,
                        rowsAffected}, this.DeleteUserPreferencesOperationCompleted, userState);
        }
        
        private void OnDeleteUserPreferencesOperationCompleted(object arg) {
            if ((this.DeleteUserPreferencesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteUserPreferencesCompleted(this, new DeleteUserPreferencesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/DeleteUserPreference", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int DeleteUserPreference(int userId, string SID, int preferenceId, ref int rowsAffected) {
            object[] results = this.Invoke("DeleteUserPreference", new object[] {
                        userId,
                        SID,
                        preferenceId,
                        rowsAffected});
            rowsAffected = ((int)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteUserPreferenceAsync(int userId, string SID, int preferenceId, int rowsAffected) {
            this.DeleteUserPreferenceAsync(userId, SID, preferenceId, rowsAffected, null);
        }
        
        /// <remarks/>
        public void DeleteUserPreferenceAsync(int userId, string SID, int preferenceId, int rowsAffected, object userState) {
            if ((this.DeleteUserPreferenceOperationCompleted == null)) {
                this.DeleteUserPreferenceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteUserPreferenceOperationCompleted);
            }
            this.InvokeAsync("DeleteUserPreference", new object[] {
                        userId,
                        SID,
                        preferenceId,
                        rowsAffected}, this.DeleteUserPreferenceOperationCompleted, userState);
        }
        
        private void OnDeleteUserPreferenceOperationCompleted(object arg) {
            if ((this.DeleteUserPreferenceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteUserPreferenceCompleted(this, new DeleteUserPreferenceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/UserPreference_Add_Update", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UserPreference_Add_Update(int userId, string SID, int preferenceId, string preferenceValue) {
            object[] results = this.Invoke("UserPreference_Add_Update", new object[] {
                        userId,
                        SID,
                        preferenceId,
                        preferenceValue});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UserPreference_Add_UpdateAsync(int userId, string SID, int preferenceId, string preferenceValue) {
            this.UserPreference_Add_UpdateAsync(userId, SID, preferenceId, preferenceValue, null);
        }
        
        /// <remarks/>
        public void UserPreference_Add_UpdateAsync(int userId, string SID, int preferenceId, string preferenceValue, object userState) {
            if ((this.UserPreference_Add_UpdateOperationCompleted == null)) {
                this.UserPreference_Add_UpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUserPreference_Add_UpdateOperationCompleted);
            }
            this.InvokeAsync("UserPreference_Add_Update", new object[] {
                        userId,
                        SID,
                        preferenceId,
                        preferenceValue}, this.UserPreference_Add_UpdateOperationCompleted, userState);
        }
        
        private void OnUserPreference_Add_UpdateOperationCompleted(object arg) {
            if ((this.UserPreference_Add_UpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UserPreference_Add_UpdateCompleted(this, new UserPreference_Add_UpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetAssignedGroupsByUser", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetAssignedGroupsByUser(int userId, string SID, ref string xml) {
            object[] results = this.Invoke("GetAssignedGroupsByUser", new object[] {
                        userId,
                        SID,
                        xml});
            xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetAssignedGroupsByUserAsync(int userId, string SID, string xml) {
            this.GetAssignedGroupsByUserAsync(userId, SID, xml, null);
        }
        
        /// <remarks/>
        public void GetAssignedGroupsByUserAsync(int userId, string SID, string xml, object userState) {
            if ((this.GetAssignedGroupsByUserOperationCompleted == null)) {
                this.GetAssignedGroupsByUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAssignedGroupsByUserOperationCompleted);
            }
            this.InvokeAsync("GetAssignedGroupsByUser", new object[] {
                        userId,
                        SID,
                        xml}, this.GetAssignedGroupsByUserOperationCompleted, userState);
        }
        
        private void OnGetAssignedGroupsByUserOperationCompleted(object arg) {
            if ((this.GetAssignedGroupsByUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAssignedGroupsByUserCompleted(this, new GetAssignedGroupsByUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetUserInfoByUserId", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetUserInfoByUserId(int userId, string SID, ref string xml) {
            object[] results = this.Invoke("GetUserInfoByUserId", new object[] {
                        userId,
                        SID,
                        xml});
            xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserInfoByUserIdAsync(int userId, string SID, string xml) {
            this.GetUserInfoByUserIdAsync(userId, SID, xml, null);
        }
        
        /// <remarks/>
        public void GetUserInfoByUserIdAsync(int userId, string SID, string xml, object userState) {
            if ((this.GetUserInfoByUserIdOperationCompleted == null)) {
                this.GetUserInfoByUserIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserInfoByUserIdOperationCompleted);
            }
            this.InvokeAsync("GetUserInfoByUserId", new object[] {
                        userId,
                        SID,
                        xml}, this.GetUserInfoByUserIdOperationCompleted, userState);
        }
        
        private void OnGetUserInfoByUserIdOperationCompleted(object arg) {
            if ((this.GetUserInfoByUserIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserInfoByUserIdCompleted(this, new GetUserInfoByUserIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetUserInfoById", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetUserInfoById(int userId, string SID, int usrId, ref string xml) {
            object[] results = this.Invoke("GetUserInfoById", new object[] {
                        userId,
                        SID,
                        usrId,
                        xml});
            xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserInfoByIdAsync(int userId, string SID, int usrId, string xml) {
            this.GetUserInfoByIdAsync(userId, SID, usrId, xml, null);
        }
        
        /// <remarks/>
        public void GetUserInfoByIdAsync(int userId, string SID, int usrId, string xml, object userState) {
            if ((this.GetUserInfoByIdOperationCompleted == null)) {
                this.GetUserInfoByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserInfoByIdOperationCompleted);
            }
            this.InvokeAsync("GetUserInfoById", new object[] {
                        userId,
                        SID,
                        usrId,
                        xml}, this.GetUserInfoByIdOperationCompleted, userState);
        }
        
        private void OnGetUserInfoByIdOperationCompleted(object arg) {
            if ((this.GetUserInfoByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserInfoByIdCompleted(this, new GetUserInfoByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/ChangeUserPasswordByUserName", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int ChangeUserPasswordByUserName(int userId, string SID, string userName, string oldPassword, string newPassword) {
            object[] results = this.Invoke("ChangeUserPasswordByUserName", new object[] {
                        userId,
                        SID,
                        userName,
                        oldPassword,
                        newPassword});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ChangeUserPasswordByUserNameAsync(int userId, string SID, string userName, string oldPassword, string newPassword) {
            this.ChangeUserPasswordByUserNameAsync(userId, SID, userName, oldPassword, newPassword, null);
        }
        
        /// <remarks/>
        public void ChangeUserPasswordByUserNameAsync(int userId, string SID, string userName, string oldPassword, string newPassword, object userState) {
            if ((this.ChangeUserPasswordByUserNameOperationCompleted == null)) {
                this.ChangeUserPasswordByUserNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChangeUserPasswordByUserNameOperationCompleted);
            }
            this.InvokeAsync("ChangeUserPasswordByUserName", new object[] {
                        userId,
                        SID,
                        userName,
                        oldPassword,
                        newPassword}, this.ChangeUserPasswordByUserNameOperationCompleted, userState);
        }
        
        private void OnChangeUserPasswordByUserNameOperationCompleted(object arg) {
            if ((this.ChangeUserPasswordByUserNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChangeUserPasswordByUserNameCompleted(this, new ChangeUserPasswordByUserNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/ResetPasswordBySuperUser", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int ResetPasswordBySuperUser(int userId, int userIdUpdated, string SID, string newPassword) {
            object[] results = this.Invoke("ResetPasswordBySuperUser", new object[] {
                        userId,
                        userIdUpdated,
                        SID,
                        newPassword});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ResetPasswordBySuperUserAsync(int userId, int userIdUpdated, string SID, string newPassword) {
            this.ResetPasswordBySuperUserAsync(userId, userIdUpdated, SID, newPassword, null);
        }
        
        /// <remarks/>
        public void ResetPasswordBySuperUserAsync(int userId, int userIdUpdated, string SID, string newPassword, object userState) {
            if ((this.ResetPasswordBySuperUserOperationCompleted == null)) {
                this.ResetPasswordBySuperUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnResetPasswordBySuperUserOperationCompleted);
            }
            this.InvokeAsync("ResetPasswordBySuperUser", new object[] {
                        userId,
                        userIdUpdated,
                        SID,
                        newPassword}, this.ResetPasswordBySuperUserOperationCompleted, userState);
        }
        
        private void OnResetPasswordBySuperUserOperationCompleted(object arg) {
            if ((this.ResetPasswordBySuperUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ResetPasswordBySuperUserCompleted(this, new ResetPasswordBySuperUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/ValidateLockedUser", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int ValidateLockedUser(int userId) {
            object[] results = this.Invoke("ValidateLockedUser", new object[] {
                        userId});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ValidateLockedUserAsync(int userId) {
            this.ValidateLockedUserAsync(userId, null);
        }
        
        /// <remarks/>
        public void ValidateLockedUserAsync(int userId, object userState) {
            if ((this.ValidateLockedUserOperationCompleted == null)) {
                this.ValidateLockedUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValidateLockedUserOperationCompleted);
            }
            this.InvokeAsync("ValidateLockedUser", new object[] {
                        userId}, this.ValidateLockedUserOperationCompleted, userState);
        }
        
        private void OnValidateLockedUserOperationCompleted(object arg) {
            if ((this.ValidateLockedUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValidateLockedUserCompleted(this, new ValidateLockedUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/AddNewUser", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AddNewUser(int currUserId, string SID, string userName, string personId, string password, string firstName, string lastName, string expiredDate) {
            object[] results = this.Invoke("AddNewUser", new object[] {
                        currUserId,
                        SID,
                        userName,
                        personId,
                        password,
                        firstName,
                        lastName,
                        expiredDate});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AddNewUserAsync(int currUserId, string SID, string userName, string personId, string password, string firstName, string lastName, string expiredDate) {
            this.AddNewUserAsync(currUserId, SID, userName, personId, password, firstName, lastName, expiredDate, null);
        }
        
        /// <remarks/>
        public void AddNewUserAsync(int currUserId, string SID, string userName, string personId, string password, string firstName, string lastName, string expiredDate, object userState) {
            if ((this.AddNewUserOperationCompleted == null)) {
                this.AddNewUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddNewUserOperationCompleted);
            }
            this.InvokeAsync("AddNewUser", new object[] {
                        currUserId,
                        SID,
                        userName,
                        personId,
                        password,
                        firstName,
                        lastName,
                        expiredDate}, this.AddNewUserOperationCompleted, userState);
        }
        
        private void OnAddNewUserOperationCompleted(object arg) {
            if ((this.AddNewUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddNewUserCompleted(this, new AddNewUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/DeleteUserByUserId", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int DeleteUserByUserId(int currUserId, string SID, int userId) {
            object[] results = this.Invoke("DeleteUserByUserId", new object[] {
                        currUserId,
                        SID,
                        userId});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteUserByUserIdAsync(int currUserId, string SID, int userId) {
            this.DeleteUserByUserIdAsync(currUserId, SID, userId, null);
        }
        
        /// <remarks/>
        public void DeleteUserByUserIdAsync(int currUserId, string SID, int userId, object userState) {
            if ((this.DeleteUserByUserIdOperationCompleted == null)) {
                this.DeleteUserByUserIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteUserByUserIdOperationCompleted);
            }
            this.InvokeAsync("DeleteUserByUserId", new object[] {
                        currUserId,
                        SID,
                        userId}, this.DeleteUserByUserIdOperationCompleted, userState);
        }
        
        private void OnDeleteUserByUserIdOperationCompleted(object arg) {
            if ((this.DeleteUserByUserIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteUserByUserIdCompleted(this, new DeleteUserByUserIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/UpdateInfo", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateInfo(int currUserId, string SID, int userId, string userName, string firstName, string lastName, string expiredDate) {
            object[] results = this.Invoke("UpdateInfo", new object[] {
                        currUserId,
                        SID,
                        userId,
                        userName,
                        firstName,
                        lastName,
                        expiredDate});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateInfoAsync(int currUserId, string SID, int userId, string userName, string firstName, string lastName, string expiredDate) {
            this.UpdateInfoAsync(currUserId, SID, userId, userName, firstName, lastName, expiredDate, null);
        }
        
        /// <remarks/>
        public void UpdateInfoAsync(int currUserId, string SID, int userId, string userName, string firstName, string lastName, string expiredDate, object userState) {
            if ((this.UpdateInfoOperationCompleted == null)) {
                this.UpdateInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateInfoOperationCompleted);
            }
            this.InvokeAsync("UpdateInfo", new object[] {
                        currUserId,
                        SID,
                        userId,
                        userName,
                        firstName,
                        lastName,
                        expiredDate}, this.UpdateInfoOperationCompleted, userState);
        }
        
        private void OnUpdateInfoOperationCompleted(object arg) {
            if ((this.UpdateInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateInfoCompleted(this, new UpdateInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/UpdateUserInfo", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateUserInfo(int userId, string SID, string xmlUserInfo) {
            object[] results = this.Invoke("UpdateUserInfo", new object[] {
                        userId,
                        SID,
                        xmlUserInfo});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateUserInfoAsync(int userId, string SID, string xmlUserInfo) {
            this.UpdateUserInfoAsync(userId, SID, xmlUserInfo, null);
        }
        
        /// <remarks/>
        public void UpdateUserInfoAsync(int userId, string SID, string xmlUserInfo, object userState) {
            if ((this.UpdateUserInfoOperationCompleted == null)) {
                this.UpdateUserInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateUserInfoOperationCompleted);
            }
            this.InvokeAsync("UpdateUserInfo", new object[] {
                        userId,
                        SID,
                        xmlUserInfo}, this.UpdateUserInfoOperationCompleted, userState);
        }
        
        private void OnUpdateUserInfoOperationCompleted(object arg) {
            if ((this.UpdateUserInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateUserInfoCompleted(this, new UpdateUserInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/RecordUserAction", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int RecordUserAction(string moduleName, int userId, int organizationId, string tableName, string primaryWhere, string action, string remoteAddr, string applicationName, string description) {
            object[] results = this.Invoke("RecordUserAction", new object[] {
                        moduleName,
                        userId,
                        organizationId,
                        tableName,
                        primaryWhere,
                        action,
                        remoteAddr,
                        applicationName,
                        description});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void RecordUserActionAsync(string moduleName, int userId, int organizationId, string tableName, string primaryWhere, string action, string remoteAddr, string applicationName, string description) {
            this.RecordUserActionAsync(moduleName, userId, organizationId, tableName, primaryWhere, action, remoteAddr, applicationName, description, null);
        }
        
        /// <remarks/>
        public void RecordUserActionAsync(string moduleName, int userId, int organizationId, string tableName, string primaryWhere, string action, string remoteAddr, string applicationName, string description, object userState) {
            if ((this.RecordUserActionOperationCompleted == null)) {
                this.RecordUserActionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRecordUserActionOperationCompleted);
            }
            this.InvokeAsync("RecordUserAction", new object[] {
                        moduleName,
                        userId,
                        organizationId,
                        tableName,
                        primaryWhere,
                        action,
                        remoteAddr,
                        applicationName,
                        description}, this.RecordUserActionOperationCompleted, userState);
        }
        
        private void OnRecordUserActionOperationCompleted(object arg) {
            if ((this.RecordUserActionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RecordUserActionCompleted(this, new RecordUserActionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/ValidatePasswordInLastEight", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int ValidatePasswordInLastEight(string newPassword, int userId) {
            object[] results = this.Invoke("ValidatePasswordInLastEight", new object[] {
                        newPassword,
                        userId});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ValidatePasswordInLastEightAsync(string newPassword, int userId) {
            this.ValidatePasswordInLastEightAsync(newPassword, userId, null);
        }
        
        /// <remarks/>
        public void ValidatePasswordInLastEightAsync(string newPassword, int userId, object userState) {
            if ((this.ValidatePasswordInLastEightOperationCompleted == null)) {
                this.ValidatePasswordInLastEightOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValidatePasswordInLastEightOperationCompleted);
            }
            this.InvokeAsync("ValidatePasswordInLastEight", new object[] {
                        newPassword,
                        userId}, this.ValidatePasswordInLastEightOperationCompleted, userState);
        }
        
        private void OnValidatePasswordInLastEightOperationCompleted(object arg) {
            if ((this.ValidatePasswordInLastEightCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValidatePasswordInLastEightCompleted(this, new ValidatePasswordInLastEightCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/AddNewUserToGroup", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AddNewUserToGroup(int userId, string SID, string xmlUserInfo, short userGroupId) {
            object[] results = this.Invoke("AddNewUserToGroup", new object[] {
                        userId,
                        SID,
                        xmlUserInfo,
                        userGroupId});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AddNewUserToGroupAsync(int userId, string SID, string xmlUserInfo, short userGroupId) {
            this.AddNewUserToGroupAsync(userId, SID, xmlUserInfo, userGroupId, null);
        }
        
        /// <remarks/>
        public void AddNewUserToGroupAsync(int userId, string SID, string xmlUserInfo, short userGroupId, object userState) {
            if ((this.AddNewUserToGroupOperationCompleted == null)) {
                this.AddNewUserToGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddNewUserToGroupOperationCompleted);
            }
            this.InvokeAsync("AddNewUserToGroup", new object[] {
                        userId,
                        SID,
                        xmlUserInfo,
                        userGroupId}, this.AddNewUserToGroupOperationCompleted, userState);
        }
        
        private void OnAddNewUserToGroupOperationCompleted(object arg) {
            if ((this.AddNewUserToGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddNewUserToGroupCompleted(this, new AddNewUserToGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/AddUserToGroup", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AddUserToGroup(int userId, string SID, int organizationId, string userName, string personId, string password, string firstName, string lastName, string expiredDate, short userGroupId) {
            object[] results = this.Invoke("AddUserToGroup", new object[] {
                        userId,
                        SID,
                        organizationId,
                        userName,
                        personId,
                        password,
                        firstName,
                        lastName,
                        expiredDate,
                        userGroupId});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AddUserToGroupAsync(int userId, string SID, int organizationId, string userName, string personId, string password, string firstName, string lastName, string expiredDate, short userGroupId) {
            this.AddUserToGroupAsync(userId, SID, organizationId, userName, personId, password, firstName, lastName, expiredDate, userGroupId, null);
        }
        
        /// <remarks/>
        public void AddUserToGroupAsync(int userId, string SID, int organizationId, string userName, string personId, string password, string firstName, string lastName, string expiredDate, short userGroupId, object userState) {
            if ((this.AddUserToGroupOperationCompleted == null)) {
                this.AddUserToGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddUserToGroupOperationCompleted);
            }
            this.InvokeAsync("AddUserToGroup", new object[] {
                        userId,
                        SID,
                        organizationId,
                        userName,
                        personId,
                        password,
                        firstName,
                        lastName,
                        expiredDate,
                        userGroupId}, this.AddUserToGroupOperationCompleted, userState);
        }
        
        private void OnAddUserToGroupOperationCompleted(object arg) {
            if ((this.AddUserToGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddUserToGroupCompleted(this, new AddUserToGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/AssignUserToGroup", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AssignUserToGroup(int currUserId, string SID, int userId, short userGroupId) {
            object[] results = this.Invoke("AssignUserToGroup", new object[] {
                        currUserId,
                        SID,
                        userId,
                        userGroupId});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AssignUserToGroupAsync(int currUserId, string SID, int userId, short userGroupId) {
            this.AssignUserToGroupAsync(currUserId, SID, userId, userGroupId, null);
        }
        
        /// <remarks/>
        public void AssignUserToGroupAsync(int currUserId, string SID, int userId, short userGroupId, object userState) {
            if ((this.AssignUserToGroupOperationCompleted == null)) {
                this.AssignUserToGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAssignUserToGroupOperationCompleted);
            }
            this.InvokeAsync("AssignUserToGroup", new object[] {
                        currUserId,
                        SID,
                        userId,
                        userGroupId}, this.AssignUserToGroupOperationCompleted, userState);
        }
        
        private void OnAssignUserToGroupOperationCompleted(object arg) {
            if ((this.AssignUserToGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AssignUserToGroupCompleted(this, new AssignUserToGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/DeleteUserAssignment", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int DeleteUserAssignment(int currUserId, string SID, int userId, short userGroupId) {
            object[] results = this.Invoke("DeleteUserAssignment", new object[] {
                        currUserId,
                        SID,
                        userId,
                        userGroupId});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteUserAssignmentAsync(int currUserId, string SID, int userId, short userGroupId) {
            this.DeleteUserAssignmentAsync(currUserId, SID, userId, userGroupId, null);
        }
        
        /// <remarks/>
        public void DeleteUserAssignmentAsync(int currUserId, string SID, int userId, short userGroupId, object userState) {
            if ((this.DeleteUserAssignmentOperationCompleted == null)) {
                this.DeleteUserAssignmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteUserAssignmentOperationCompleted);
            }
            this.InvokeAsync("DeleteUserAssignment", new object[] {
                        currUserId,
                        SID,
                        userId,
                        userGroupId}, this.DeleteUserAssignmentOperationCompleted, userState);
        }
        
        private void OnDeleteUserAssignmentOperationCompleted(object arg) {
            if ((this.DeleteUserAssignmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteUserAssignmentCompleted(this, new DeleteUserAssignmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetUsersByUserGroup", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetUsersByUserGroup(int currUserId, string SID, short userGroupId, ref string xml) {
            object[] results = this.Invoke("GetUsersByUserGroup", new object[] {
                        currUserId,
                        SID,
                        userGroupId,
                        xml});
            xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetUsersByUserGroupAsync(int currUserId, string SID, short userGroupId, string xml) {
            this.GetUsersByUserGroupAsync(currUserId, SID, userGroupId, xml, null);
        }
        
        /// <remarks/>
        public void GetUsersByUserGroupAsync(int currUserId, string SID, short userGroupId, string xml, object userState) {
            if ((this.GetUsersByUserGroupOperationCompleted == null)) {
                this.GetUsersByUserGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUsersByUserGroupOperationCompleted);
            }
            this.InvokeAsync("GetUsersByUserGroup", new object[] {
                        currUserId,
                        SID,
                        userGroupId,
                        xml}, this.GetUsersByUserGroupOperationCompleted, userState);
        }
        
        private void OnGetUsersByUserGroupOperationCompleted(object arg) {
            if ((this.GetUsersByUserGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUsersByUserGroupCompleted(this, new GetUsersByUserGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetUsersByUserGroupAndOrganization", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetUsersByUserGroupAndOrganization(int currUserId, string SID, short userGroupId, int organizationId, ref string xml) {
            object[] results = this.Invoke("GetUsersByUserGroupAndOrganization", new object[] {
                        currUserId,
                        SID,
                        userGroupId,
                        organizationId,
                        xml});
            xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetUsersByUserGroupAndOrganizationAsync(int currUserId, string SID, short userGroupId, int organizationId, string xml) {
            this.GetUsersByUserGroupAndOrganizationAsync(currUserId, SID, userGroupId, organizationId, xml, null);
        }
        
        /// <remarks/>
        public void GetUsersByUserGroupAndOrganizationAsync(int currUserId, string SID, short userGroupId, int organizationId, string xml, object userState) {
            if ((this.GetUsersByUserGroupAndOrganizationOperationCompleted == null)) {
                this.GetUsersByUserGroupAndOrganizationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUsersByUserGroupAndOrganizationOperationCompleted);
            }
            this.InvokeAsync("GetUsersByUserGroupAndOrganization", new object[] {
                        currUserId,
                        SID,
                        userGroupId,
                        organizationId,
                        xml}, this.GetUsersByUserGroupAndOrganizationOperationCompleted, userState);
        }
        
        private void OnGetUsersByUserGroupAndOrganizationOperationCompleted(object arg) {
            if ((this.GetUsersByUserGroupAndOrganizationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUsersByUserGroupAndOrganizationCompleted(this, new GetUsersByUserGroupAndOrganizationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetAllUnassignedUsersToUserGroup", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetAllUnassignedUsersToUserGroup(int currUserId, string SID, short userGroupId, ref string xml) {
            object[] results = this.Invoke("GetAllUnassignedUsersToUserGroup", new object[] {
                        currUserId,
                        SID,
                        userGroupId,
                        xml});
            xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllUnassignedUsersToUserGroupAsync(int currUserId, string SID, short userGroupId, string xml) {
            this.GetAllUnassignedUsersToUserGroupAsync(currUserId, SID, userGroupId, xml, null);
        }
        
        /// <remarks/>
        public void GetAllUnassignedUsersToUserGroupAsync(int currUserId, string SID, short userGroupId, string xml, object userState) {
            if ((this.GetAllUnassignedUsersToUserGroupOperationCompleted == null)) {
                this.GetAllUnassignedUsersToUserGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllUnassignedUsersToUserGroupOperationCompleted);
            }
            this.InvokeAsync("GetAllUnassignedUsersToUserGroup", new object[] {
                        currUserId,
                        SID,
                        userGroupId,
                        xml}, this.GetAllUnassignedUsersToUserGroupOperationCompleted, userState);
        }
        
        private void OnGetAllUnassignedUsersToUserGroupOperationCompleted(object arg) {
            if ((this.GetAllUnassignedUsersToUserGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllUnassignedUsersToUserGroupCompleted(this, new GetAllUnassignedUsersToUserGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetAllUnassignedUsersToUserGroupByOrganization", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetAllUnassignedUsersToUserGroupByOrganization(int currUserId, string SID, short userGroupId, int organizationId, ref string xml) {
            object[] results = this.Invoke("GetAllUnassignedUsersToUserGroupByOrganization", new object[] {
                        currUserId,
                        SID,
                        userGroupId,
                        organizationId,
                        xml});
            xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllUnassignedUsersToUserGroupByOrganizationAsync(int currUserId, string SID, short userGroupId, int organizationId, string xml) {
            this.GetAllUnassignedUsersToUserGroupByOrganizationAsync(currUserId, SID, userGroupId, organizationId, xml, null);
        }
        
        /// <remarks/>
        public void GetAllUnassignedUsersToUserGroupByOrganizationAsync(int currUserId, string SID, short userGroupId, int organizationId, string xml, object userState) {
            if ((this.GetAllUnassignedUsersToUserGroupByOrganizationOperationCompleted == null)) {
                this.GetAllUnassignedUsersToUserGroupByOrganizationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllUnassignedUsersToUserGroupByOrganizationOperationCompleted);
            }
            this.InvokeAsync("GetAllUnassignedUsersToUserGroupByOrganization", new object[] {
                        currUserId,
                        SID,
                        userGroupId,
                        organizationId,
                        xml}, this.GetAllUnassignedUsersToUserGroupByOrganizationOperationCompleted, userState);
        }
        
        private void OnGetAllUnassignedUsersToUserGroupByOrganizationOperationCompleted(object arg) {
            if ((this.GetAllUnassignedUsersToUserGroupByOrganizationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllUnassignedUsersToUserGroupByOrganizationCompleted(this, new GetAllUnassignedUsersToUserGroupByOrganizationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetAllUserGroups", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetAllUserGroups(int currUserId, string SID, ref string xml) {
            object[] results = this.Invoke("GetAllUserGroups", new object[] {
                        currUserId,
                        SID,
                        xml});
            xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllUserGroupsAsync(int currUserId, string SID, string xml) {
            this.GetAllUserGroupsAsync(currUserId, SID, xml, null);
        }
        
        /// <remarks/>
        public void GetAllUserGroupsAsync(int currUserId, string SID, string xml, object userState) {
            if ((this.GetAllUserGroupsOperationCompleted == null)) {
                this.GetAllUserGroupsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllUserGroupsOperationCompleted);
            }
            this.InvokeAsync("GetAllUserGroups", new object[] {
                        currUserId,
                        SID,
                        xml}, this.GetAllUserGroupsOperationCompleted, userState);
        }
        
        private void OnGetAllUserGroupsOperationCompleted(object arg) {
            if ((this.GetAllUserGroupsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllUserGroupsCompleted(this, new GetAllUserGroupsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetUserGroups", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetUserGroups(int currUserId, string SID, bool includeHgiAdmin, ref string xml) {
            object[] results = this.Invoke("GetUserGroups", new object[] {
                        currUserId,
                        SID,
                        includeHgiAdmin,
                        xml});
            xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserGroupsAsync(int currUserId, string SID, bool includeHgiAdmin, string xml) {
            this.GetUserGroupsAsync(currUserId, SID, includeHgiAdmin, xml, null);
        }
        
        /// <remarks/>
        public void GetUserGroupsAsync(int currUserId, string SID, bool includeHgiAdmin, string xml, object userState) {
            if ((this.GetUserGroupsOperationCompleted == null)) {
                this.GetUserGroupsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserGroupsOperationCompleted);
            }
            this.InvokeAsync("GetUserGroups", new object[] {
                        currUserId,
                        SID,
                        includeHgiAdmin,
                        xml}, this.GetUserGroupsOperationCompleted, userState);
        }
        
        private void OnGetUserGroupsOperationCompleted(object arg) {
            if ((this.GetUserGroupsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserGroupsCompleted(this, new GetUserGroupsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetAllUserGroupsByLang", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetAllUserGroupsByLang(int currUserId, string SID, string lang, ref string xml) {
            object[] results = this.Invoke("GetAllUserGroupsByLang", new object[] {
                        currUserId,
                        SID,
                        lang,
                        xml});
            xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllUserGroupsByLangAsync(int currUserId, string SID, string lang, string xml) {
            this.GetAllUserGroupsByLangAsync(currUserId, SID, lang, xml, null);
        }
        
        /// <remarks/>
        public void GetAllUserGroupsByLangAsync(int currUserId, string SID, string lang, string xml, object userState) {
            if ((this.GetAllUserGroupsByLangOperationCompleted == null)) {
                this.GetAllUserGroupsByLangOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllUserGroupsByLangOperationCompleted);
            }
            this.InvokeAsync("GetAllUserGroupsByLang", new object[] {
                        currUserId,
                        SID,
                        lang,
                        xml}, this.GetAllUserGroupsByLangOperationCompleted, userState);
        }
        
        private void OnGetAllUserGroupsByLangOperationCompleted(object arg) {
            if ((this.GetAllUserGroupsByLangCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllUserGroupsByLangCompleted(this, new GetAllUserGroupsByLangCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetUserPermissionsXML", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetUserPermissionsXML(int userId, string SID, ref string xml) {
            object[] results = this.Invoke("GetUserPermissionsXML", new object[] {
                        userId,
                        SID,
                        xml});
            xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserPermissionsXMLAsync(int userId, string SID, string xml) {
            this.GetUserPermissionsXMLAsync(userId, SID, xml, null);
        }
        
        /// <remarks/>
        public void GetUserPermissionsXMLAsync(int userId, string SID, string xml, object userState) {
            if ((this.GetUserPermissionsXMLOperationCompleted == null)) {
                this.GetUserPermissionsXMLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserPermissionsXMLOperationCompleted);
            }
            this.InvokeAsync("GetUserPermissionsXML", new object[] {
                        userId,
                        SID,
                        xml}, this.GetUserPermissionsXMLOperationCompleted, userState);
        }
        
        private void OnGetUserPermissionsXMLOperationCompleted(object arg) {
            if ((this.GetUserPermissionsXMLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserPermissionsXMLCompleted(this, new GetUserPermissionsXMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetUserLastLogin", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetUserLastLogin(int userId, string SID, int loginUserId, ref string xml) {
            object[] results = this.Invoke("GetUserLastLogin", new object[] {
                        userId,
                        SID,
                        loginUserId,
                        xml});
            xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserLastLoginAsync(int userId, string SID, int loginUserId, string xml) {
            this.GetUserLastLoginAsync(userId, SID, loginUserId, xml, null);
        }
        
        /// <remarks/>
        public void GetUserLastLoginAsync(int userId, string SID, int loginUserId, string xml, object userState) {
            if ((this.GetUserLastLoginOperationCompleted == null)) {
                this.GetUserLastLoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserLastLoginOperationCompleted);
            }
            this.InvokeAsync("GetUserLastLogin", new object[] {
                        userId,
                        SID,
                        loginUserId,
                        xml}, this.GetUserLastLoginOperationCompleted, userState);
        }
        
        private void OnGetUserLastLoginOperationCompleted(object arg) {
            if ((this.GetUserLastLoginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserLastLoginCompleted(this, new GetUserLastLoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetAllNotificationsForUserId", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetAllNotificationsForUserId(int userId, string SID, string fromDateTime, string toDateTime, ref string xml) {
            object[] results = this.Invoke("GetAllNotificationsForUserId", new object[] {
                        userId,
                        SID,
                        fromDateTime,
                        toDateTime,
                        xml});
            xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllNotificationsForUserIdAsync(int userId, string SID, string fromDateTime, string toDateTime, string xml) {
            this.GetAllNotificationsForUserIdAsync(userId, SID, fromDateTime, toDateTime, xml, null);
        }
        
        /// <remarks/>
        public void GetAllNotificationsForUserIdAsync(int userId, string SID, string fromDateTime, string toDateTime, string xml, object userState) {
            if ((this.GetAllNotificationsForUserIdOperationCompleted == null)) {
                this.GetAllNotificationsForUserIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllNotificationsForUserIdOperationCompleted);
            }
            this.InvokeAsync("GetAllNotificationsForUserId", new object[] {
                        userId,
                        SID,
                        fromDateTime,
                        toDateTime,
                        xml}, this.GetAllNotificationsForUserIdOperationCompleted, userState);
        }
        
        private void OnGetAllNotificationsForUserIdOperationCompleted(object arg) {
            if ((this.GetAllNotificationsForUserIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllNotificationsForUserIdCompleted(this, new GetAllNotificationsForUserIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetUsersDashboards", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetUsersDashboards(int userId, string SID, ref string xml) {
            object[] results = this.Invoke("GetUsersDashboards", new object[] {
                        userId,
                        SID,
                        xml});
            xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetUsersDashboardsAsync(int userId, string SID, string xml) {
            this.GetUsersDashboardsAsync(userId, SID, xml, null);
        }
        
        /// <remarks/>
        public void GetUsersDashboardsAsync(int userId, string SID, string xml, object userState) {
            if ((this.GetUsersDashboardsOperationCompleted == null)) {
                this.GetUsersDashboardsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUsersDashboardsOperationCompleted);
            }
            this.InvokeAsync("GetUsersDashboards", new object[] {
                        userId,
                        SID,
                        xml}, this.GetUsersDashboardsOperationCompleted, userState);
        }
        
        private void OnGetUsersDashboardsOperationCompleted(object arg) {
            if ((this.GetUsersDashboardsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUsersDashboardsCompleted(this, new GetUsersDashboardsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetDashboardTypes", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetDashboardTypes(int userId, string SID, ref string xml) {
            object[] results = this.Invoke("GetDashboardTypes", new object[] {
                        userId,
                        SID,
                        xml});
            xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetDashboardTypesAsync(int userId, string SID, string xml) {
            this.GetDashboardTypesAsync(userId, SID, xml, null);
        }
        
        /// <remarks/>
        public void GetDashboardTypesAsync(int userId, string SID, string xml, object userState) {
            if ((this.GetDashboardTypesOperationCompleted == null)) {
                this.GetDashboardTypesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDashboardTypesOperationCompleted);
            }
            this.InvokeAsync("GetDashboardTypes", new object[] {
                        userId,
                        SID,
                        xml}, this.GetDashboardTypesOperationCompleted, userState);
        }
        
        private void OnGetDashboardTypesOperationCompleted(object arg) {
            if ((this.GetDashboardTypesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDashboardTypesCompleted(this, new GetDashboardTypesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetUserGroupOperationsByType", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetUserGroupOperationsByType(int userId, string SID, int userGroupId, short operationType, bool showAssigned, ref string xml) {
            object[] results = this.Invoke("GetUserGroupOperationsByType", new object[] {
                        userId,
                        SID,
                        userGroupId,
                        operationType,
                        showAssigned,
                        xml});
            xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserGroupOperationsByTypeAsync(int userId, string SID, int userGroupId, short operationType, bool showAssigned, string xml) {
            this.GetUserGroupOperationsByTypeAsync(userId, SID, userGroupId, operationType, showAssigned, xml, null);
        }
        
        /// <remarks/>
        public void GetUserGroupOperationsByTypeAsync(int userId, string SID, int userGroupId, short operationType, bool showAssigned, string xml, object userState) {
            if ((this.GetUserGroupOperationsByTypeOperationCompleted == null)) {
                this.GetUserGroupOperationsByTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserGroupOperationsByTypeOperationCompleted);
            }
            this.InvokeAsync("GetUserGroupOperationsByType", new object[] {
                        userId,
                        SID,
                        userGroupId,
                        operationType,
                        showAssigned,
                        xml}, this.GetUserGroupOperationsByTypeOperationCompleted, userState);
        }
        
        private void OnGetUserGroupOperationsByTypeOperationCompleted(object arg) {
            if ((this.GetUserGroupOperationsByTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserGroupOperationsByTypeCompleted(this, new GetUserGroupOperationsByTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetUserPreferencesXMLCompletedEventHandler(object sender, GetUserPreferencesXMLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserPreferencesXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserPreferencesXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void AddUserPreferenceCompletedEventHandler(object sender, AddUserPreferenceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddUserPreferenceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddUserPreferenceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void UpdateUserPreferenceCompletedEventHandler(object sender, UpdateUserPreferenceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateUserPreferenceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateUserPreferenceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void DeleteUserPreferencesCompletedEventHandler(object sender, DeleteUserPreferencesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteUserPreferencesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteUserPreferencesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int rowsAffected {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void DeleteUserPreferenceCompletedEventHandler(object sender, DeleteUserPreferenceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteUserPreferenceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteUserPreferenceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int rowsAffected {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void UserPreference_Add_UpdateCompletedEventHandler(object sender, UserPreference_Add_UpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UserPreference_Add_UpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UserPreference_Add_UpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetAssignedGroupsByUserCompletedEventHandler(object sender, GetAssignedGroupsByUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAssignedGroupsByUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAssignedGroupsByUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetUserInfoByUserIdCompletedEventHandler(object sender, GetUserInfoByUserIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserInfoByUserIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserInfoByUserIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetUserInfoByIdCompletedEventHandler(object sender, GetUserInfoByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserInfoByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserInfoByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ChangeUserPasswordByUserNameCompletedEventHandler(object sender, ChangeUserPasswordByUserNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChangeUserPasswordByUserNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ChangeUserPasswordByUserNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ResetPasswordBySuperUserCompletedEventHandler(object sender, ResetPasswordBySuperUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ResetPasswordBySuperUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ResetPasswordBySuperUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ValidateLockedUserCompletedEventHandler(object sender, ValidateLockedUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValidateLockedUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ValidateLockedUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void AddNewUserCompletedEventHandler(object sender, AddNewUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddNewUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddNewUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void DeleteUserByUserIdCompletedEventHandler(object sender, DeleteUserByUserIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteUserByUserIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteUserByUserIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void UpdateInfoCompletedEventHandler(object sender, UpdateInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void UpdateUserInfoCompletedEventHandler(object sender, UpdateUserInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateUserInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateUserInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void RecordUserActionCompletedEventHandler(object sender, RecordUserActionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RecordUserActionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RecordUserActionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ValidatePasswordInLastEightCompletedEventHandler(object sender, ValidatePasswordInLastEightCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValidatePasswordInLastEightCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ValidatePasswordInLastEightCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void AddNewUserToGroupCompletedEventHandler(object sender, AddNewUserToGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddNewUserToGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddNewUserToGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void AddUserToGroupCompletedEventHandler(object sender, AddUserToGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddUserToGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddUserToGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void AssignUserToGroupCompletedEventHandler(object sender, AssignUserToGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AssignUserToGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AssignUserToGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void DeleteUserAssignmentCompletedEventHandler(object sender, DeleteUserAssignmentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteUserAssignmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteUserAssignmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetUsersByUserGroupCompletedEventHandler(object sender, GetUsersByUserGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUsersByUserGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUsersByUserGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetUsersByUserGroupAndOrganizationCompletedEventHandler(object sender, GetUsersByUserGroupAndOrganizationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUsersByUserGroupAndOrganizationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUsersByUserGroupAndOrganizationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetAllUnassignedUsersToUserGroupCompletedEventHandler(object sender, GetAllUnassignedUsersToUserGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllUnassignedUsersToUserGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllUnassignedUsersToUserGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetAllUnassignedUsersToUserGroupByOrganizationCompletedEventHandler(object sender, GetAllUnassignedUsersToUserGroupByOrganizationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllUnassignedUsersToUserGroupByOrganizationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllUnassignedUsersToUserGroupByOrganizationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetAllUserGroupsCompletedEventHandler(object sender, GetAllUserGroupsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllUserGroupsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllUserGroupsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetUserGroupsCompletedEventHandler(object sender, GetUserGroupsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserGroupsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserGroupsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetAllUserGroupsByLangCompletedEventHandler(object sender, GetAllUserGroupsByLangCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllUserGroupsByLangCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllUserGroupsByLangCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetUserPermissionsXMLCompletedEventHandler(object sender, GetUserPermissionsXMLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserPermissionsXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserPermissionsXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetUserLastLoginCompletedEventHandler(object sender, GetUserLastLoginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserLastLoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserLastLoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetAllNotificationsForUserIdCompletedEventHandler(object sender, GetAllNotificationsForUserIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllNotificationsForUserIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllNotificationsForUserIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetUsersDashboardsCompletedEventHandler(object sender, GetUsersDashboardsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUsersDashboardsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUsersDashboardsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetDashboardTypesCompletedEventHandler(object sender, GetDashboardTypesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDashboardTypesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDashboardTypesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetUserGroupOperationsByTypeCompletedEventHandler(object sender, GetUserGroupOperationsByTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserGroupOperationsByTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserGroupOperationsByTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
}

#pragma warning restore 1591