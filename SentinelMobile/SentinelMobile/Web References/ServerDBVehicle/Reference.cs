//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.18444.
// 
#pragma warning disable 1591

namespace SentinelMobile.ServerDBVehicle {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="DBVehicleSoap", Namespace="http://www.sentinelfm.com")]
    public partial class DBVehicle : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetLastVCROffDelayFromHistoryByLicensePlateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLastVCROffDelayFromHistoryByBoxIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLastBoxSetupFromHistoryByLicensePlateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLastBoxSetupFromHistoryByBoxIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLastBoxSetupFromHistoryByLicensePlateExtendedOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLastBoxSetupFromHistoryByBoxIdExtendedOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLastBoxStatusFromHistoryByLicensePlateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLastBoxStatusFromHistoryByBoxIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLastBoxStatusFromHistoryByLicensePlateExtendedOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLastBoxStatusFromHistoryByBoxIdExtendedOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLastGeoZoneIDsFromHistoryByLicensePlateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLastGeoZoneIDsFromHistoryByBoxIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLastUploadFirmwareStatusFromHistoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLastUploadFirmwareMessageFromHistoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateBoxStreetAddressInHistoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLastBoxMessageFromHistoryByLicensePlateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLastBoxMessageFromHistoryByBoxIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetVehicleMaintenanceInfoXMLOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddVehicleMaintenanceInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateVehicleMaintenanceInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateVehicleEngineMaintenanceInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateVehicleMaintenanceShortInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateVehicleEngineMaintenanceShortInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddVehicleMaintenanceHstOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddVehicleEngineMaintenanceHstOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateVehicleMaintenanceHstOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetVehicleMaintenanceHistoryXMLOperationCompleted;
        
        private System.Threading.SendOrPostCallback VehicleMaintenancePlan_AddOperationCompleted;
        
        private System.Threading.SendOrPostCallback VehicleMaintenancePlan_UpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback VehicleMaintenancePlan_DeleteAllOperationCompleted;
        
        private System.Threading.SendOrPostCallback VehicleMaintenancePlan_DeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback VehicleMaintenancePlan_CloseOperationCompleted;
        
        private System.Threading.SendOrPostCallback VehicleMaintenancePlanExtended_CloseOperationCompleted;
        
        private System.Threading.SendOrPostCallback VehicleMaintenancePlan_GetAllOperationCompleted;
        
        private System.Threading.SendOrPostCallback VehicleMaintenancePlan_GetAllByLangOperationCompleted;
        
        private System.Threading.SendOrPostCallback VehicleMaintenancePlan_GetByTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback VehicleMaintenancePlan_GetByTypeLangOperationCompleted;
        
        private System.Threading.SendOrPostCallback VehicleMaintenancePlan_GetOperationCompleted;
        
        private System.Threading.SendOrPostCallback VehicleMaintenancePlanHistory_GetAllOperationCompleted;
        
        private System.Threading.SendOrPostCallback VehicleOperationTypes_GetOperationCompleted;
        
        private System.Threading.SendOrPostCallback VehicleMaintenance_UpdateEngineHoursOperationCompleted;
        
        private System.Threading.SendOrPostCallback VehicleMaintenance_GetInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMDTInfoByTypeIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDTCCodesDescriptionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBoxId4BBOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetVehicleExtraServiceHistoryByVehicleIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback VehicleExtraServiceHistory_Add_UpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetJ1708CodesVehicleFleetOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBoxExtraInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStateMileagePerVehicleOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddMdtOTAOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPostedSpeedServiceConfigurationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetVehicleInfoXMLOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetVehicleAdditionalInfoXMLOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get3rdPartyVehicleAdditionalInfoXMLOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetVehicleWorkingHoursXMLOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLastOdometerFromHistoryByBoxIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLastEEPROMDataFromHistoryByBoxIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetVehicleInfoXMLByVehicleIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetVehicleInfoXMLByBoxIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateVehicleInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateVehicleAdditionalInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback Update3rdPartyVehicleAdditionalInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateVehicleWorkingHoursOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateVehicleInformationOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddVehicleOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddVehicleWorkingHoursOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteVehicleWorkingHoursOperationCompleted;
        
        private System.Threading.SendOrPostCallback AssignVehicleOperationCompleted;
        
        private System.Threading.SendOrPostCallback AssignVehicleToBoxOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteVehicleOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetVehicleAutoAdjustDayLightSavingOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetVehicleSensorsXMLOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetVehicleSensorsXMLByLangOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetVehicleSensorsXMLByBoxIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBoxIDByLicensePlateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBoxIDByVehicleDescriptionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBoxChannelsInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetVehicleSensorsByBoxIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetVehicleSensorsByLicencePlateOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateSensorByLicencePlateOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateSensorNameByLicencePlateOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteVehicleSensorsByBoxIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteVehicleSensorsByLicencePlateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSensorsInfoByBoxOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSensorProfileByBoxOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetVehicleCommandsXMLOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetVehicleCommandsXMLByLangOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetVehicleCommandsXMLByBoxIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCommandProtocolTypesInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOutputProtocolTypesInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetVehicleMultiProtocolCommandsXMLOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMultiVehicleCommandsXMLByLangOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetVehicleOutputsXMLOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetVehicleOutputsXMLByLangOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetVehicleOutputsXMLByBoxIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateOutputByLicencePlateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllSupportedMessagesByBoxIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllSupportedMessagesByBoxIdByLangOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateMsgSeverityOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllSupportedMessagesByFwChIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteActiveVehicleAssignmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllUnassignedVehiclesByOrganizationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllAssignedToVehicleGeozonesInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllAssignedGeozonesToVehicleOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllUnassignedToVehicleGeozonesInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetGeozoneSeverityOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteGeozoneFromVehicleOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteGeozoneFromVehicleByVehicleIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddGeozoneToVehicleOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMaxGeozonesByVehicleIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCommInfoByBoxIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBoxConfigInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetActiveVehicleCfgInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLastCommunicationByBoxIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLastBoxCommunicationInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetVehicleLastKnownPositionInfoByBoxIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateBoxFeaturesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBoxConfigFeaturesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCommInfoByBoxAndFwChnlOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDefaultCommInfoByFwChnlOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLastControllerStatusFromHistoryByLicensePlateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLastControllerStatusFromHistoryByBoxIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLastTARModeFromHistoryByLicensePlateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLastTARModeFromHistoryByBoxIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLastKeyFobStatusFromHistoryByLicensePlateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLastKeyFobStatusFromHistoryByBoxIdOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public DBVehicle() {
            this.Url = global::SentinelMobile.Properties.Settings.Default.SentinelMobile_ServerDBVehicle_DBVehicle;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetLastVCROffDelayFromHistoryByLicensePlateCompletedEventHandler GetLastVCROffDelayFromHistoryByLicensePlateCompleted;
        
        /// <remarks/>
        public event GetLastVCROffDelayFromHistoryByBoxIdCompletedEventHandler GetLastVCROffDelayFromHistoryByBoxIdCompleted;
        
        /// <remarks/>
        public event GetLastBoxSetupFromHistoryByLicensePlateCompletedEventHandler GetLastBoxSetupFromHistoryByLicensePlateCompleted;
        
        /// <remarks/>
        public event GetLastBoxSetupFromHistoryByBoxIdCompletedEventHandler GetLastBoxSetupFromHistoryByBoxIdCompleted;
        
        /// <remarks/>
        public event GetLastBoxSetupFromHistoryByLicensePlateExtendedCompletedEventHandler GetLastBoxSetupFromHistoryByLicensePlateExtendedCompleted;
        
        /// <remarks/>
        public event GetLastBoxSetupFromHistoryByBoxIdExtendedCompletedEventHandler GetLastBoxSetupFromHistoryByBoxIdExtendedCompleted;
        
        /// <remarks/>
        public event GetLastBoxStatusFromHistoryByLicensePlateCompletedEventHandler GetLastBoxStatusFromHistoryByLicensePlateCompleted;
        
        /// <remarks/>
        public event GetLastBoxStatusFromHistoryByBoxIdCompletedEventHandler GetLastBoxStatusFromHistoryByBoxIdCompleted;
        
        /// <remarks/>
        public event GetLastBoxStatusFromHistoryByLicensePlateExtendedCompletedEventHandler GetLastBoxStatusFromHistoryByLicensePlateExtendedCompleted;
        
        /// <remarks/>
        public event GetLastBoxStatusFromHistoryByBoxIdExtendedCompletedEventHandler GetLastBoxStatusFromHistoryByBoxIdExtendedCompleted;
        
        /// <remarks/>
        public event GetLastGeoZoneIDsFromHistoryByLicensePlateCompletedEventHandler GetLastGeoZoneIDsFromHistoryByLicensePlateCompleted;
        
        /// <remarks/>
        public event GetLastGeoZoneIDsFromHistoryByBoxIdCompletedEventHandler GetLastGeoZoneIDsFromHistoryByBoxIdCompleted;
        
        /// <remarks/>
        public event GetLastUploadFirmwareStatusFromHistoryCompletedEventHandler GetLastUploadFirmwareStatusFromHistoryCompleted;
        
        /// <remarks/>
        public event GetLastUploadFirmwareMessageFromHistoryCompletedEventHandler GetLastUploadFirmwareMessageFromHistoryCompleted;
        
        /// <remarks/>
        public event UpdateBoxStreetAddressInHistoryCompletedEventHandler UpdateBoxStreetAddressInHistoryCompleted;
        
        /// <remarks/>
        public event GetLastBoxMessageFromHistoryByLicensePlateCompletedEventHandler GetLastBoxMessageFromHistoryByLicensePlateCompleted;
        
        /// <remarks/>
        public event GetLastBoxMessageFromHistoryByBoxIdCompletedEventHandler GetLastBoxMessageFromHistoryByBoxIdCompleted;
        
        /// <remarks/>
        public event GetVehicleMaintenanceInfoXMLCompletedEventHandler GetVehicleMaintenanceInfoXMLCompleted;
        
        /// <remarks/>
        public event AddVehicleMaintenanceInfoCompletedEventHandler AddVehicleMaintenanceInfoCompleted;
        
        /// <remarks/>
        public event UpdateVehicleMaintenanceInfoCompletedEventHandler UpdateVehicleMaintenanceInfoCompleted;
        
        /// <remarks/>
        public event UpdateVehicleEngineMaintenanceInfoCompletedEventHandler UpdateVehicleEngineMaintenanceInfoCompleted;
        
        /// <remarks/>
        public event UpdateVehicleMaintenanceShortInfoCompletedEventHandler UpdateVehicleMaintenanceShortInfoCompleted;
        
        /// <remarks/>
        public event UpdateVehicleEngineMaintenanceShortInfoCompletedEventHandler UpdateVehicleEngineMaintenanceShortInfoCompleted;
        
        /// <remarks/>
        public event AddVehicleMaintenanceHstCompletedEventHandler AddVehicleMaintenanceHstCompleted;
        
        /// <remarks/>
        public event AddVehicleEngineMaintenanceHstCompletedEventHandler AddVehicleEngineMaintenanceHstCompleted;
        
        /// <remarks/>
        public event UpdateVehicleMaintenanceHstCompletedEventHandler UpdateVehicleMaintenanceHstCompleted;
        
        /// <remarks/>
        public event GetVehicleMaintenanceHistoryXMLCompletedEventHandler GetVehicleMaintenanceHistoryXMLCompleted;
        
        /// <remarks/>
        public event VehicleMaintenancePlan_AddCompletedEventHandler VehicleMaintenancePlan_AddCompleted;
        
        /// <remarks/>
        public event VehicleMaintenancePlan_UpdateCompletedEventHandler VehicleMaintenancePlan_UpdateCompleted;
        
        /// <remarks/>
        public event VehicleMaintenancePlan_DeleteAllCompletedEventHandler VehicleMaintenancePlan_DeleteAllCompleted;
        
        /// <remarks/>
        public event VehicleMaintenancePlan_DeleteCompletedEventHandler VehicleMaintenancePlan_DeleteCompleted;
        
        /// <remarks/>
        public event VehicleMaintenancePlan_CloseCompletedEventHandler VehicleMaintenancePlan_CloseCompleted;
        
        /// <remarks/>
        public event VehicleMaintenancePlanExtended_CloseCompletedEventHandler VehicleMaintenancePlanExtended_CloseCompleted;
        
        /// <remarks/>
        public event VehicleMaintenancePlan_GetAllCompletedEventHandler VehicleMaintenancePlan_GetAllCompleted;
        
        /// <remarks/>
        public event VehicleMaintenancePlan_GetAllByLangCompletedEventHandler VehicleMaintenancePlan_GetAllByLangCompleted;
        
        /// <remarks/>
        public event VehicleMaintenancePlan_GetByTypeCompletedEventHandler VehicleMaintenancePlan_GetByTypeCompleted;
        
        /// <remarks/>
        public event VehicleMaintenancePlan_GetByTypeLangCompletedEventHandler VehicleMaintenancePlan_GetByTypeLangCompleted;
        
        /// <remarks/>
        public event VehicleMaintenancePlan_GetCompletedEventHandler VehicleMaintenancePlan_GetCompleted;
        
        /// <remarks/>
        public event VehicleMaintenancePlanHistory_GetAllCompletedEventHandler VehicleMaintenancePlanHistory_GetAllCompleted;
        
        /// <remarks/>
        public event VehicleOperationTypes_GetCompletedEventHandler VehicleOperationTypes_GetCompleted;
        
        /// <remarks/>
        public event VehicleMaintenance_UpdateEngineHoursCompletedEventHandler VehicleMaintenance_UpdateEngineHoursCompleted;
        
        /// <remarks/>
        public event VehicleMaintenance_GetInfoCompletedEventHandler VehicleMaintenance_GetInfoCompleted;
        
        /// <remarks/>
        public event GetMDTInfoByTypeIdCompletedEventHandler GetMDTInfoByTypeIdCompleted;
        
        /// <remarks/>
        public event GetDTCCodesDescriptionCompletedEventHandler GetDTCCodesDescriptionCompleted;
        
        /// <remarks/>
        public event GetBoxId4BBCompletedEventHandler GetBoxId4BBCompleted;
        
        /// <remarks/>
        public event GetVehicleExtraServiceHistoryByVehicleIdCompletedEventHandler GetVehicleExtraServiceHistoryByVehicleIdCompleted;
        
        /// <remarks/>
        public event VehicleExtraServiceHistory_Add_UpdateCompletedEventHandler VehicleExtraServiceHistory_Add_UpdateCompleted;
        
        /// <remarks/>
        public event GetJ1708CodesVehicleFleetCompletedEventHandler GetJ1708CodesVehicleFleetCompleted;
        
        /// <remarks/>
        public event GetBoxExtraInfoCompletedEventHandler GetBoxExtraInfoCompleted;
        
        /// <remarks/>
        public event GetStateMileagePerVehicleCompletedEventHandler GetStateMileagePerVehicleCompleted;
        
        /// <remarks/>
        public event AddMdtOTACompletedEventHandler AddMdtOTACompleted;
        
        /// <remarks/>
        public event GetPostedSpeedServiceConfigurationCompletedEventHandler GetPostedSpeedServiceConfigurationCompleted;
        
        /// <remarks/>
        public event GetVehicleInfoXMLCompletedEventHandler GetVehicleInfoXMLCompleted;
        
        /// <remarks/>
        public event GetVehicleAdditionalInfoXMLCompletedEventHandler GetVehicleAdditionalInfoXMLCompleted;
        
        /// <remarks/>
        public event Get3rdPartyVehicleAdditionalInfoXMLCompletedEventHandler Get3rdPartyVehicleAdditionalInfoXMLCompleted;
        
        /// <remarks/>
        public event GetVehicleWorkingHoursXMLCompletedEventHandler GetVehicleWorkingHoursXMLCompleted;
        
        /// <remarks/>
        public event GetLastOdometerFromHistoryByBoxIdCompletedEventHandler GetLastOdometerFromHistoryByBoxIdCompleted;
        
        /// <remarks/>
        public event GetLastEEPROMDataFromHistoryByBoxIdCompletedEventHandler GetLastEEPROMDataFromHistoryByBoxIdCompleted;
        
        /// <remarks/>
        public event GetVehicleInfoXMLByVehicleIdCompletedEventHandler GetVehicleInfoXMLByVehicleIdCompleted;
        
        /// <remarks/>
        public event GetVehicleInfoXMLByBoxIdCompletedEventHandler GetVehicleInfoXMLByBoxIdCompleted;
        
        /// <remarks/>
        public event UpdateVehicleInfoCompletedEventHandler UpdateVehicleInfoCompleted;
        
        /// <remarks/>
        public event UpdateVehicleAdditionalInfoCompletedEventHandler UpdateVehicleAdditionalInfoCompleted;
        
        /// <remarks/>
        public event Update3rdPartyVehicleAdditionalInfoCompletedEventHandler Update3rdPartyVehicleAdditionalInfoCompleted;
        
        /// <remarks/>
        public event UpdateVehicleWorkingHoursCompletedEventHandler UpdateVehicleWorkingHoursCompleted;
        
        /// <remarks/>
        public event UpdateVehicleInformationCompletedEventHandler UpdateVehicleInformationCompleted;
        
        /// <remarks/>
        public event AddVehicleCompletedEventHandler AddVehicleCompleted;
        
        /// <remarks/>
        public event AddVehicleWorkingHoursCompletedEventHandler AddVehicleWorkingHoursCompleted;
        
        /// <remarks/>
        public event DeleteVehicleWorkingHoursCompletedEventHandler DeleteVehicleWorkingHoursCompleted;
        
        /// <remarks/>
        public event AssignVehicleCompletedEventHandler AssignVehicleCompleted;
        
        /// <remarks/>
        public event AssignVehicleToBoxCompletedEventHandler AssignVehicleToBoxCompleted;
        
        /// <remarks/>
        public event DeleteVehicleCompletedEventHandler DeleteVehicleCompleted;
        
        /// <remarks/>
        public event SetVehicleAutoAdjustDayLightSavingCompletedEventHandler SetVehicleAutoAdjustDayLightSavingCompleted;
        
        /// <remarks/>
        public event GetVehicleSensorsXMLCompletedEventHandler GetVehicleSensorsXMLCompleted;
        
        /// <remarks/>
        public event GetVehicleSensorsXMLByLangCompletedEventHandler GetVehicleSensorsXMLByLangCompleted;
        
        /// <remarks/>
        public event GetVehicleSensorsXMLByBoxIdCompletedEventHandler GetVehicleSensorsXMLByBoxIdCompleted;
        
        /// <remarks/>
        public event GetBoxIDByLicensePlateCompletedEventHandler GetBoxIDByLicensePlateCompleted;
        
        /// <remarks/>
        public event GetBoxIDByVehicleDescriptionCompletedEventHandler GetBoxIDByVehicleDescriptionCompleted;
        
        /// <remarks/>
        public event GetBoxChannelsInfoCompletedEventHandler GetBoxChannelsInfoCompleted;
        
        /// <remarks/>
        public event SetVehicleSensorsByBoxIdCompletedEventHandler SetVehicleSensorsByBoxIdCompleted;
        
        /// <remarks/>
        public event SetVehicleSensorsByLicencePlateCompletedEventHandler SetVehicleSensorsByLicencePlateCompleted;
        
        /// <remarks/>
        public event UpdateSensorByLicencePlateCompletedEventHandler UpdateSensorByLicencePlateCompleted;
        
        /// <remarks/>
        public event UpdateSensorNameByLicencePlateCompletedEventHandler UpdateSensorNameByLicencePlateCompleted;
        
        /// <remarks/>
        public event DeleteVehicleSensorsByBoxIdCompletedEventHandler DeleteVehicleSensorsByBoxIdCompleted;
        
        /// <remarks/>
        public event DeleteVehicleSensorsByLicencePlateCompletedEventHandler DeleteVehicleSensorsByLicencePlateCompleted;
        
        /// <remarks/>
        public event GetSensorsInfoByBoxCompletedEventHandler GetSensorsInfoByBoxCompleted;
        
        /// <remarks/>
        public event GetSensorProfileByBoxCompletedEventHandler GetSensorProfileByBoxCompleted;
        
        /// <remarks/>
        public event GetVehicleCommandsXMLCompletedEventHandler GetVehicleCommandsXMLCompleted;
        
        /// <remarks/>
        public event GetVehicleCommandsXMLByLangCompletedEventHandler GetVehicleCommandsXMLByLangCompleted;
        
        /// <remarks/>
        public event GetVehicleCommandsXMLByBoxIdCompletedEventHandler GetVehicleCommandsXMLByBoxIdCompleted;
        
        /// <remarks/>
        public event GetCommandProtocolTypesInfoCompletedEventHandler GetCommandProtocolTypesInfoCompleted;
        
        /// <remarks/>
        public event GetOutputProtocolTypesInfoCompletedEventHandler GetOutputProtocolTypesInfoCompleted;
        
        /// <remarks/>
        public event GetVehicleMultiProtocolCommandsXMLCompletedEventHandler GetVehicleMultiProtocolCommandsXMLCompleted;
        
        /// <remarks/>
        public event GetMultiVehicleCommandsXMLByLangCompletedEventHandler GetMultiVehicleCommandsXMLByLangCompleted;
        
        /// <remarks/>
        public event GetVehicleOutputsXMLCompletedEventHandler GetVehicleOutputsXMLCompleted;
        
        /// <remarks/>
        public event GetVehicleOutputsXMLByLangCompletedEventHandler GetVehicleOutputsXMLByLangCompleted;
        
        /// <remarks/>
        public event GetVehicleOutputsXMLByBoxIdCompletedEventHandler GetVehicleOutputsXMLByBoxIdCompleted;
        
        /// <remarks/>
        public event UpdateOutputByLicencePlateCompletedEventHandler UpdateOutputByLicencePlateCompleted;
        
        /// <remarks/>
        public event GetAllSupportedMessagesByBoxIdCompletedEventHandler GetAllSupportedMessagesByBoxIdCompleted;
        
        /// <remarks/>
        public event GetAllSupportedMessagesByBoxIdByLangCompletedEventHandler GetAllSupportedMessagesByBoxIdByLangCompleted;
        
        /// <remarks/>
        public event UpdateMsgSeverityCompletedEventHandler UpdateMsgSeverityCompleted;
        
        /// <remarks/>
        public event GetAllSupportedMessagesByFwChIdCompletedEventHandler GetAllSupportedMessagesByFwChIdCompleted;
        
        /// <remarks/>
        public event DeleteActiveVehicleAssignmentCompletedEventHandler DeleteActiveVehicleAssignmentCompleted;
        
        /// <remarks/>
        public event GetAllUnassignedVehiclesByOrganizationCompletedEventHandler GetAllUnassignedVehiclesByOrganizationCompleted;
        
        /// <remarks/>
        public event GetAllAssignedToVehicleGeozonesInfoCompletedEventHandler GetAllAssignedToVehicleGeozonesInfoCompleted;
        
        /// <remarks/>
        public event GetAllAssignedGeozonesToVehicleCompletedEventHandler GetAllAssignedGeozonesToVehicleCompleted;
        
        /// <remarks/>
        public event GetAllUnassignedToVehicleGeozonesInfoCompletedEventHandler GetAllUnassignedToVehicleGeozonesInfoCompleted;
        
        /// <remarks/>
        public event SetGeozoneSeverityCompletedEventHandler SetGeozoneSeverityCompleted;
        
        /// <remarks/>
        public event DeleteGeozoneFromVehicleCompletedEventHandler DeleteGeozoneFromVehicleCompleted;
        
        /// <remarks/>
        public event DeleteGeozoneFromVehicleByVehicleIdCompletedEventHandler DeleteGeozoneFromVehicleByVehicleIdCompleted;
        
        /// <remarks/>
        public event AddGeozoneToVehicleCompletedEventHandler AddGeozoneToVehicleCompleted;
        
        /// <remarks/>
        public event GetMaxGeozonesByVehicleIdCompletedEventHandler GetMaxGeozonesByVehicleIdCompleted;
        
        /// <remarks/>
        public event GetCommInfoByBoxIdCompletedEventHandler GetCommInfoByBoxIdCompleted;
        
        /// <remarks/>
        public event GetBoxConfigInfoCompletedEventHandler GetBoxConfigInfoCompleted;
        
        /// <remarks/>
        public event GetActiveVehicleCfgInfoCompletedEventHandler GetActiveVehicleCfgInfoCompleted;
        
        /// <remarks/>
        public event GetLastCommunicationByBoxIdCompletedEventHandler GetLastCommunicationByBoxIdCompleted;
        
        /// <remarks/>
        public event GetLastBoxCommunicationInfoCompletedEventHandler GetLastBoxCommunicationInfoCompleted;
        
        /// <remarks/>
        public event GetVehicleLastKnownPositionInfoByBoxIdCompletedEventHandler GetVehicleLastKnownPositionInfoByBoxIdCompleted;
        
        /// <remarks/>
        public event UpdateBoxFeaturesCompletedEventHandler UpdateBoxFeaturesCompleted;
        
        /// <remarks/>
        public event GetBoxConfigFeaturesCompletedEventHandler GetBoxConfigFeaturesCompleted;
        
        /// <remarks/>
        public event GetCommInfoByBoxAndFwChnlCompletedEventHandler GetCommInfoByBoxAndFwChnlCompleted;
        
        /// <remarks/>
        public event GetDefaultCommInfoByFwChnlCompletedEventHandler GetDefaultCommInfoByFwChnlCompleted;
        
        /// <remarks/>
        public event GetLastControllerStatusFromHistoryByLicensePlateCompletedEventHandler GetLastControllerStatusFromHistoryByLicensePlateCompleted;
        
        /// <remarks/>
        public event GetLastControllerStatusFromHistoryByBoxIdCompletedEventHandler GetLastControllerStatusFromHistoryByBoxIdCompleted;
        
        /// <remarks/>
        public event GetLastTARModeFromHistoryByLicensePlateCompletedEventHandler GetLastTARModeFromHistoryByLicensePlateCompleted;
        
        /// <remarks/>
        public event GetLastTARModeFromHistoryByBoxIdCompletedEventHandler GetLastTARModeFromHistoryByBoxIdCompleted;
        
        /// <remarks/>
        public event GetLastKeyFobStatusFromHistoryByLicensePlateCompletedEventHandler GetLastKeyFobStatusFromHistoryByLicensePlateCompleted;
        
        /// <remarks/>
        public event GetLastKeyFobStatusFromHistoryByBoxIdCompletedEventHandler GetLastKeyFobStatusFromHistoryByBoxIdCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetLastVCROffDelayFromHistoryByLicensePlate", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetLastVCROffDelayFromHistoryByLicensePlate(int userId, string SID, string licensePlate, ref string xml) {
            object[] results = this.Invoke("GetLastVCROffDelayFromHistoryByLicensePlate", new object[] {
                        userId,
                        SID,
                        licensePlate,
                        xml});
            xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetLastVCROffDelayFromHistoryByLicensePlateAsync(int userId, string SID, string licensePlate, string xml) {
            this.GetLastVCROffDelayFromHistoryByLicensePlateAsync(userId, SID, licensePlate, xml, null);
        }
        
        /// <remarks/>
        public void GetLastVCROffDelayFromHistoryByLicensePlateAsync(int userId, string SID, string licensePlate, string xml, object userState) {
            if ((this.GetLastVCROffDelayFromHistoryByLicensePlateOperationCompleted == null)) {
                this.GetLastVCROffDelayFromHistoryByLicensePlateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLastVCROffDelayFromHistoryByLicensePlateOperationCompleted);
            }
            this.InvokeAsync("GetLastVCROffDelayFromHistoryByLicensePlate", new object[] {
                        userId,
                        SID,
                        licensePlate,
                        xml}, this.GetLastVCROffDelayFromHistoryByLicensePlateOperationCompleted, userState);
        }
        
        private void OnGetLastVCROffDelayFromHistoryByLicensePlateOperationCompleted(object arg) {
            if ((this.GetLastVCROffDelayFromHistoryByLicensePlateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLastVCROffDelayFromHistoryByLicensePlateCompleted(this, new GetLastVCROffDelayFromHistoryByLicensePlateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetLastVCROffDelayFromHistoryByBoxId", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetLastVCROffDelayFromHistoryByBoxId(int userId, string SID, int boxId, ref string xml) {
            object[] results = this.Invoke("GetLastVCROffDelayFromHistoryByBoxId", new object[] {
                        userId,
                        SID,
                        boxId,
                        xml});
            xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetLastVCROffDelayFromHistoryByBoxIdAsync(int userId, string SID, int boxId, string xml) {
            this.GetLastVCROffDelayFromHistoryByBoxIdAsync(userId, SID, boxId, xml, null);
        }
        
        /// <remarks/>
        public void GetLastVCROffDelayFromHistoryByBoxIdAsync(int userId, string SID, int boxId, string xml, object userState) {
            if ((this.GetLastVCROffDelayFromHistoryByBoxIdOperationCompleted == null)) {
                this.GetLastVCROffDelayFromHistoryByBoxIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLastVCROffDelayFromHistoryByBoxIdOperationCompleted);
            }
            this.InvokeAsync("GetLastVCROffDelayFromHistoryByBoxId", new object[] {
                        userId,
                        SID,
                        boxId,
                        xml}, this.GetLastVCROffDelayFromHistoryByBoxIdOperationCompleted, userState);
        }
        
        private void OnGetLastVCROffDelayFromHistoryByBoxIdOperationCompleted(object arg) {
            if ((this.GetLastVCROffDelayFromHistoryByBoxIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLastVCROffDelayFromHistoryByBoxIdCompleted(this, new GetLastVCROffDelayFromHistoryByBoxIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetLastBoxSetupFromHistoryByLicensePlate", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetLastBoxSetupFromHistoryByLicensePlate(int userId, string SID, string licensePlate, ref string xml) {
            object[] results = this.Invoke("GetLastBoxSetupFromHistoryByLicensePlate", new object[] {
                        userId,
                        SID,
                        licensePlate,
                        xml});
            xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetLastBoxSetupFromHistoryByLicensePlateAsync(int userId, string SID, string licensePlate, string xml) {
            this.GetLastBoxSetupFromHistoryByLicensePlateAsync(userId, SID, licensePlate, xml, null);
        }
        
        /// <remarks/>
        public void GetLastBoxSetupFromHistoryByLicensePlateAsync(int userId, string SID, string licensePlate, string xml, object userState) {
            if ((this.GetLastBoxSetupFromHistoryByLicensePlateOperationCompleted == null)) {
                this.GetLastBoxSetupFromHistoryByLicensePlateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLastBoxSetupFromHistoryByLicensePlateOperationCompleted);
            }
            this.InvokeAsync("GetLastBoxSetupFromHistoryByLicensePlate", new object[] {
                        userId,
                        SID,
                        licensePlate,
                        xml}, this.GetLastBoxSetupFromHistoryByLicensePlateOperationCompleted, userState);
        }
        
        private void OnGetLastBoxSetupFromHistoryByLicensePlateOperationCompleted(object arg) {
            if ((this.GetLastBoxSetupFromHistoryByLicensePlateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLastBoxSetupFromHistoryByLicensePlateCompleted(this, new GetLastBoxSetupFromHistoryByLicensePlateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetLastBoxSetupFromHistoryByBoxId", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetLastBoxSetupFromHistoryByBoxId(int userId, string SID, int boxId, ref string xml) {
            object[] results = this.Invoke("GetLastBoxSetupFromHistoryByBoxId", new object[] {
                        userId,
                        SID,
                        boxId,
                        xml});
            xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetLastBoxSetupFromHistoryByBoxIdAsync(int userId, string SID, int boxId, string xml) {
            this.GetLastBoxSetupFromHistoryByBoxIdAsync(userId, SID, boxId, xml, null);
        }
        
        /// <remarks/>
        public void GetLastBoxSetupFromHistoryByBoxIdAsync(int userId, string SID, int boxId, string xml, object userState) {
            if ((this.GetLastBoxSetupFromHistoryByBoxIdOperationCompleted == null)) {
                this.GetLastBoxSetupFromHistoryByBoxIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLastBoxSetupFromHistoryByBoxIdOperationCompleted);
            }
            this.InvokeAsync("GetLastBoxSetupFromHistoryByBoxId", new object[] {
                        userId,
                        SID,
                        boxId,
                        xml}, this.GetLastBoxSetupFromHistoryByBoxIdOperationCompleted, userState);
        }
        
        private void OnGetLastBoxSetupFromHistoryByBoxIdOperationCompleted(object arg) {
            if ((this.GetLastBoxSetupFromHistoryByBoxIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLastBoxSetupFromHistoryByBoxIdCompleted(this, new GetLastBoxSetupFromHistoryByBoxIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetLastBoxSetupFromHistoryByLicensePlateExtended", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetLastBoxSetupFromHistoryByLicensePlateExtended(int userId, string SID, string licensePlate, ref string xml, bool isExtendedVersion) {
            object[] results = this.Invoke("GetLastBoxSetupFromHistoryByLicensePlateExtended", new object[] {
                        userId,
                        SID,
                        licensePlate,
                        xml,
                        isExtendedVersion});
            xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetLastBoxSetupFromHistoryByLicensePlateExtendedAsync(int userId, string SID, string licensePlate, string xml, bool isExtendedVersion) {
            this.GetLastBoxSetupFromHistoryByLicensePlateExtendedAsync(userId, SID, licensePlate, xml, isExtendedVersion, null);
        }
        
        /// <remarks/>
        public void GetLastBoxSetupFromHistoryByLicensePlateExtendedAsync(int userId, string SID, string licensePlate, string xml, bool isExtendedVersion, object userState) {
            if ((this.GetLastBoxSetupFromHistoryByLicensePlateExtendedOperationCompleted == null)) {
                this.GetLastBoxSetupFromHistoryByLicensePlateExtendedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLastBoxSetupFromHistoryByLicensePlateExtendedOperationCompleted);
            }
            this.InvokeAsync("GetLastBoxSetupFromHistoryByLicensePlateExtended", new object[] {
                        userId,
                        SID,
                        licensePlate,
                        xml,
                        isExtendedVersion}, this.GetLastBoxSetupFromHistoryByLicensePlateExtendedOperationCompleted, userState);
        }
        
        private void OnGetLastBoxSetupFromHistoryByLicensePlateExtendedOperationCompleted(object arg) {
            if ((this.GetLastBoxSetupFromHistoryByLicensePlateExtendedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLastBoxSetupFromHistoryByLicensePlateExtendedCompleted(this, new GetLastBoxSetupFromHistoryByLicensePlateExtendedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetLastBoxSetupFromHistoryByBoxIdExtended", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetLastBoxSetupFromHistoryByBoxIdExtended(int userId, string SID, int boxId, ref string xml, bool isExtendedVersion) {
            object[] results = this.Invoke("GetLastBoxSetupFromHistoryByBoxIdExtended", new object[] {
                        userId,
                        SID,
                        boxId,
                        xml,
                        isExtendedVersion});
            xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetLastBoxSetupFromHistoryByBoxIdExtendedAsync(int userId, string SID, int boxId, string xml, bool isExtendedVersion) {
            this.GetLastBoxSetupFromHistoryByBoxIdExtendedAsync(userId, SID, boxId, xml, isExtendedVersion, null);
        }
        
        /// <remarks/>
        public void GetLastBoxSetupFromHistoryByBoxIdExtendedAsync(int userId, string SID, int boxId, string xml, bool isExtendedVersion, object userState) {
            if ((this.GetLastBoxSetupFromHistoryByBoxIdExtendedOperationCompleted == null)) {
                this.GetLastBoxSetupFromHistoryByBoxIdExtendedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLastBoxSetupFromHistoryByBoxIdExtendedOperationCompleted);
            }
            this.InvokeAsync("GetLastBoxSetupFromHistoryByBoxIdExtended", new object[] {
                        userId,
                        SID,
                        boxId,
                        xml,
                        isExtendedVersion}, this.GetLastBoxSetupFromHistoryByBoxIdExtendedOperationCompleted, userState);
        }
        
        private void OnGetLastBoxSetupFromHistoryByBoxIdExtendedOperationCompleted(object arg) {
            if ((this.GetLastBoxSetupFromHistoryByBoxIdExtendedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLastBoxSetupFromHistoryByBoxIdExtendedCompleted(this, new GetLastBoxSetupFromHistoryByBoxIdExtendedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetLastBoxStatusFromHistoryByLicensePlate", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetLastBoxStatusFromHistoryByLicensePlate(int userId, string SID, string licensePlate, ref string xml) {
            object[] results = this.Invoke("GetLastBoxStatusFromHistoryByLicensePlate", new object[] {
                        userId,
                        SID,
                        licensePlate,
                        xml});
            xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetLastBoxStatusFromHistoryByLicensePlateAsync(int userId, string SID, string licensePlate, string xml) {
            this.GetLastBoxStatusFromHistoryByLicensePlateAsync(userId, SID, licensePlate, xml, null);
        }
        
        /// <remarks/>
        public void GetLastBoxStatusFromHistoryByLicensePlateAsync(int userId, string SID, string licensePlate, string xml, object userState) {
            if ((this.GetLastBoxStatusFromHistoryByLicensePlateOperationCompleted == null)) {
                this.GetLastBoxStatusFromHistoryByLicensePlateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLastBoxStatusFromHistoryByLicensePlateOperationCompleted);
            }
            this.InvokeAsync("GetLastBoxStatusFromHistoryByLicensePlate", new object[] {
                        userId,
                        SID,
                        licensePlate,
                        xml}, this.GetLastBoxStatusFromHistoryByLicensePlateOperationCompleted, userState);
        }
        
        private void OnGetLastBoxStatusFromHistoryByLicensePlateOperationCompleted(object arg) {
            if ((this.GetLastBoxStatusFromHistoryByLicensePlateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLastBoxStatusFromHistoryByLicensePlateCompleted(this, new GetLastBoxStatusFromHistoryByLicensePlateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetLastBoxStatusFromHistoryByBoxId", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetLastBoxStatusFromHistoryByBoxId(int userId, string SID, int boxId, ref string xml) {
            object[] results = this.Invoke("GetLastBoxStatusFromHistoryByBoxId", new object[] {
                        userId,
                        SID,
                        boxId,
                        xml});
            xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetLastBoxStatusFromHistoryByBoxIdAsync(int userId, string SID, int boxId, string xml) {
            this.GetLastBoxStatusFromHistoryByBoxIdAsync(userId, SID, boxId, xml, null);
        }
        
        /// <remarks/>
        public void GetLastBoxStatusFromHistoryByBoxIdAsync(int userId, string SID, int boxId, string xml, object userState) {
            if ((this.GetLastBoxStatusFromHistoryByBoxIdOperationCompleted == null)) {
                this.GetLastBoxStatusFromHistoryByBoxIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLastBoxStatusFromHistoryByBoxIdOperationCompleted);
            }
            this.InvokeAsync("GetLastBoxStatusFromHistoryByBoxId", new object[] {
                        userId,
                        SID,
                        boxId,
                        xml}, this.GetLastBoxStatusFromHistoryByBoxIdOperationCompleted, userState);
        }
        
        private void OnGetLastBoxStatusFromHistoryByBoxIdOperationCompleted(object arg) {
            if ((this.GetLastBoxStatusFromHistoryByBoxIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLastBoxStatusFromHistoryByBoxIdCompleted(this, new GetLastBoxStatusFromHistoryByBoxIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetLastBoxStatusFromHistoryByLicensePlateExtended", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetLastBoxStatusFromHistoryByLicensePlateExtended(int userId, string SID, string licensePlate, ref string xml, bool isExtendedVersion) {
            object[] results = this.Invoke("GetLastBoxStatusFromHistoryByLicensePlateExtended", new object[] {
                        userId,
                        SID,
                        licensePlate,
                        xml,
                        isExtendedVersion});
            xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetLastBoxStatusFromHistoryByLicensePlateExtendedAsync(int userId, string SID, string licensePlate, string xml, bool isExtendedVersion) {
            this.GetLastBoxStatusFromHistoryByLicensePlateExtendedAsync(userId, SID, licensePlate, xml, isExtendedVersion, null);
        }
        
        /// <remarks/>
        public void GetLastBoxStatusFromHistoryByLicensePlateExtendedAsync(int userId, string SID, string licensePlate, string xml, bool isExtendedVersion, object userState) {
            if ((this.GetLastBoxStatusFromHistoryByLicensePlateExtendedOperationCompleted == null)) {
                this.GetLastBoxStatusFromHistoryByLicensePlateExtendedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLastBoxStatusFromHistoryByLicensePlateExtendedOperationCompleted);
            }
            this.InvokeAsync("GetLastBoxStatusFromHistoryByLicensePlateExtended", new object[] {
                        userId,
                        SID,
                        licensePlate,
                        xml,
                        isExtendedVersion}, this.GetLastBoxStatusFromHistoryByLicensePlateExtendedOperationCompleted, userState);
        }
        
        private void OnGetLastBoxStatusFromHistoryByLicensePlateExtendedOperationCompleted(object arg) {
            if ((this.GetLastBoxStatusFromHistoryByLicensePlateExtendedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLastBoxStatusFromHistoryByLicensePlateExtendedCompleted(this, new GetLastBoxStatusFromHistoryByLicensePlateExtendedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetLastBoxStatusFromHistoryByBoxIdExtended", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetLastBoxStatusFromHistoryByBoxIdExtended(int userId, string SID, int boxId, ref string xml, bool isExtendedVersion) {
            object[] results = this.Invoke("GetLastBoxStatusFromHistoryByBoxIdExtended", new object[] {
                        userId,
                        SID,
                        boxId,
                        xml,
                        isExtendedVersion});
            xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetLastBoxStatusFromHistoryByBoxIdExtendedAsync(int userId, string SID, int boxId, string xml, bool isExtendedVersion) {
            this.GetLastBoxStatusFromHistoryByBoxIdExtendedAsync(userId, SID, boxId, xml, isExtendedVersion, null);
        }
        
        /// <remarks/>
        public void GetLastBoxStatusFromHistoryByBoxIdExtendedAsync(int userId, string SID, int boxId, string xml, bool isExtendedVersion, object userState) {
            if ((this.GetLastBoxStatusFromHistoryByBoxIdExtendedOperationCompleted == null)) {
                this.GetLastBoxStatusFromHistoryByBoxIdExtendedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLastBoxStatusFromHistoryByBoxIdExtendedOperationCompleted);
            }
            this.InvokeAsync("GetLastBoxStatusFromHistoryByBoxIdExtended", new object[] {
                        userId,
                        SID,
                        boxId,
                        xml,
                        isExtendedVersion}, this.GetLastBoxStatusFromHistoryByBoxIdExtendedOperationCompleted, userState);
        }
        
        private void OnGetLastBoxStatusFromHistoryByBoxIdExtendedOperationCompleted(object arg) {
            if ((this.GetLastBoxStatusFromHistoryByBoxIdExtendedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLastBoxStatusFromHistoryByBoxIdExtendedCompleted(this, new GetLastBoxStatusFromHistoryByBoxIdExtendedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetLastGeoZoneIDsFromHistoryByLicensePlate", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetLastGeoZoneIDsFromHistoryByLicensePlate(int userId, string SID, string licensePlate, ref string xml) {
            object[] results = this.Invoke("GetLastGeoZoneIDsFromHistoryByLicensePlate", new object[] {
                        userId,
                        SID,
                        licensePlate,
                        xml});
            xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetLastGeoZoneIDsFromHistoryByLicensePlateAsync(int userId, string SID, string licensePlate, string xml) {
            this.GetLastGeoZoneIDsFromHistoryByLicensePlateAsync(userId, SID, licensePlate, xml, null);
        }
        
        /// <remarks/>
        public void GetLastGeoZoneIDsFromHistoryByLicensePlateAsync(int userId, string SID, string licensePlate, string xml, object userState) {
            if ((this.GetLastGeoZoneIDsFromHistoryByLicensePlateOperationCompleted == null)) {
                this.GetLastGeoZoneIDsFromHistoryByLicensePlateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLastGeoZoneIDsFromHistoryByLicensePlateOperationCompleted);
            }
            this.InvokeAsync("GetLastGeoZoneIDsFromHistoryByLicensePlate", new object[] {
                        userId,
                        SID,
                        licensePlate,
                        xml}, this.GetLastGeoZoneIDsFromHistoryByLicensePlateOperationCompleted, userState);
        }
        
        private void OnGetLastGeoZoneIDsFromHistoryByLicensePlateOperationCompleted(object arg) {
            if ((this.GetLastGeoZoneIDsFromHistoryByLicensePlateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLastGeoZoneIDsFromHistoryByLicensePlateCompleted(this, new GetLastGeoZoneIDsFromHistoryByLicensePlateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetLastGeoZoneIDsFromHistoryByBoxId", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetLastGeoZoneIDsFromHistoryByBoxId(int userId, string SID, int boxId, ref string xml) {
            object[] results = this.Invoke("GetLastGeoZoneIDsFromHistoryByBoxId", new object[] {
                        userId,
                        SID,
                        boxId,
                        xml});
            xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetLastGeoZoneIDsFromHistoryByBoxIdAsync(int userId, string SID, int boxId, string xml) {
            this.GetLastGeoZoneIDsFromHistoryByBoxIdAsync(userId, SID, boxId, xml, null);
        }
        
        /// <remarks/>
        public void GetLastGeoZoneIDsFromHistoryByBoxIdAsync(int userId, string SID, int boxId, string xml, object userState) {
            if ((this.GetLastGeoZoneIDsFromHistoryByBoxIdOperationCompleted == null)) {
                this.GetLastGeoZoneIDsFromHistoryByBoxIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLastGeoZoneIDsFromHistoryByBoxIdOperationCompleted);
            }
            this.InvokeAsync("GetLastGeoZoneIDsFromHistoryByBoxId", new object[] {
                        userId,
                        SID,
                        boxId,
                        xml}, this.GetLastGeoZoneIDsFromHistoryByBoxIdOperationCompleted, userState);
        }
        
        private void OnGetLastGeoZoneIDsFromHistoryByBoxIdOperationCompleted(object arg) {
            if ((this.GetLastGeoZoneIDsFromHistoryByBoxIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLastGeoZoneIDsFromHistoryByBoxIdCompleted(this, new GetLastGeoZoneIDsFromHistoryByBoxIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetLastUploadFirmwareStatusFromHistory", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetLastUploadFirmwareStatusFromHistory(int userId, string SID, System.DateTime fromDateTime, string xmlBoxIDs, ref string xml) {
            object[] results = this.Invoke("GetLastUploadFirmwareStatusFromHistory", new object[] {
                        userId,
                        SID,
                        fromDateTime,
                        xmlBoxIDs,
                        xml});
            xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetLastUploadFirmwareStatusFromHistoryAsync(int userId, string SID, System.DateTime fromDateTime, string xmlBoxIDs, string xml) {
            this.GetLastUploadFirmwareStatusFromHistoryAsync(userId, SID, fromDateTime, xmlBoxIDs, xml, null);
        }
        
        /// <remarks/>
        public void GetLastUploadFirmwareStatusFromHistoryAsync(int userId, string SID, System.DateTime fromDateTime, string xmlBoxIDs, string xml, object userState) {
            if ((this.GetLastUploadFirmwareStatusFromHistoryOperationCompleted == null)) {
                this.GetLastUploadFirmwareStatusFromHistoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLastUploadFirmwareStatusFromHistoryOperationCompleted);
            }
            this.InvokeAsync("GetLastUploadFirmwareStatusFromHistory", new object[] {
                        userId,
                        SID,
                        fromDateTime,
                        xmlBoxIDs,
                        xml}, this.GetLastUploadFirmwareStatusFromHistoryOperationCompleted, userState);
        }
        
        private void OnGetLastUploadFirmwareStatusFromHistoryOperationCompleted(object arg) {
            if ((this.GetLastUploadFirmwareStatusFromHistoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLastUploadFirmwareStatusFromHistoryCompleted(this, new GetLastUploadFirmwareStatusFromHistoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetLastUploadFirmwareMessageFromHistory", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetLastUploadFirmwareMessageFromHistory(int userId, string SID, System.DateTime fromDateTime, string xmlBoxIDs, ref string xml) {
            object[] results = this.Invoke("GetLastUploadFirmwareMessageFromHistory", new object[] {
                        userId,
                        SID,
                        fromDateTime,
                        xmlBoxIDs,
                        xml});
            xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetLastUploadFirmwareMessageFromHistoryAsync(int userId, string SID, System.DateTime fromDateTime, string xmlBoxIDs, string xml) {
            this.GetLastUploadFirmwareMessageFromHistoryAsync(userId, SID, fromDateTime, xmlBoxIDs, xml, null);
        }
        
        /// <remarks/>
        public void GetLastUploadFirmwareMessageFromHistoryAsync(int userId, string SID, System.DateTime fromDateTime, string xmlBoxIDs, string xml, object userState) {
            if ((this.GetLastUploadFirmwareMessageFromHistoryOperationCompleted == null)) {
                this.GetLastUploadFirmwareMessageFromHistoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLastUploadFirmwareMessageFromHistoryOperationCompleted);
            }
            this.InvokeAsync("GetLastUploadFirmwareMessageFromHistory", new object[] {
                        userId,
                        SID,
                        fromDateTime,
                        xmlBoxIDs,
                        xml}, this.GetLastUploadFirmwareMessageFromHistoryOperationCompleted, userState);
        }
        
        private void OnGetLastUploadFirmwareMessageFromHistoryOperationCompleted(object arg) {
            if ((this.GetLastUploadFirmwareMessageFromHistoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLastUploadFirmwareMessageFromHistoryCompleted(this, new GetLastUploadFirmwareMessageFromHistoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/UpdateBoxStreetAddressInHistory", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateBoxStreetAddressInHistory(int userId, string SID, int boxId, System.DateTime originDateTime, string streetAddress, double latitude, double longitude) {
            object[] results = this.Invoke("UpdateBoxStreetAddressInHistory", new object[] {
                        userId,
                        SID,
                        boxId,
                        originDateTime,
                        streetAddress,
                        latitude,
                        longitude});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateBoxStreetAddressInHistoryAsync(int userId, string SID, int boxId, System.DateTime originDateTime, string streetAddress, double latitude, double longitude) {
            this.UpdateBoxStreetAddressInHistoryAsync(userId, SID, boxId, originDateTime, streetAddress, latitude, longitude, null);
        }
        
        /// <remarks/>
        public void UpdateBoxStreetAddressInHistoryAsync(int userId, string SID, int boxId, System.DateTime originDateTime, string streetAddress, double latitude, double longitude, object userState) {
            if ((this.UpdateBoxStreetAddressInHistoryOperationCompleted == null)) {
                this.UpdateBoxStreetAddressInHistoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateBoxStreetAddressInHistoryOperationCompleted);
            }
            this.InvokeAsync("UpdateBoxStreetAddressInHistory", new object[] {
                        userId,
                        SID,
                        boxId,
                        originDateTime,
                        streetAddress,
                        latitude,
                        longitude}, this.UpdateBoxStreetAddressInHistoryOperationCompleted, userState);
        }
        
        private void OnUpdateBoxStreetAddressInHistoryOperationCompleted(object arg) {
            if ((this.UpdateBoxStreetAddressInHistoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateBoxStreetAddressInHistoryCompleted(this, new UpdateBoxStreetAddressInHistoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetLastBoxMessageFromHistoryByLicensePlate", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetLastBoxMessageFromHistoryByLicensePlate(int userId, string SID, string licensePlate, int messageTypeCode, ref string xml) {
            object[] results = this.Invoke("GetLastBoxMessageFromHistoryByLicensePlate", new object[] {
                        userId,
                        SID,
                        licensePlate,
                        messageTypeCode,
                        xml});
            xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetLastBoxMessageFromHistoryByLicensePlateAsync(int userId, string SID, string licensePlate, int messageTypeCode, string xml) {
            this.GetLastBoxMessageFromHistoryByLicensePlateAsync(userId, SID, licensePlate, messageTypeCode, xml, null);
        }
        
        /// <remarks/>
        public void GetLastBoxMessageFromHistoryByLicensePlateAsync(int userId, string SID, string licensePlate, int messageTypeCode, string xml, object userState) {
            if ((this.GetLastBoxMessageFromHistoryByLicensePlateOperationCompleted == null)) {
                this.GetLastBoxMessageFromHistoryByLicensePlateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLastBoxMessageFromHistoryByLicensePlateOperationCompleted);
            }
            this.InvokeAsync("GetLastBoxMessageFromHistoryByLicensePlate", new object[] {
                        userId,
                        SID,
                        licensePlate,
                        messageTypeCode,
                        xml}, this.GetLastBoxMessageFromHistoryByLicensePlateOperationCompleted, userState);
        }
        
        private void OnGetLastBoxMessageFromHistoryByLicensePlateOperationCompleted(object arg) {
            if ((this.GetLastBoxMessageFromHistoryByLicensePlateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLastBoxMessageFromHistoryByLicensePlateCompleted(this, new GetLastBoxMessageFromHistoryByLicensePlateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetLastBoxMessageFromHistoryByBoxId", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetLastBoxMessageFromHistoryByBoxId(int userId, string SID, int boxId, int messageTypeCode, ref string xml) {
            object[] results = this.Invoke("GetLastBoxMessageFromHistoryByBoxId", new object[] {
                        userId,
                        SID,
                        boxId,
                        messageTypeCode,
                        xml});
            xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetLastBoxMessageFromHistoryByBoxIdAsync(int userId, string SID, int boxId, int messageTypeCode, string xml) {
            this.GetLastBoxMessageFromHistoryByBoxIdAsync(userId, SID, boxId, messageTypeCode, xml, null);
        }
        
        /// <remarks/>
        public void GetLastBoxMessageFromHistoryByBoxIdAsync(int userId, string SID, int boxId, int messageTypeCode, string xml, object userState) {
            if ((this.GetLastBoxMessageFromHistoryByBoxIdOperationCompleted == null)) {
                this.GetLastBoxMessageFromHistoryByBoxIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLastBoxMessageFromHistoryByBoxIdOperationCompleted);
            }
            this.InvokeAsync("GetLastBoxMessageFromHistoryByBoxId", new object[] {
                        userId,
                        SID,
                        boxId,
                        messageTypeCode,
                        xml}, this.GetLastBoxMessageFromHistoryByBoxIdOperationCompleted, userState);
        }
        
        private void OnGetLastBoxMessageFromHistoryByBoxIdOperationCompleted(object arg) {
            if ((this.GetLastBoxMessageFromHistoryByBoxIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLastBoxMessageFromHistoryByBoxIdCompleted(this, new GetLastBoxMessageFromHistoryByBoxIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetVehicleMaintenanceInfoXML", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetVehicleMaintenanceInfoXML(int userId, string SID, long vehicleId, ref string xml) {
            object[] results = this.Invoke("GetVehicleMaintenanceInfoXML", new object[] {
                        userId,
                        SID,
                        vehicleId,
                        xml});
            xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetVehicleMaintenanceInfoXMLAsync(int userId, string SID, long vehicleId, string xml) {
            this.GetVehicleMaintenanceInfoXMLAsync(userId, SID, vehicleId, xml, null);
        }
        
        /// <remarks/>
        public void GetVehicleMaintenanceInfoXMLAsync(int userId, string SID, long vehicleId, string xml, object userState) {
            if ((this.GetVehicleMaintenanceInfoXMLOperationCompleted == null)) {
                this.GetVehicleMaintenanceInfoXMLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetVehicleMaintenanceInfoXMLOperationCompleted);
            }
            this.InvokeAsync("GetVehicleMaintenanceInfoXML", new object[] {
                        userId,
                        SID,
                        vehicleId,
                        xml}, this.GetVehicleMaintenanceInfoXMLOperationCompleted, userState);
        }
        
        private void OnGetVehicleMaintenanceInfoXMLOperationCompleted(object arg) {
            if ((this.GetVehicleMaintenanceInfoXMLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetVehicleMaintenanceInfoXMLCompleted(this, new GetVehicleMaintenanceInfoXMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/AddVehicleMaintenanceInfo", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AddVehicleMaintenanceInfo(int userId, string SID, long vehicleId, double lastSrvOdo, double currentOdo, double maxSrvInterval, int lastSrvEngHrs, int currentEngHrs, int engHrsSrvInterval, string email, int timeZone, short dayLightSaving, short autoAdjustDayLightSaving, string nextServiceDescription) {
            object[] results = this.Invoke("AddVehicleMaintenanceInfo", new object[] {
                        userId,
                        SID,
                        vehicleId,
                        lastSrvOdo,
                        currentOdo,
                        maxSrvInterval,
                        lastSrvEngHrs,
                        currentEngHrs,
                        engHrsSrvInterval,
                        email,
                        timeZone,
                        dayLightSaving,
                        autoAdjustDayLightSaving,
                        nextServiceDescription});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AddVehicleMaintenanceInfoAsync(int userId, string SID, long vehicleId, double lastSrvOdo, double currentOdo, double maxSrvInterval, int lastSrvEngHrs, int currentEngHrs, int engHrsSrvInterval, string email, int timeZone, short dayLightSaving, short autoAdjustDayLightSaving, string nextServiceDescription) {
            this.AddVehicleMaintenanceInfoAsync(userId, SID, vehicleId, lastSrvOdo, currentOdo, maxSrvInterval, lastSrvEngHrs, currentEngHrs, engHrsSrvInterval, email, timeZone, dayLightSaving, autoAdjustDayLightSaving, nextServiceDescription, null);
        }
        
        /// <remarks/>
        public void AddVehicleMaintenanceInfoAsync(int userId, string SID, long vehicleId, double lastSrvOdo, double currentOdo, double maxSrvInterval, int lastSrvEngHrs, int currentEngHrs, int engHrsSrvInterval, string email, int timeZone, short dayLightSaving, short autoAdjustDayLightSaving, string nextServiceDescription, object userState) {
            if ((this.AddVehicleMaintenanceInfoOperationCompleted == null)) {
                this.AddVehicleMaintenanceInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddVehicleMaintenanceInfoOperationCompleted);
            }
            this.InvokeAsync("AddVehicleMaintenanceInfo", new object[] {
                        userId,
                        SID,
                        vehicleId,
                        lastSrvOdo,
                        currentOdo,
                        maxSrvInterval,
                        lastSrvEngHrs,
                        currentEngHrs,
                        engHrsSrvInterval,
                        email,
                        timeZone,
                        dayLightSaving,
                        autoAdjustDayLightSaving,
                        nextServiceDescription}, this.AddVehicleMaintenanceInfoOperationCompleted, userState);
        }
        
        private void OnAddVehicleMaintenanceInfoOperationCompleted(object arg) {
            if ((this.AddVehicleMaintenanceInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddVehicleMaintenanceInfoCompleted(this, new AddVehicleMaintenanceInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/UpdateVehicleMaintenanceInfo", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateVehicleMaintenanceInfo(int userId, string SID, long vehicleId, double lastSrvOdo, double currentOdo, double maxSrvInterval, string email, int timeZone, short dayLightSaving, short autoAdjustDayLightSaving, string nextServiceDescription) {
            object[] results = this.Invoke("UpdateVehicleMaintenanceInfo", new object[] {
                        userId,
                        SID,
                        vehicleId,
                        lastSrvOdo,
                        currentOdo,
                        maxSrvInterval,
                        email,
                        timeZone,
                        dayLightSaving,
                        autoAdjustDayLightSaving,
                        nextServiceDescription});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateVehicleMaintenanceInfoAsync(int userId, string SID, long vehicleId, double lastSrvOdo, double currentOdo, double maxSrvInterval, string email, int timeZone, short dayLightSaving, short autoAdjustDayLightSaving, string nextServiceDescription) {
            this.UpdateVehicleMaintenanceInfoAsync(userId, SID, vehicleId, lastSrvOdo, currentOdo, maxSrvInterval, email, timeZone, dayLightSaving, autoAdjustDayLightSaving, nextServiceDescription, null);
        }
        
        /// <remarks/>
        public void UpdateVehicleMaintenanceInfoAsync(int userId, string SID, long vehicleId, double lastSrvOdo, double currentOdo, double maxSrvInterval, string email, int timeZone, short dayLightSaving, short autoAdjustDayLightSaving, string nextServiceDescription, object userState) {
            if ((this.UpdateVehicleMaintenanceInfoOperationCompleted == null)) {
                this.UpdateVehicleMaintenanceInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateVehicleMaintenanceInfoOperationCompleted);
            }
            this.InvokeAsync("UpdateVehicleMaintenanceInfo", new object[] {
                        userId,
                        SID,
                        vehicleId,
                        lastSrvOdo,
                        currentOdo,
                        maxSrvInterval,
                        email,
                        timeZone,
                        dayLightSaving,
                        autoAdjustDayLightSaving,
                        nextServiceDescription}, this.UpdateVehicleMaintenanceInfoOperationCompleted, userState);
        }
        
        private void OnUpdateVehicleMaintenanceInfoOperationCompleted(object arg) {
            if ((this.UpdateVehicleMaintenanceInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateVehicleMaintenanceInfoCompleted(this, new UpdateVehicleMaintenanceInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/UpdateVehicleEngineMaintenanceInfo", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateVehicleEngineMaintenanceInfo(int userId, string SID, long vehicleId, int lastSrvEngHrs, int currentEngHrs, int engHrsSrvInterval, string email, int timeZone, short dayLightSaving, short autoAdjustDayLightSaving, string nextServiceDescription) {
            object[] results = this.Invoke("UpdateVehicleEngineMaintenanceInfo", new object[] {
                        userId,
                        SID,
                        vehicleId,
                        lastSrvEngHrs,
                        currentEngHrs,
                        engHrsSrvInterval,
                        email,
                        timeZone,
                        dayLightSaving,
                        autoAdjustDayLightSaving,
                        nextServiceDescription});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateVehicleEngineMaintenanceInfoAsync(int userId, string SID, long vehicleId, int lastSrvEngHrs, int currentEngHrs, int engHrsSrvInterval, string email, int timeZone, short dayLightSaving, short autoAdjustDayLightSaving, string nextServiceDescription) {
            this.UpdateVehicleEngineMaintenanceInfoAsync(userId, SID, vehicleId, lastSrvEngHrs, currentEngHrs, engHrsSrvInterval, email, timeZone, dayLightSaving, autoAdjustDayLightSaving, nextServiceDescription, null);
        }
        
        /// <remarks/>
        public void UpdateVehicleEngineMaintenanceInfoAsync(int userId, string SID, long vehicleId, int lastSrvEngHrs, int currentEngHrs, int engHrsSrvInterval, string email, int timeZone, short dayLightSaving, short autoAdjustDayLightSaving, string nextServiceDescription, object userState) {
            if ((this.UpdateVehicleEngineMaintenanceInfoOperationCompleted == null)) {
                this.UpdateVehicleEngineMaintenanceInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateVehicleEngineMaintenanceInfoOperationCompleted);
            }
            this.InvokeAsync("UpdateVehicleEngineMaintenanceInfo", new object[] {
                        userId,
                        SID,
                        vehicleId,
                        lastSrvEngHrs,
                        currentEngHrs,
                        engHrsSrvInterval,
                        email,
                        timeZone,
                        dayLightSaving,
                        autoAdjustDayLightSaving,
                        nextServiceDescription}, this.UpdateVehicleEngineMaintenanceInfoOperationCompleted, userState);
        }
        
        private void OnUpdateVehicleEngineMaintenanceInfoOperationCompleted(object arg) {
            if ((this.UpdateVehicleEngineMaintenanceInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateVehicleEngineMaintenanceInfoCompleted(this, new UpdateVehicleEngineMaintenanceInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/UpdateVehicleMaintenanceShortInfo", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateVehicleMaintenanceShortInfo(int userId, string SID, long vehicleId, double lastSrvOdo, string nextServiceDescription) {
            object[] results = this.Invoke("UpdateVehicleMaintenanceShortInfo", new object[] {
                        userId,
                        SID,
                        vehicleId,
                        lastSrvOdo,
                        nextServiceDescription});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateVehicleMaintenanceShortInfoAsync(int userId, string SID, long vehicleId, double lastSrvOdo, string nextServiceDescription) {
            this.UpdateVehicleMaintenanceShortInfoAsync(userId, SID, vehicleId, lastSrvOdo, nextServiceDescription, null);
        }
        
        /// <remarks/>
        public void UpdateVehicleMaintenanceShortInfoAsync(int userId, string SID, long vehicleId, double lastSrvOdo, string nextServiceDescription, object userState) {
            if ((this.UpdateVehicleMaintenanceShortInfoOperationCompleted == null)) {
                this.UpdateVehicleMaintenanceShortInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateVehicleMaintenanceShortInfoOperationCompleted);
            }
            this.InvokeAsync("UpdateVehicleMaintenanceShortInfo", new object[] {
                        userId,
                        SID,
                        vehicleId,
                        lastSrvOdo,
                        nextServiceDescription}, this.UpdateVehicleMaintenanceShortInfoOperationCompleted, userState);
        }
        
        private void OnUpdateVehicleMaintenanceShortInfoOperationCompleted(object arg) {
            if ((this.UpdateVehicleMaintenanceShortInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateVehicleMaintenanceShortInfoCompleted(this, new UpdateVehicleMaintenanceShortInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/UpdateVehicleEngineMaintenanceShortInfo", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateVehicleEngineMaintenanceShortInfo(int userId, string SID, long vehicleId, int lastSrvEngHrs, string nextServiceDescription) {
            object[] results = this.Invoke("UpdateVehicleEngineMaintenanceShortInfo", new object[] {
                        userId,
                        SID,
                        vehicleId,
                        lastSrvEngHrs,
                        nextServiceDescription});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateVehicleEngineMaintenanceShortInfoAsync(int userId, string SID, long vehicleId, int lastSrvEngHrs, string nextServiceDescription) {
            this.UpdateVehicleEngineMaintenanceShortInfoAsync(userId, SID, vehicleId, lastSrvEngHrs, nextServiceDescription, null);
        }
        
        /// <remarks/>
        public void UpdateVehicleEngineMaintenanceShortInfoAsync(int userId, string SID, long vehicleId, int lastSrvEngHrs, string nextServiceDescription, object userState) {
            if ((this.UpdateVehicleEngineMaintenanceShortInfoOperationCompleted == null)) {
                this.UpdateVehicleEngineMaintenanceShortInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateVehicleEngineMaintenanceShortInfoOperationCompleted);
            }
            this.InvokeAsync("UpdateVehicleEngineMaintenanceShortInfo", new object[] {
                        userId,
                        SID,
                        vehicleId,
                        lastSrvEngHrs,
                        nextServiceDescription}, this.UpdateVehicleEngineMaintenanceShortInfoOperationCompleted, userState);
        }
        
        private void OnUpdateVehicleEngineMaintenanceShortInfoOperationCompleted(object arg) {
            if ((this.UpdateVehicleEngineMaintenanceShortInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateVehicleEngineMaintenanceShortInfoCompleted(this, new UpdateVehicleEngineMaintenanceShortInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/AddVehicleMaintenanceHst", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AddVehicleMaintenanceHst(int userId, string SID, long vehicleId, System.DateTime serviceDateTime, string serviceDescription, double serviceOdo) {
            object[] results = this.Invoke("AddVehicleMaintenanceHst", new object[] {
                        userId,
                        SID,
                        vehicleId,
                        serviceDateTime,
                        serviceDescription,
                        serviceOdo});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AddVehicleMaintenanceHstAsync(int userId, string SID, long vehicleId, System.DateTime serviceDateTime, string serviceDescription, double serviceOdo) {
            this.AddVehicleMaintenanceHstAsync(userId, SID, vehicleId, serviceDateTime, serviceDescription, serviceOdo, null);
        }
        
        /// <remarks/>
        public void AddVehicleMaintenanceHstAsync(int userId, string SID, long vehicleId, System.DateTime serviceDateTime, string serviceDescription, double serviceOdo, object userState) {
            if ((this.AddVehicleMaintenanceHstOperationCompleted == null)) {
                this.AddVehicleMaintenanceHstOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddVehicleMaintenanceHstOperationCompleted);
            }
            this.InvokeAsync("AddVehicleMaintenanceHst", new object[] {
                        userId,
                        SID,
                        vehicleId,
                        serviceDateTime,
                        serviceDescription,
                        serviceOdo}, this.AddVehicleMaintenanceHstOperationCompleted, userState);
        }
        
        private void OnAddVehicleMaintenanceHstOperationCompleted(object arg) {
            if ((this.AddVehicleMaintenanceHstCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddVehicleMaintenanceHstCompleted(this, new AddVehicleMaintenanceHstCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/AddVehicleEngineMaintenanceHst", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AddVehicleEngineMaintenanceHst(int userId, string SID, long vehicleId, System.DateTime serviceDateTime, string serviceDescription, int serviceEngineHours) {
            object[] results = this.Invoke("AddVehicleEngineMaintenanceHst", new object[] {
                        userId,
                        SID,
                        vehicleId,
                        serviceDateTime,
                        serviceDescription,
                        serviceEngineHours});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AddVehicleEngineMaintenanceHstAsync(int userId, string SID, long vehicleId, System.DateTime serviceDateTime, string serviceDescription, int serviceEngineHours) {
            this.AddVehicleEngineMaintenanceHstAsync(userId, SID, vehicleId, serviceDateTime, serviceDescription, serviceEngineHours, null);
        }
        
        /// <remarks/>
        public void AddVehicleEngineMaintenanceHstAsync(int userId, string SID, long vehicleId, System.DateTime serviceDateTime, string serviceDescription, int serviceEngineHours, object userState) {
            if ((this.AddVehicleEngineMaintenanceHstOperationCompleted == null)) {
                this.AddVehicleEngineMaintenanceHstOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddVehicleEngineMaintenanceHstOperationCompleted);
            }
            this.InvokeAsync("AddVehicleEngineMaintenanceHst", new object[] {
                        userId,
                        SID,
                        vehicleId,
                        serviceDateTime,
                        serviceDescription,
                        serviceEngineHours}, this.AddVehicleEngineMaintenanceHstOperationCompleted, userState);
        }
        
        private void OnAddVehicleEngineMaintenanceHstOperationCompleted(object arg) {
            if ((this.AddVehicleEngineMaintenanceHstCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddVehicleEngineMaintenanceHstCompleted(this, new AddVehicleEngineMaintenanceHstCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/UpdateVehicleMaintenanceHst", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateVehicleMaintenanceHst(int userId, string SID, long vehicleId, System.DateTime serviceDateTime, string serviceDescription, double serviceOdo) {
            object[] results = this.Invoke("UpdateVehicleMaintenanceHst", new object[] {
                        userId,
                        SID,
                        vehicleId,
                        serviceDateTime,
                        serviceDescription,
                        serviceOdo});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateVehicleMaintenanceHstAsync(int userId, string SID, long vehicleId, System.DateTime serviceDateTime, string serviceDescription, double serviceOdo) {
            this.UpdateVehicleMaintenanceHstAsync(userId, SID, vehicleId, serviceDateTime, serviceDescription, serviceOdo, null);
        }
        
        /// <remarks/>
        public void UpdateVehicleMaintenanceHstAsync(int userId, string SID, long vehicleId, System.DateTime serviceDateTime, string serviceDescription, double serviceOdo, object userState) {
            if ((this.UpdateVehicleMaintenanceHstOperationCompleted == null)) {
                this.UpdateVehicleMaintenanceHstOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateVehicleMaintenanceHstOperationCompleted);
            }
            this.InvokeAsync("UpdateVehicleMaintenanceHst", new object[] {
                        userId,
                        SID,
                        vehicleId,
                        serviceDateTime,
                        serviceDescription,
                        serviceOdo}, this.UpdateVehicleMaintenanceHstOperationCompleted, userState);
        }
        
        private void OnUpdateVehicleMaintenanceHstOperationCompleted(object arg) {
            if ((this.UpdateVehicleMaintenanceHstCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateVehicleMaintenanceHstCompleted(this, new UpdateVehicleMaintenanceHstCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetVehicleMaintenanceHistoryXML", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetVehicleMaintenanceHistoryXML(int userId, string SID, long vehicleId, ref string xml) {
            object[] results = this.Invoke("GetVehicleMaintenanceHistoryXML", new object[] {
                        userId,
                        SID,
                        vehicleId,
                        xml});
            xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetVehicleMaintenanceHistoryXMLAsync(int userId, string SID, long vehicleId, string xml) {
            this.GetVehicleMaintenanceHistoryXMLAsync(userId, SID, vehicleId, xml, null);
        }
        
        /// <remarks/>
        public void GetVehicleMaintenanceHistoryXMLAsync(int userId, string SID, long vehicleId, string xml, object userState) {
            if ((this.GetVehicleMaintenanceHistoryXMLOperationCompleted == null)) {
                this.GetVehicleMaintenanceHistoryXMLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetVehicleMaintenanceHistoryXMLOperationCompleted);
            }
            this.InvokeAsync("GetVehicleMaintenanceHistoryXML", new object[] {
                        userId,
                        SID,
                        vehicleId,
                        xml}, this.GetVehicleMaintenanceHistoryXMLOperationCompleted, userState);
        }
        
        private void OnGetVehicleMaintenanceHistoryXMLOperationCompleted(object arg) {
            if ((this.GetVehicleMaintenanceHistoryXMLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetVehicleMaintenanceHistoryXMLCompleted(this, new GetVehicleMaintenanceHistoryXMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/VehicleMaintenancePlan_Add", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int VehicleMaintenancePlan_Add(int userId, string SID, int organizationId, long vehicleId, int serviceId, short operationTypeId, int notificationId, short frequency, int serviceValue, int serviceInterval, int endValue, string email, string description, string comments) {
            object[] results = this.Invoke("VehicleMaintenancePlan_Add", new object[] {
                        userId,
                        SID,
                        organizationId,
                        vehicleId,
                        serviceId,
                        operationTypeId,
                        notificationId,
                        frequency,
                        serviceValue,
                        serviceInterval,
                        endValue,
                        email,
                        description,
                        comments});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void VehicleMaintenancePlan_AddAsync(int userId, string SID, int organizationId, long vehicleId, int serviceId, short operationTypeId, int notificationId, short frequency, int serviceValue, int serviceInterval, int endValue, string email, string description, string comments) {
            this.VehicleMaintenancePlan_AddAsync(userId, SID, organizationId, vehicleId, serviceId, operationTypeId, notificationId, frequency, serviceValue, serviceInterval, endValue, email, description, comments, null);
        }
        
        /// <remarks/>
        public void VehicleMaintenancePlan_AddAsync(int userId, string SID, int organizationId, long vehicleId, int serviceId, short operationTypeId, int notificationId, short frequency, int serviceValue, int serviceInterval, int endValue, string email, string description, string comments, object userState) {
            if ((this.VehicleMaintenancePlan_AddOperationCompleted == null)) {
                this.VehicleMaintenancePlan_AddOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVehicleMaintenancePlan_AddOperationCompleted);
            }
            this.InvokeAsync("VehicleMaintenancePlan_Add", new object[] {
                        userId,
                        SID,
                        organizationId,
                        vehicleId,
                        serviceId,
                        operationTypeId,
                        notificationId,
                        frequency,
                        serviceValue,
                        serviceInterval,
                        endValue,
                        email,
                        description,
                        comments}, this.VehicleMaintenancePlan_AddOperationCompleted, userState);
        }
        
        private void OnVehicleMaintenancePlan_AddOperationCompleted(object arg) {
            if ((this.VehicleMaintenancePlan_AddCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VehicleMaintenancePlan_AddCompleted(this, new VehicleMaintenancePlan_AddCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/VehicleMaintenancePlan_Update", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int VehicleMaintenancePlan_Update(int userId, string SID, int organizationId, int serviceId, long vehicleId, int serviceTypeId, short operationTypeId, int notificationId, short frequency, int serviceValue, int serviceInterval, int endValue, string email, string description, string comments) {
            object[] results = this.Invoke("VehicleMaintenancePlan_Update", new object[] {
                        userId,
                        SID,
                        organizationId,
                        serviceId,
                        vehicleId,
                        serviceTypeId,
                        operationTypeId,
                        notificationId,
                        frequency,
                        serviceValue,
                        serviceInterval,
                        endValue,
                        email,
                        description,
                        comments});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void VehicleMaintenancePlan_UpdateAsync(int userId, string SID, int organizationId, int serviceId, long vehicleId, int serviceTypeId, short operationTypeId, int notificationId, short frequency, int serviceValue, int serviceInterval, int endValue, string email, string description, string comments) {
            this.VehicleMaintenancePlan_UpdateAsync(userId, SID, organizationId, serviceId, vehicleId, serviceTypeId, operationTypeId, notificationId, frequency, serviceValue, serviceInterval, endValue, email, description, comments, null);
        }
        
        /// <remarks/>
        public void VehicleMaintenancePlan_UpdateAsync(
                    int userId, 
                    string SID, 
                    int organizationId, 
                    int serviceId, 
                    long vehicleId, 
                    int serviceTypeId, 
                    short operationTypeId, 
                    int notificationId, 
                    short frequency, 
                    int serviceValue, 
                    int serviceInterval, 
                    int endValue, 
                    string email, 
                    string description, 
                    string comments, 
                    object userState) {
            if ((this.VehicleMaintenancePlan_UpdateOperationCompleted == null)) {
                this.VehicleMaintenancePlan_UpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVehicleMaintenancePlan_UpdateOperationCompleted);
            }
            this.InvokeAsync("VehicleMaintenancePlan_Update", new object[] {
                        userId,
                        SID,
                        organizationId,
                        serviceId,
                        vehicleId,
                        serviceTypeId,
                        operationTypeId,
                        notificationId,
                        frequency,
                        serviceValue,
                        serviceInterval,
                        endValue,
                        email,
                        description,
                        comments}, this.VehicleMaintenancePlan_UpdateOperationCompleted, userState);
        }
        
        private void OnVehicleMaintenancePlan_UpdateOperationCompleted(object arg) {
            if ((this.VehicleMaintenancePlan_UpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VehicleMaintenancePlan_UpdateCompleted(this, new VehicleMaintenancePlan_UpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/VehicleMaintenancePlan_DeleteAll", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int VehicleMaintenancePlan_DeleteAll(int userId, string SID, int organizationId, long vehicleId) {
            object[] results = this.Invoke("VehicleMaintenancePlan_DeleteAll", new object[] {
                        userId,
                        SID,
                        organizationId,
                        vehicleId});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void VehicleMaintenancePlan_DeleteAllAsync(int userId, string SID, int organizationId, long vehicleId) {
            this.VehicleMaintenancePlan_DeleteAllAsync(userId, SID, organizationId, vehicleId, null);
        }
        
        /// <remarks/>
        public void VehicleMaintenancePlan_DeleteAllAsync(int userId, string SID, int organizationId, long vehicleId, object userState) {
            if ((this.VehicleMaintenancePlan_DeleteAllOperationCompleted == null)) {
                this.VehicleMaintenancePlan_DeleteAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVehicleMaintenancePlan_DeleteAllOperationCompleted);
            }
            this.InvokeAsync("VehicleMaintenancePlan_DeleteAll", new object[] {
                        userId,
                        SID,
                        organizationId,
                        vehicleId}, this.VehicleMaintenancePlan_DeleteAllOperationCompleted, userState);
        }
        
        private void OnVehicleMaintenancePlan_DeleteAllOperationCompleted(object arg) {
            if ((this.VehicleMaintenancePlan_DeleteAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VehicleMaintenancePlan_DeleteAllCompleted(this, new VehicleMaintenancePlan_DeleteAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/VehicleMaintenancePlan_Delete", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int VehicleMaintenancePlan_Delete(int userId, string SID, int organizationId, long vehicleId, int serviceId) {
            object[] results = this.Invoke("VehicleMaintenancePlan_Delete", new object[] {
                        userId,
                        SID,
                        organizationId,
                        vehicleId,
                        serviceId});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void VehicleMaintenancePlan_DeleteAsync(int userId, string SID, int organizationId, long vehicleId, int serviceId) {
            this.VehicleMaintenancePlan_DeleteAsync(userId, SID, organizationId, vehicleId, serviceId, null);
        }
        
        /// <remarks/>
        public void VehicleMaintenancePlan_DeleteAsync(int userId, string SID, int organizationId, long vehicleId, int serviceId, object userState) {
            if ((this.VehicleMaintenancePlan_DeleteOperationCompleted == null)) {
                this.VehicleMaintenancePlan_DeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVehicleMaintenancePlan_DeleteOperationCompleted);
            }
            this.InvokeAsync("VehicleMaintenancePlan_Delete", new object[] {
                        userId,
                        SID,
                        organizationId,
                        vehicleId,
                        serviceId}, this.VehicleMaintenancePlan_DeleteOperationCompleted, userState);
        }
        
        private void OnVehicleMaintenancePlan_DeleteOperationCompleted(object arg) {
            if ((this.VehicleMaintenancePlan_DeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VehicleMaintenancePlan_DeleteCompleted(this, new VehicleMaintenancePlan_DeleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/VehicleMaintenancePlan_Close", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int VehicleMaintenancePlan_Close(int userId, string SID, int organizationId, long vehicleId, int serviceId) {
            object[] results = this.Invoke("VehicleMaintenancePlan_Close", new object[] {
                        userId,
                        SID,
                        organizationId,
                        vehicleId,
                        serviceId});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void VehicleMaintenancePlan_CloseAsync(int userId, string SID, int organizationId, long vehicleId, int serviceId) {
            this.VehicleMaintenancePlan_CloseAsync(userId, SID, organizationId, vehicleId, serviceId, null);
        }
        
        /// <remarks/>
        public void VehicleMaintenancePlan_CloseAsync(int userId, string SID, int organizationId, long vehicleId, int serviceId, object userState) {
            if ((this.VehicleMaintenancePlan_CloseOperationCompleted == null)) {
                this.VehicleMaintenancePlan_CloseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVehicleMaintenancePlan_CloseOperationCompleted);
            }
            this.InvokeAsync("VehicleMaintenancePlan_Close", new object[] {
                        userId,
                        SID,
                        organizationId,
                        vehicleId,
                        serviceId}, this.VehicleMaintenancePlan_CloseOperationCompleted, userState);
        }
        
        private void OnVehicleMaintenancePlan_CloseOperationCompleted(object arg) {
            if ((this.VehicleMaintenancePlan_CloseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VehicleMaintenancePlan_CloseCompleted(this, new VehicleMaintenancePlan_CloseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/VehicleMaintenancePlanExtended_Close", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int VehicleMaintenancePlanExtended_Close(int userId, string SID, int organizationId, long vehicleId, int serviceId, int serviceValue, short closeType, string comments) {
            object[] results = this.Invoke("VehicleMaintenancePlanExtended_Close", new object[] {
                        userId,
                        SID,
                        organizationId,
                        vehicleId,
                        serviceId,
                        serviceValue,
                        closeType,
                        comments});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void VehicleMaintenancePlanExtended_CloseAsync(int userId, string SID, int organizationId, long vehicleId, int serviceId, int serviceValue, short closeType, string comments) {
            this.VehicleMaintenancePlanExtended_CloseAsync(userId, SID, organizationId, vehicleId, serviceId, serviceValue, closeType, comments, null);
        }
        
        /// <remarks/>
        public void VehicleMaintenancePlanExtended_CloseAsync(int userId, string SID, int organizationId, long vehicleId, int serviceId, int serviceValue, short closeType, string comments, object userState) {
            if ((this.VehicleMaintenancePlanExtended_CloseOperationCompleted == null)) {
                this.VehicleMaintenancePlanExtended_CloseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVehicleMaintenancePlanExtended_CloseOperationCompleted);
            }
            this.InvokeAsync("VehicleMaintenancePlanExtended_Close", new object[] {
                        userId,
                        SID,
                        organizationId,
                        vehicleId,
                        serviceId,
                        serviceValue,
                        closeType,
                        comments}, this.VehicleMaintenancePlanExtended_CloseOperationCompleted, userState);
        }
        
        private void OnVehicleMaintenancePlanExtended_CloseOperationCompleted(object arg) {
            if ((this.VehicleMaintenancePlanExtended_CloseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VehicleMaintenancePlanExtended_CloseCompleted(this, new VehicleMaintenancePlanExtended_CloseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/VehicleMaintenancePlan_GetAll", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int VehicleMaintenancePlan_GetAll(int userId, string SID, int organizationId, long vehicleId, short dueFlag, ref string xmlString) {
            object[] results = this.Invoke("VehicleMaintenancePlan_GetAll", new object[] {
                        userId,
                        SID,
                        organizationId,
                        vehicleId,
                        dueFlag,
                        xmlString});
            xmlString = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void VehicleMaintenancePlan_GetAllAsync(int userId, string SID, int organizationId, long vehicleId, short dueFlag, string xmlString) {
            this.VehicleMaintenancePlan_GetAllAsync(userId, SID, organizationId, vehicleId, dueFlag, xmlString, null);
        }
        
        /// <remarks/>
        public void VehicleMaintenancePlan_GetAllAsync(int userId, string SID, int organizationId, long vehicleId, short dueFlag, string xmlString, object userState) {
            if ((this.VehicleMaintenancePlan_GetAllOperationCompleted == null)) {
                this.VehicleMaintenancePlan_GetAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVehicleMaintenancePlan_GetAllOperationCompleted);
            }
            this.InvokeAsync("VehicleMaintenancePlan_GetAll", new object[] {
                        userId,
                        SID,
                        organizationId,
                        vehicleId,
                        dueFlag,
                        xmlString}, this.VehicleMaintenancePlan_GetAllOperationCompleted, userState);
        }
        
        private void OnVehicleMaintenancePlan_GetAllOperationCompleted(object arg) {
            if ((this.VehicleMaintenancePlan_GetAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VehicleMaintenancePlan_GetAllCompleted(this, new VehicleMaintenancePlan_GetAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/VehicleMaintenancePlan_GetAllByLang", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int VehicleMaintenancePlan_GetAllByLang(int userId, string SID, int organizationId, long vehicleId, short dueFlag, string lang, ref string xmlString) {
            object[] results = this.Invoke("VehicleMaintenancePlan_GetAllByLang", new object[] {
                        userId,
                        SID,
                        organizationId,
                        vehicleId,
                        dueFlag,
                        lang,
                        xmlString});
            xmlString = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void VehicleMaintenancePlan_GetAllByLangAsync(int userId, string SID, int organizationId, long vehicleId, short dueFlag, string lang, string xmlString) {
            this.VehicleMaintenancePlan_GetAllByLangAsync(userId, SID, organizationId, vehicleId, dueFlag, lang, xmlString, null);
        }
        
        /// <remarks/>
        public void VehicleMaintenancePlan_GetAllByLangAsync(int userId, string SID, int organizationId, long vehicleId, short dueFlag, string lang, string xmlString, object userState) {
            if ((this.VehicleMaintenancePlan_GetAllByLangOperationCompleted == null)) {
                this.VehicleMaintenancePlan_GetAllByLangOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVehicleMaintenancePlan_GetAllByLangOperationCompleted);
            }
            this.InvokeAsync("VehicleMaintenancePlan_GetAllByLang", new object[] {
                        userId,
                        SID,
                        organizationId,
                        vehicleId,
                        dueFlag,
                        lang,
                        xmlString}, this.VehicleMaintenancePlan_GetAllByLangOperationCompleted, userState);
        }
        
        private void OnVehicleMaintenancePlan_GetAllByLangOperationCompleted(object arg) {
            if ((this.VehicleMaintenancePlan_GetAllByLangCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VehicleMaintenancePlan_GetAllByLangCompleted(this, new VehicleMaintenancePlan_GetAllByLangCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/VehicleMaintenancePlan_GetByType", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int VehicleMaintenancePlan_GetByType(int userId, string SID, int organizationId, long vehicleId, short operationType, short dueFlag, ref string xmlString) {
            object[] results = this.Invoke("VehicleMaintenancePlan_GetByType", new object[] {
                        userId,
                        SID,
                        organizationId,
                        vehicleId,
                        operationType,
                        dueFlag,
                        xmlString});
            xmlString = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void VehicleMaintenancePlan_GetByTypeAsync(int userId, string SID, int organizationId, long vehicleId, short operationType, short dueFlag, string xmlString) {
            this.VehicleMaintenancePlan_GetByTypeAsync(userId, SID, organizationId, vehicleId, operationType, dueFlag, xmlString, null);
        }
        
        /// <remarks/>
        public void VehicleMaintenancePlan_GetByTypeAsync(int userId, string SID, int organizationId, long vehicleId, short operationType, short dueFlag, string xmlString, object userState) {
            if ((this.VehicleMaintenancePlan_GetByTypeOperationCompleted == null)) {
                this.VehicleMaintenancePlan_GetByTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVehicleMaintenancePlan_GetByTypeOperationCompleted);
            }
            this.InvokeAsync("VehicleMaintenancePlan_GetByType", new object[] {
                        userId,
                        SID,
                        organizationId,
                        vehicleId,
                        operationType,
                        dueFlag,
                        xmlString}, this.VehicleMaintenancePlan_GetByTypeOperationCompleted, userState);
        }
        
        private void OnVehicleMaintenancePlan_GetByTypeOperationCompleted(object arg) {
            if ((this.VehicleMaintenancePlan_GetByTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VehicleMaintenancePlan_GetByTypeCompleted(this, new VehicleMaintenancePlan_GetByTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/VehicleMaintenancePlan_GetByTypeLang", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int VehicleMaintenancePlan_GetByTypeLang(int userId, string SID, int organizationId, long vehicleId, short operationType, short dueFlag, string lang, ref string xmlString) {
            object[] results = this.Invoke("VehicleMaintenancePlan_GetByTypeLang", new object[] {
                        userId,
                        SID,
                        organizationId,
                        vehicleId,
                        operationType,
                        dueFlag,
                        lang,
                        xmlString});
            xmlString = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void VehicleMaintenancePlan_GetByTypeLangAsync(int userId, string SID, int organizationId, long vehicleId, short operationType, short dueFlag, string lang, string xmlString) {
            this.VehicleMaintenancePlan_GetByTypeLangAsync(userId, SID, organizationId, vehicleId, operationType, dueFlag, lang, xmlString, null);
        }
        
        /// <remarks/>
        public void VehicleMaintenancePlan_GetByTypeLangAsync(int userId, string SID, int organizationId, long vehicleId, short operationType, short dueFlag, string lang, string xmlString, object userState) {
            if ((this.VehicleMaintenancePlan_GetByTypeLangOperationCompleted == null)) {
                this.VehicleMaintenancePlan_GetByTypeLangOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVehicleMaintenancePlan_GetByTypeLangOperationCompleted);
            }
            this.InvokeAsync("VehicleMaintenancePlan_GetByTypeLang", new object[] {
                        userId,
                        SID,
                        organizationId,
                        vehicleId,
                        operationType,
                        dueFlag,
                        lang,
                        xmlString}, this.VehicleMaintenancePlan_GetByTypeLangOperationCompleted, userState);
        }
        
        private void OnVehicleMaintenancePlan_GetByTypeLangOperationCompleted(object arg) {
            if ((this.VehicleMaintenancePlan_GetByTypeLangCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VehicleMaintenancePlan_GetByTypeLangCompleted(this, new VehicleMaintenancePlan_GetByTypeLangCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/VehicleMaintenancePlan_Get", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int VehicleMaintenancePlan_Get(int userId, string SID, int organizationId, long vehicleId, int serviceId, ref string xmlString) {
            object[] results = this.Invoke("VehicleMaintenancePlan_Get", new object[] {
                        userId,
                        SID,
                        organizationId,
                        vehicleId,
                        serviceId,
                        xmlString});
            xmlString = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void VehicleMaintenancePlan_GetAsync(int userId, string SID, int organizationId, long vehicleId, int serviceId, string xmlString) {
            this.VehicleMaintenancePlan_GetAsync(userId, SID, organizationId, vehicleId, serviceId, xmlString, null);
        }
        
        /// <remarks/>
        public void VehicleMaintenancePlan_GetAsync(int userId, string SID, int organizationId, long vehicleId, int serviceId, string xmlString, object userState) {
            if ((this.VehicleMaintenancePlan_GetOperationCompleted == null)) {
                this.VehicleMaintenancePlan_GetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVehicleMaintenancePlan_GetOperationCompleted);
            }
            this.InvokeAsync("VehicleMaintenancePlan_Get", new object[] {
                        userId,
                        SID,
                        organizationId,
                        vehicleId,
                        serviceId,
                        xmlString}, this.VehicleMaintenancePlan_GetOperationCompleted, userState);
        }
        
        private void OnVehicleMaintenancePlan_GetOperationCompleted(object arg) {
            if ((this.VehicleMaintenancePlan_GetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VehicleMaintenancePlan_GetCompleted(this, new VehicleMaintenancePlan_GetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/VehicleMaintenancePlanHistory_GetAll", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int VehicleMaintenancePlanHistory_GetAll(int userId, string SID, int organizationId, long vehicleId, ref string xmlString) {
            object[] results = this.Invoke("VehicleMaintenancePlanHistory_GetAll", new object[] {
                        userId,
                        SID,
                        organizationId,
                        vehicleId,
                        xmlString});
            xmlString = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void VehicleMaintenancePlanHistory_GetAllAsync(int userId, string SID, int organizationId, long vehicleId, string xmlString) {
            this.VehicleMaintenancePlanHistory_GetAllAsync(userId, SID, organizationId, vehicleId, xmlString, null);
        }
        
        /// <remarks/>
        public void VehicleMaintenancePlanHistory_GetAllAsync(int userId, string SID, int organizationId, long vehicleId, string xmlString, object userState) {
            if ((this.VehicleMaintenancePlanHistory_GetAllOperationCompleted == null)) {
                this.VehicleMaintenancePlanHistory_GetAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVehicleMaintenancePlanHistory_GetAllOperationCompleted);
            }
            this.InvokeAsync("VehicleMaintenancePlanHistory_GetAll", new object[] {
                        userId,
                        SID,
                        organizationId,
                        vehicleId,
                        xmlString}, this.VehicleMaintenancePlanHistory_GetAllOperationCompleted, userState);
        }
        
        private void OnVehicleMaintenancePlanHistory_GetAllOperationCompleted(object arg) {
            if ((this.VehicleMaintenancePlanHistory_GetAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VehicleMaintenancePlanHistory_GetAllCompleted(this, new VehicleMaintenancePlanHistory_GetAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/VehicleOperationTypes_Get", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int VehicleOperationTypes_Get(int userId, string SID, int organizationId, ref string xmlString) {
            object[] results = this.Invoke("VehicleOperationTypes_Get", new object[] {
                        userId,
                        SID,
                        organizationId,
                        xmlString});
            xmlString = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void VehicleOperationTypes_GetAsync(int userId, string SID, int organizationId, string xmlString) {
            this.VehicleOperationTypes_GetAsync(userId, SID, organizationId, xmlString, null);
        }
        
        /// <remarks/>
        public void VehicleOperationTypes_GetAsync(int userId, string SID, int organizationId, string xmlString, object userState) {
            if ((this.VehicleOperationTypes_GetOperationCompleted == null)) {
                this.VehicleOperationTypes_GetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVehicleOperationTypes_GetOperationCompleted);
            }
            this.InvokeAsync("VehicleOperationTypes_Get", new object[] {
                        userId,
                        SID,
                        organizationId,
                        xmlString}, this.VehicleOperationTypes_GetOperationCompleted, userState);
        }
        
        private void OnVehicleOperationTypes_GetOperationCompleted(object arg) {
            if ((this.VehicleOperationTypes_GetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VehicleOperationTypes_GetCompleted(this, new VehicleOperationTypes_GetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/VehicleMaintenance_UpdateEngineHours", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int VehicleMaintenance_UpdateEngineHours(int userId, string SID, long vehicleId, int engineHours) {
            object[] results = this.Invoke("VehicleMaintenance_UpdateEngineHours", new object[] {
                        userId,
                        SID,
                        vehicleId,
                        engineHours});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void VehicleMaintenance_UpdateEngineHoursAsync(int userId, string SID, long vehicleId, int engineHours) {
            this.VehicleMaintenance_UpdateEngineHoursAsync(userId, SID, vehicleId, engineHours, null);
        }
        
        /// <remarks/>
        public void VehicleMaintenance_UpdateEngineHoursAsync(int userId, string SID, long vehicleId, int engineHours, object userState) {
            if ((this.VehicleMaintenance_UpdateEngineHoursOperationCompleted == null)) {
                this.VehicleMaintenance_UpdateEngineHoursOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVehicleMaintenance_UpdateEngineHoursOperationCompleted);
            }
            this.InvokeAsync("VehicleMaintenance_UpdateEngineHours", new object[] {
                        userId,
                        SID,
                        vehicleId,
                        engineHours}, this.VehicleMaintenance_UpdateEngineHoursOperationCompleted, userState);
        }
        
        private void OnVehicleMaintenance_UpdateEngineHoursOperationCompleted(object arg) {
            if ((this.VehicleMaintenance_UpdateEngineHoursCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VehicleMaintenance_UpdateEngineHoursCompleted(this, new VehicleMaintenance_UpdateEngineHoursCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/VehicleMaintenance_GetInfo", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int VehicleMaintenance_GetInfo(int userId, string SID, long vehicleId, bool includeNotInit, ref string xml) {
            object[] results = this.Invoke("VehicleMaintenance_GetInfo", new object[] {
                        userId,
                        SID,
                        vehicleId,
                        includeNotInit,
                        xml});
            xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void VehicleMaintenance_GetInfoAsync(int userId, string SID, long vehicleId, bool includeNotInit, string xml) {
            this.VehicleMaintenance_GetInfoAsync(userId, SID, vehicleId, includeNotInit, xml, null);
        }
        
        /// <remarks/>
        public void VehicleMaintenance_GetInfoAsync(int userId, string SID, long vehicleId, bool includeNotInit, string xml, object userState) {
            if ((this.VehicleMaintenance_GetInfoOperationCompleted == null)) {
                this.VehicleMaintenance_GetInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVehicleMaintenance_GetInfoOperationCompleted);
            }
            this.InvokeAsync("VehicleMaintenance_GetInfo", new object[] {
                        userId,
                        SID,
                        vehicleId,
                        includeNotInit,
                        xml}, this.VehicleMaintenance_GetInfoOperationCompleted, userState);
        }
        
        private void OnVehicleMaintenance_GetInfoOperationCompleted(object arg) {
            if ((this.VehicleMaintenance_GetInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VehicleMaintenance_GetInfoCompleted(this, new VehicleMaintenance_GetInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetMDTInfoByTypeId", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetMDTInfoByTypeId(int userId, string SID, int MdtTypeId, ref string xml) {
            object[] results = this.Invoke("GetMDTInfoByTypeId", new object[] {
                        userId,
                        SID,
                        MdtTypeId,
                        xml});
            xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetMDTInfoByTypeIdAsync(int userId, string SID, int MdtTypeId, string xml) {
            this.GetMDTInfoByTypeIdAsync(userId, SID, MdtTypeId, xml, null);
        }
        
        /// <remarks/>
        public void GetMDTInfoByTypeIdAsync(int userId, string SID, int MdtTypeId, string xml, object userState) {
            if ((this.GetMDTInfoByTypeIdOperationCompleted == null)) {
                this.GetMDTInfoByTypeIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMDTInfoByTypeIdOperationCompleted);
            }
            this.InvokeAsync("GetMDTInfoByTypeId", new object[] {
                        userId,
                        SID,
                        MdtTypeId,
                        xml}, this.GetMDTInfoByTypeIdOperationCompleted, userState);
        }
        
        private void OnGetMDTInfoByTypeIdOperationCompleted(object arg) {
            if ((this.GetMDTInfoByTypeIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMDTInfoByTypeIdCompleted(this, new GetMDTInfoByTypeIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetDTCCodesDescription", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetDTCCodesDescription(int userId, string SID, ref string xml) {
            object[] results = this.Invoke("GetDTCCodesDescription", new object[] {
                        userId,
                        SID,
                        xml});
            xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetDTCCodesDescriptionAsync(int userId, string SID, string xml) {
            this.GetDTCCodesDescriptionAsync(userId, SID, xml, null);
        }
        
        /// <remarks/>
        public void GetDTCCodesDescriptionAsync(int userId, string SID, string xml, object userState) {
            if ((this.GetDTCCodesDescriptionOperationCompleted == null)) {
                this.GetDTCCodesDescriptionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDTCCodesDescriptionOperationCompleted);
            }
            this.InvokeAsync("GetDTCCodesDescription", new object[] {
                        userId,
                        SID,
                        xml}, this.GetDTCCodesDescriptionOperationCompleted, userState);
        }
        
        private void OnGetDTCCodesDescriptionOperationCompleted(object arg) {
            if ((this.GetDTCCodesDescriptionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDTCCodesDescriptionCompleted(this, new GetDTCCodesDescriptionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetBoxId4BB", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetBoxId4BB(int userId, string SID, string PIN, ref int boxId) {
            object[] results = this.Invoke("GetBoxId4BB", new object[] {
                        userId,
                        SID,
                        PIN,
                        boxId});
            boxId = ((int)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetBoxId4BBAsync(int userId, string SID, string PIN, int boxId) {
            this.GetBoxId4BBAsync(userId, SID, PIN, boxId, null);
        }
        
        /// <remarks/>
        public void GetBoxId4BBAsync(int userId, string SID, string PIN, int boxId, object userState) {
            if ((this.GetBoxId4BBOperationCompleted == null)) {
                this.GetBoxId4BBOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBoxId4BBOperationCompleted);
            }
            this.InvokeAsync("GetBoxId4BB", new object[] {
                        userId,
                        SID,
                        PIN,
                        boxId}, this.GetBoxId4BBOperationCompleted, userState);
        }
        
        private void OnGetBoxId4BBOperationCompleted(object arg) {
            if ((this.GetBoxId4BBCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBoxId4BBCompleted(this, new GetBoxId4BBCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetVehicleExtraServiceHistoryByVehicleId", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetVehicleExtraServiceHistoryByVehicleId(int userId, string SID, long vehicleId, ref string xml) {
            object[] results = this.Invoke("GetVehicleExtraServiceHistoryByVehicleId", new object[] {
                        userId,
                        SID,
                        vehicleId,
                        xml});
            xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetVehicleExtraServiceHistoryByVehicleIdAsync(int userId, string SID, long vehicleId, string xml) {
            this.GetVehicleExtraServiceHistoryByVehicleIdAsync(userId, SID, vehicleId, xml, null);
        }
        
        /// <remarks/>
        public void GetVehicleExtraServiceHistoryByVehicleIdAsync(int userId, string SID, long vehicleId, string xml, object userState) {
            if ((this.GetVehicleExtraServiceHistoryByVehicleIdOperationCompleted == null)) {
                this.GetVehicleExtraServiceHistoryByVehicleIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetVehicleExtraServiceHistoryByVehicleIdOperationCompleted);
            }
            this.InvokeAsync("GetVehicleExtraServiceHistoryByVehicleId", new object[] {
                        userId,
                        SID,
                        vehicleId,
                        xml}, this.GetVehicleExtraServiceHistoryByVehicleIdOperationCompleted, userState);
        }
        
        private void OnGetVehicleExtraServiceHistoryByVehicleIdOperationCompleted(object arg) {
            if ((this.GetVehicleExtraServiceHistoryByVehicleIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetVehicleExtraServiceHistoryByVehicleIdCompleted(this, new GetVehicleExtraServiceHistoryByVehicleIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/VehicleExtraServiceHistory_Add_Update", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int VehicleExtraServiceHistory_Add_Update(
                    int userId, 
                    string SID, 
                    long VehicleId, 
                    string Field1, 
                    string Field2, 
                    string Field3, 
                    string Field4, 
                    string Field5, 
                    string Field6, 
                    string Field7, 
                    string Field8, 
                    string Field9, 
                    string Field10, 
                    string Field11, 
                    string Field12, 
                    string Field13, 
                    string Field14, 
                    string Field15, 
                    string Field16) {
            object[] results = this.Invoke("VehicleExtraServiceHistory_Add_Update", new object[] {
                        userId,
                        SID,
                        VehicleId,
                        Field1,
                        Field2,
                        Field3,
                        Field4,
                        Field5,
                        Field6,
                        Field7,
                        Field8,
                        Field9,
                        Field10,
                        Field11,
                        Field12,
                        Field13,
                        Field14,
                        Field15,
                        Field16});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void VehicleExtraServiceHistory_Add_UpdateAsync(
                    int userId, 
                    string SID, 
                    long VehicleId, 
                    string Field1, 
                    string Field2, 
                    string Field3, 
                    string Field4, 
                    string Field5, 
                    string Field6, 
                    string Field7, 
                    string Field8, 
                    string Field9, 
                    string Field10, 
                    string Field11, 
                    string Field12, 
                    string Field13, 
                    string Field14, 
                    string Field15, 
                    string Field16) {
            this.VehicleExtraServiceHistory_Add_UpdateAsync(userId, SID, VehicleId, Field1, Field2, Field3, Field4, Field5, Field6, Field7, Field8, Field9, Field10, Field11, Field12, Field13, Field14, Field15, Field16, null);
        }
        
        /// <remarks/>
        public void VehicleExtraServiceHistory_Add_UpdateAsync(
                    int userId, 
                    string SID, 
                    long VehicleId, 
                    string Field1, 
                    string Field2, 
                    string Field3, 
                    string Field4, 
                    string Field5, 
                    string Field6, 
                    string Field7, 
                    string Field8, 
                    string Field9, 
                    string Field10, 
                    string Field11, 
                    string Field12, 
                    string Field13, 
                    string Field14, 
                    string Field15, 
                    string Field16, 
                    object userState) {
            if ((this.VehicleExtraServiceHistory_Add_UpdateOperationCompleted == null)) {
                this.VehicleExtraServiceHistory_Add_UpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVehicleExtraServiceHistory_Add_UpdateOperationCompleted);
            }
            this.InvokeAsync("VehicleExtraServiceHistory_Add_Update", new object[] {
                        userId,
                        SID,
                        VehicleId,
                        Field1,
                        Field2,
                        Field3,
                        Field4,
                        Field5,
                        Field6,
                        Field7,
                        Field8,
                        Field9,
                        Field10,
                        Field11,
                        Field12,
                        Field13,
                        Field14,
                        Field15,
                        Field16}, this.VehicleExtraServiceHistory_Add_UpdateOperationCompleted, userState);
        }
        
        private void OnVehicleExtraServiceHistory_Add_UpdateOperationCompleted(object arg) {
            if ((this.VehicleExtraServiceHistory_Add_UpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VehicleExtraServiceHistory_Add_UpdateCompleted(this, new VehicleExtraServiceHistory_Add_UpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetJ1708CodesVehicleFleet", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetJ1708CodesVehicleFleet(int userId, string SID, int vehicleId, int fleetId, System.DateTime from, System.DateTime to, string lang, ref string xml) {
            object[] results = this.Invoke("GetJ1708CodesVehicleFleet", new object[] {
                        userId,
                        SID,
                        vehicleId,
                        fleetId,
                        from,
                        to,
                        lang,
                        xml});
            xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetJ1708CodesVehicleFleetAsync(int userId, string SID, int vehicleId, int fleetId, System.DateTime from, System.DateTime to, string lang, string xml) {
            this.GetJ1708CodesVehicleFleetAsync(userId, SID, vehicleId, fleetId, from, to, lang, xml, null);
        }
        
        /// <remarks/>
        public void GetJ1708CodesVehicleFleetAsync(int userId, string SID, int vehicleId, int fleetId, System.DateTime from, System.DateTime to, string lang, string xml, object userState) {
            if ((this.GetJ1708CodesVehicleFleetOperationCompleted == null)) {
                this.GetJ1708CodesVehicleFleetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetJ1708CodesVehicleFleetOperationCompleted);
            }
            this.InvokeAsync("GetJ1708CodesVehicleFleet", new object[] {
                        userId,
                        SID,
                        vehicleId,
                        fleetId,
                        from,
                        to,
                        lang,
                        xml}, this.GetJ1708CodesVehicleFleetOperationCompleted, userState);
        }
        
        private void OnGetJ1708CodesVehicleFleetOperationCompleted(object arg) {
            if ((this.GetJ1708CodesVehicleFleetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetJ1708CodesVehicleFleetCompleted(this, new GetJ1708CodesVehicleFleetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetBoxExtraInfo", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetBoxExtraInfo(int userId, string SID, long vehicleId, ref string xml) {
            object[] results = this.Invoke("GetBoxExtraInfo", new object[] {
                        userId,
                        SID,
                        vehicleId,
                        xml});
            xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetBoxExtraInfoAsync(int userId, string SID, long vehicleId, string xml) {
            this.GetBoxExtraInfoAsync(userId, SID, vehicleId, xml, null);
        }
        
        /// <remarks/>
        public void GetBoxExtraInfoAsync(int userId, string SID, long vehicleId, string xml, object userState) {
            if ((this.GetBoxExtraInfoOperationCompleted == null)) {
                this.GetBoxExtraInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBoxExtraInfoOperationCompleted);
            }
            this.InvokeAsync("GetBoxExtraInfo", new object[] {
                        userId,
                        SID,
                        vehicleId,
                        xml}, this.GetBoxExtraInfoOperationCompleted, userState);
        }
        
        private void OnGetBoxExtraInfoOperationCompleted(object arg) {
            if ((this.GetBoxExtraInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBoxExtraInfoCompleted(this, new GetBoxExtraInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetStateMileagePerVehicle", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetStateMileagePerVehicle(int userId, string SID, string licensePlate, string FromDate, string ToDate, ref string xml) {
            object[] results = this.Invoke("GetStateMileagePerVehicle", new object[] {
                        userId,
                        SID,
                        licensePlate,
                        FromDate,
                        ToDate,
                        xml});
            xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetStateMileagePerVehicleAsync(int userId, string SID, string licensePlate, string FromDate, string ToDate, string xml) {
            this.GetStateMileagePerVehicleAsync(userId, SID, licensePlate, FromDate, ToDate, xml, null);
        }
        
        /// <remarks/>
        public void GetStateMileagePerVehicleAsync(int userId, string SID, string licensePlate, string FromDate, string ToDate, string xml, object userState) {
            if ((this.GetStateMileagePerVehicleOperationCompleted == null)) {
                this.GetStateMileagePerVehicleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStateMileagePerVehicleOperationCompleted);
            }
            this.InvokeAsync("GetStateMileagePerVehicle", new object[] {
                        userId,
                        SID,
                        licensePlate,
                        FromDate,
                        ToDate,
                        xml}, this.GetStateMileagePerVehicleOperationCompleted, userState);
        }
        
        private void OnGetStateMileagePerVehicleOperationCompleted(object arg) {
            if ((this.GetStateMileagePerVehicleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStateMileagePerVehicleCompleted(this, new GetStateMileagePerVehicleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/AddMdtOTA", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AddMdtOTA(int userId, string SID, int boxId, short typeId, string customProp) {
            object[] results = this.Invoke("AddMdtOTA", new object[] {
                        userId,
                        SID,
                        boxId,
                        typeId,
                        customProp});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AddMdtOTAAsync(int userId, string SID, int boxId, short typeId, string customProp) {
            this.AddMdtOTAAsync(userId, SID, boxId, typeId, customProp, null);
        }
        
        /// <remarks/>
        public void AddMdtOTAAsync(int userId, string SID, int boxId, short typeId, string customProp, object userState) {
            if ((this.AddMdtOTAOperationCompleted == null)) {
                this.AddMdtOTAOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddMdtOTAOperationCompleted);
            }
            this.InvokeAsync("AddMdtOTA", new object[] {
                        userId,
                        SID,
                        boxId,
                        typeId,
                        customProp}, this.AddMdtOTAOperationCompleted, userState);
        }
        
        private void OnAddMdtOTAOperationCompleted(object arg) {
            if ((this.AddMdtOTACompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddMdtOTACompleted(this, new AddMdtOTACompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetPostedSpeedServiceConfiguration", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetPostedSpeedServiceConfiguration(int userId, string SID, ref string xml) {
            object[] results = this.Invoke("GetPostedSpeedServiceConfiguration", new object[] {
                        userId,
                        SID,
                        xml});
            xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetPostedSpeedServiceConfigurationAsync(int userId, string SID, string xml) {
            this.GetPostedSpeedServiceConfigurationAsync(userId, SID, xml, null);
        }
        
        /// <remarks/>
        public void GetPostedSpeedServiceConfigurationAsync(int userId, string SID, string xml, object userState) {
            if ((this.GetPostedSpeedServiceConfigurationOperationCompleted == null)) {
                this.GetPostedSpeedServiceConfigurationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPostedSpeedServiceConfigurationOperationCompleted);
            }
            this.InvokeAsync("GetPostedSpeedServiceConfiguration", new object[] {
                        userId,
                        SID,
                        xml}, this.GetPostedSpeedServiceConfigurationOperationCompleted, userState);
        }
        
        private void OnGetPostedSpeedServiceConfigurationOperationCompleted(object arg) {
            if ((this.GetPostedSpeedServiceConfigurationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPostedSpeedServiceConfigurationCompleted(this, new GetPostedSpeedServiceConfigurationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetVehicleInfoXML", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetVehicleInfoXML(int userId, string SID, string licensePlate, ref string xml) {
            object[] results = this.Invoke("GetVehicleInfoXML", new object[] {
                        userId,
                        SID,
                        licensePlate,
                        xml});
            xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetVehicleInfoXMLAsync(int userId, string SID, string licensePlate, string xml) {
            this.GetVehicleInfoXMLAsync(userId, SID, licensePlate, xml, null);
        }
        
        /// <remarks/>
        public void GetVehicleInfoXMLAsync(int userId, string SID, string licensePlate, string xml, object userState) {
            if ((this.GetVehicleInfoXMLOperationCompleted == null)) {
                this.GetVehicleInfoXMLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetVehicleInfoXMLOperationCompleted);
            }
            this.InvokeAsync("GetVehicleInfoXML", new object[] {
                        userId,
                        SID,
                        licensePlate,
                        xml}, this.GetVehicleInfoXMLOperationCompleted, userState);
        }
        
        private void OnGetVehicleInfoXMLOperationCompleted(object arg) {
            if ((this.GetVehicleInfoXMLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetVehicleInfoXMLCompleted(this, new GetVehicleInfoXMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetVehicleAdditionalInfoXML", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetVehicleAdditionalInfoXML(int userId, string SID, long vehicleId, ref string xml) {
            object[] results = this.Invoke("GetVehicleAdditionalInfoXML", new object[] {
                        userId,
                        SID,
                        vehicleId,
                        xml});
            xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetVehicleAdditionalInfoXMLAsync(int userId, string SID, long vehicleId, string xml) {
            this.GetVehicleAdditionalInfoXMLAsync(userId, SID, vehicleId, xml, null);
        }
        
        /// <remarks/>
        public void GetVehicleAdditionalInfoXMLAsync(int userId, string SID, long vehicleId, string xml, object userState) {
            if ((this.GetVehicleAdditionalInfoXMLOperationCompleted == null)) {
                this.GetVehicleAdditionalInfoXMLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetVehicleAdditionalInfoXMLOperationCompleted);
            }
            this.InvokeAsync("GetVehicleAdditionalInfoXML", new object[] {
                        userId,
                        SID,
                        vehicleId,
                        xml}, this.GetVehicleAdditionalInfoXMLOperationCompleted, userState);
        }
        
        private void OnGetVehicleAdditionalInfoXMLOperationCompleted(object arg) {
            if ((this.GetVehicleAdditionalInfoXMLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetVehicleAdditionalInfoXMLCompleted(this, new GetVehicleAdditionalInfoXMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/Get3rdPartyVehicleAdditionalInfoXML", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int Get3rdPartyVehicleAdditionalInfoXML(int userId, string SID, long vehicleId, ref string xml) {
            object[] results = this.Invoke("Get3rdPartyVehicleAdditionalInfoXML", new object[] {
                        userId,
                        SID,
                        vehicleId,
                        xml});
            xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void Get3rdPartyVehicleAdditionalInfoXMLAsync(int userId, string SID, long vehicleId, string xml) {
            this.Get3rdPartyVehicleAdditionalInfoXMLAsync(userId, SID, vehicleId, xml, null);
        }
        
        /// <remarks/>
        public void Get3rdPartyVehicleAdditionalInfoXMLAsync(int userId, string SID, long vehicleId, string xml, object userState) {
            if ((this.Get3rdPartyVehicleAdditionalInfoXMLOperationCompleted == null)) {
                this.Get3rdPartyVehicleAdditionalInfoXMLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet3rdPartyVehicleAdditionalInfoXMLOperationCompleted);
            }
            this.InvokeAsync("Get3rdPartyVehicleAdditionalInfoXML", new object[] {
                        userId,
                        SID,
                        vehicleId,
                        xml}, this.Get3rdPartyVehicleAdditionalInfoXMLOperationCompleted, userState);
        }
        
        private void OnGet3rdPartyVehicleAdditionalInfoXMLOperationCompleted(object arg) {
            if ((this.Get3rdPartyVehicleAdditionalInfoXMLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get3rdPartyVehicleAdditionalInfoXMLCompleted(this, new Get3rdPartyVehicleAdditionalInfoXMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetVehicleWorkingHoursXML", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetVehicleWorkingHoursXML(int userId, string SID, long vehicleId, ref string xml) {
            object[] results = this.Invoke("GetVehicleWorkingHoursXML", new object[] {
                        userId,
                        SID,
                        vehicleId,
                        xml});
            xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetVehicleWorkingHoursXMLAsync(int userId, string SID, long vehicleId, string xml) {
            this.GetVehicleWorkingHoursXMLAsync(userId, SID, vehicleId, xml, null);
        }
        
        /// <remarks/>
        public void GetVehicleWorkingHoursXMLAsync(int userId, string SID, long vehicleId, string xml, object userState) {
            if ((this.GetVehicleWorkingHoursXMLOperationCompleted == null)) {
                this.GetVehicleWorkingHoursXMLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetVehicleWorkingHoursXMLOperationCompleted);
            }
            this.InvokeAsync("GetVehicleWorkingHoursXML", new object[] {
                        userId,
                        SID,
                        vehicleId,
                        xml}, this.GetVehicleWorkingHoursXMLOperationCompleted, userState);
        }
        
        private void OnGetVehicleWorkingHoursXMLOperationCompleted(object arg) {
            if ((this.GetVehicleWorkingHoursXMLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetVehicleWorkingHoursXMLCompleted(this, new GetVehicleWorkingHoursXMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetLastOdometerFromHistoryByBoxId", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetLastOdometerFromHistoryByBoxId(int userId, string SID, int boxId, ref string xml) {
            object[] results = this.Invoke("GetLastOdometerFromHistoryByBoxId", new object[] {
                        userId,
                        SID,
                        boxId,
                        xml});
            xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetLastOdometerFromHistoryByBoxIdAsync(int userId, string SID, int boxId, string xml) {
            this.GetLastOdometerFromHistoryByBoxIdAsync(userId, SID, boxId, xml, null);
        }
        
        /// <remarks/>
        public void GetLastOdometerFromHistoryByBoxIdAsync(int userId, string SID, int boxId, string xml, object userState) {
            if ((this.GetLastOdometerFromHistoryByBoxIdOperationCompleted == null)) {
                this.GetLastOdometerFromHistoryByBoxIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLastOdometerFromHistoryByBoxIdOperationCompleted);
            }
            this.InvokeAsync("GetLastOdometerFromHistoryByBoxId", new object[] {
                        userId,
                        SID,
                        boxId,
                        xml}, this.GetLastOdometerFromHistoryByBoxIdOperationCompleted, userState);
        }
        
        private void OnGetLastOdometerFromHistoryByBoxIdOperationCompleted(object arg) {
            if ((this.GetLastOdometerFromHistoryByBoxIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLastOdometerFromHistoryByBoxIdCompleted(this, new GetLastOdometerFromHistoryByBoxIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetLastEEPROMDataFromHistoryByBoxId", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetLastEEPROMDataFromHistoryByBoxId(int userId, string SID, int boxId, ref string xml) {
            object[] results = this.Invoke("GetLastEEPROMDataFromHistoryByBoxId", new object[] {
                        userId,
                        SID,
                        boxId,
                        xml});
            xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetLastEEPROMDataFromHistoryByBoxIdAsync(int userId, string SID, int boxId, string xml) {
            this.GetLastEEPROMDataFromHistoryByBoxIdAsync(userId, SID, boxId, xml, null);
        }
        
        /// <remarks/>
        public void GetLastEEPROMDataFromHistoryByBoxIdAsync(int userId, string SID, int boxId, string xml, object userState) {
            if ((this.GetLastEEPROMDataFromHistoryByBoxIdOperationCompleted == null)) {
                this.GetLastEEPROMDataFromHistoryByBoxIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLastEEPROMDataFromHistoryByBoxIdOperationCompleted);
            }
            this.InvokeAsync("GetLastEEPROMDataFromHistoryByBoxId", new object[] {
                        userId,
                        SID,
                        boxId,
                        xml}, this.GetLastEEPROMDataFromHistoryByBoxIdOperationCompleted, userState);
        }
        
        private void OnGetLastEEPROMDataFromHistoryByBoxIdOperationCompleted(object arg) {
            if ((this.GetLastEEPROMDataFromHistoryByBoxIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLastEEPROMDataFromHistoryByBoxIdCompleted(this, new GetLastEEPROMDataFromHistoryByBoxIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetVehicleInfoXMLByVehicleId", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetVehicleInfoXMLByVehicleId(int userId, string SID, long vehicleId, ref string xmlResult) {
            object[] results = this.Invoke("GetVehicleInfoXMLByVehicleId", new object[] {
                        userId,
                        SID,
                        vehicleId,
                        xmlResult});
            xmlResult = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetVehicleInfoXMLByVehicleIdAsync(int userId, string SID, long vehicleId, string xmlResult) {
            this.GetVehicleInfoXMLByVehicleIdAsync(userId, SID, vehicleId, xmlResult, null);
        }
        
        /// <remarks/>
        public void GetVehicleInfoXMLByVehicleIdAsync(int userId, string SID, long vehicleId, string xmlResult, object userState) {
            if ((this.GetVehicleInfoXMLByVehicleIdOperationCompleted == null)) {
                this.GetVehicleInfoXMLByVehicleIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetVehicleInfoXMLByVehicleIdOperationCompleted);
            }
            this.InvokeAsync("GetVehicleInfoXMLByVehicleId", new object[] {
                        userId,
                        SID,
                        vehicleId,
                        xmlResult}, this.GetVehicleInfoXMLByVehicleIdOperationCompleted, userState);
        }
        
        private void OnGetVehicleInfoXMLByVehicleIdOperationCompleted(object arg) {
            if ((this.GetVehicleInfoXMLByVehicleIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetVehicleInfoXMLByVehicleIdCompleted(this, new GetVehicleInfoXMLByVehicleIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetVehicleInfoXMLByBoxId", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetVehicleInfoXMLByBoxId(int userId, string SID, int BoxId, ref string xmlResult) {
            object[] results = this.Invoke("GetVehicleInfoXMLByBoxId", new object[] {
                        userId,
                        SID,
                        BoxId,
                        xmlResult});
            xmlResult = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetVehicleInfoXMLByBoxIdAsync(int userId, string SID, int BoxId, string xmlResult) {
            this.GetVehicleInfoXMLByBoxIdAsync(userId, SID, BoxId, xmlResult, null);
        }
        
        /// <remarks/>
        public void GetVehicleInfoXMLByBoxIdAsync(int userId, string SID, int BoxId, string xmlResult, object userState) {
            if ((this.GetVehicleInfoXMLByBoxIdOperationCompleted == null)) {
                this.GetVehicleInfoXMLByBoxIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetVehicleInfoXMLByBoxIdOperationCompleted);
            }
            this.InvokeAsync("GetVehicleInfoXMLByBoxId", new object[] {
                        userId,
                        SID,
                        BoxId,
                        xmlResult}, this.GetVehicleInfoXMLByBoxIdOperationCompleted, userState);
        }
        
        private void OnGetVehicleInfoXMLByBoxIdOperationCompleted(object arg) {
            if ((this.GetVehicleInfoXMLByBoxIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetVehicleInfoXMLByBoxIdCompleted(this, new GetVehicleInfoXMLByBoxIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/UpdateVehicleInfo", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateVehicleInfo(
                    int userId, 
                    string SID, 
                    string oldLicensePlate, 
                    string newLicensePlate, 
                    string color, 
                    double costPerMile, 
                    string description, 
                    int makeModelId, 
                    short modelYear, 
                    string stateProvince, 
                    short vehicleTypeId, 
                    string vinNum, 
                    long vehicleId, 
                    int oldBoxId, 
                    int newBoxId, 
                    short iconTypeId, 
                    string email, 
                    string phone, 
                    int timeZone, 
                    bool dayLightSaving, 
                    short formatType, 
                    bool notify, 
                    bool warning, 
                    bool critical, 
                    bool autoAdjustDayLightSaving, 
                    bool maintenance, 
                    int ServiceConfigID, 
                    string _class) {
            object[] results = this.Invoke("UpdateVehicleInfo", new object[] {
                        userId,
                        SID,
                        oldLicensePlate,
                        newLicensePlate,
                        color,
                        costPerMile,
                        description,
                        makeModelId,
                        modelYear,
                        stateProvince,
                        vehicleTypeId,
                        vinNum,
                        vehicleId,
                        oldBoxId,
                        newBoxId,
                        iconTypeId,
                        email,
                        phone,
                        timeZone,
                        dayLightSaving,
                        formatType,
                        notify,
                        warning,
                        critical,
                        autoAdjustDayLightSaving,
                        maintenance,
                        ServiceConfigID,
                        _class});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateVehicleInfoAsync(
                    int userId, 
                    string SID, 
                    string oldLicensePlate, 
                    string newLicensePlate, 
                    string color, 
                    double costPerMile, 
                    string description, 
                    int makeModelId, 
                    short modelYear, 
                    string stateProvince, 
                    short vehicleTypeId, 
                    string vinNum, 
                    long vehicleId, 
                    int oldBoxId, 
                    int newBoxId, 
                    short iconTypeId, 
                    string email, 
                    string phone, 
                    int timeZone, 
                    bool dayLightSaving, 
                    short formatType, 
                    bool notify, 
                    bool warning, 
                    bool critical, 
                    bool autoAdjustDayLightSaving, 
                    bool maintenance, 
                    int ServiceConfigID, 
                    string _class) {
            this.UpdateVehicleInfoAsync(userId, SID, oldLicensePlate, newLicensePlate, color, costPerMile, description, makeModelId, modelYear, stateProvince, vehicleTypeId, vinNum, vehicleId, oldBoxId, newBoxId, iconTypeId, email, phone, timeZone, dayLightSaving, formatType, notify, warning, critical, autoAdjustDayLightSaving, maintenance, ServiceConfigID, _class, null);
        }
        
        /// <remarks/>
        public void UpdateVehicleInfoAsync(
                    int userId, 
                    string SID, 
                    string oldLicensePlate, 
                    string newLicensePlate, 
                    string color, 
                    double costPerMile, 
                    string description, 
                    int makeModelId, 
                    short modelYear, 
                    string stateProvince, 
                    short vehicleTypeId, 
                    string vinNum, 
                    long vehicleId, 
                    int oldBoxId, 
                    int newBoxId, 
                    short iconTypeId, 
                    string email, 
                    string phone, 
                    int timeZone, 
                    bool dayLightSaving, 
                    short formatType, 
                    bool notify, 
                    bool warning, 
                    bool critical, 
                    bool autoAdjustDayLightSaving, 
                    bool maintenance, 
                    int ServiceConfigID, 
                    string _class, 
                    object userState) {
            if ((this.UpdateVehicleInfoOperationCompleted == null)) {
                this.UpdateVehicleInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateVehicleInfoOperationCompleted);
            }
            this.InvokeAsync("UpdateVehicleInfo", new object[] {
                        userId,
                        SID,
                        oldLicensePlate,
                        newLicensePlate,
                        color,
                        costPerMile,
                        description,
                        makeModelId,
                        modelYear,
                        stateProvince,
                        vehicleTypeId,
                        vinNum,
                        vehicleId,
                        oldBoxId,
                        newBoxId,
                        iconTypeId,
                        email,
                        phone,
                        timeZone,
                        dayLightSaving,
                        formatType,
                        notify,
                        warning,
                        critical,
                        autoAdjustDayLightSaving,
                        maintenance,
                        ServiceConfigID,
                        _class}, this.UpdateVehicleInfoOperationCompleted, userState);
        }
        
        private void OnUpdateVehicleInfoOperationCompleted(object arg) {
            if ((this.UpdateVehicleInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateVehicleInfoCompleted(this, new UpdateVehicleInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/UpdateVehicleAdditionalInfo", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateVehicleAdditionalInfo(int userId, string SID, long vehicleId, string field1, string field2, string field3, string field4, string field5, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> vehicleWeight, string vehicleWtUnit, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<float> fuelCapacity, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<float> fuelBurnRate) {
            object[] results = this.Invoke("UpdateVehicleAdditionalInfo", new object[] {
                        userId,
                        SID,
                        vehicleId,
                        field1,
                        field2,
                        field3,
                        field4,
                        field5,
                        vehicleWeight,
                        vehicleWtUnit,
                        fuelCapacity,
                        fuelBurnRate});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateVehicleAdditionalInfoAsync(int userId, string SID, long vehicleId, string field1, string field2, string field3, string field4, string field5, System.Nullable<int> vehicleWeight, string vehicleWtUnit, System.Nullable<float> fuelCapacity, System.Nullable<float> fuelBurnRate) {
            this.UpdateVehicleAdditionalInfoAsync(userId, SID, vehicleId, field1, field2, field3, field4, field5, vehicleWeight, vehicleWtUnit, fuelCapacity, fuelBurnRate, null);
        }
        
        /// <remarks/>
        public void UpdateVehicleAdditionalInfoAsync(int userId, string SID, long vehicleId, string field1, string field2, string field3, string field4, string field5, System.Nullable<int> vehicleWeight, string vehicleWtUnit, System.Nullable<float> fuelCapacity, System.Nullable<float> fuelBurnRate, object userState) {
            if ((this.UpdateVehicleAdditionalInfoOperationCompleted == null)) {
                this.UpdateVehicleAdditionalInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateVehicleAdditionalInfoOperationCompleted);
            }
            this.InvokeAsync("UpdateVehicleAdditionalInfo", new object[] {
                        userId,
                        SID,
                        vehicleId,
                        field1,
                        field2,
                        field3,
                        field4,
                        field5,
                        vehicleWeight,
                        vehicleWtUnit,
                        fuelCapacity,
                        fuelBurnRate}, this.UpdateVehicleAdditionalInfoOperationCompleted, userState);
        }
        
        private void OnUpdateVehicleAdditionalInfoOperationCompleted(object arg) {
            if ((this.UpdateVehicleAdditionalInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateVehicleAdditionalInfoCompleted(this, new UpdateVehicleAdditionalInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/Update3rdPartyVehicleAdditionalInfo", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int Update3rdPartyVehicleAdditionalInfo(
                    int userId, 
                    string SID, 
                    long vehicleId, 
                    string EquipNbr, 
                    string SAPEquipNbr, 
                    string LegacyEquipNbr, 
                    string ObjectType, 
                    string DOTNbr, 
                    string EquipCategory, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<System.DateTime> AcquireDate, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<System.DateTime> RetireDate, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<System.DateTime> SoldDate, 
                    string ObjectPrefix, 
                    string OwningDistrict, 
                    string ProjectNbr, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<decimal> TotalCtrReading_1, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<decimal> TotalCtrReading_2, 
                    string CtrReadingUom_1, 
                    string CtrReadingUom_2, 
                    string ShortDesc) {
            object[] results = this.Invoke("Update3rdPartyVehicleAdditionalInfo", new object[] {
                        userId,
                        SID,
                        vehicleId,
                        EquipNbr,
                        SAPEquipNbr,
                        LegacyEquipNbr,
                        ObjectType,
                        DOTNbr,
                        EquipCategory,
                        AcquireDate,
                        RetireDate,
                        SoldDate,
                        ObjectPrefix,
                        OwningDistrict,
                        ProjectNbr,
                        TotalCtrReading_1,
                        TotalCtrReading_2,
                        CtrReadingUom_1,
                        CtrReadingUom_2,
                        ShortDesc});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void Update3rdPartyVehicleAdditionalInfoAsync(
                    int userId, 
                    string SID, 
                    long vehicleId, 
                    string EquipNbr, 
                    string SAPEquipNbr, 
                    string LegacyEquipNbr, 
                    string ObjectType, 
                    string DOTNbr, 
                    string EquipCategory, 
                    System.Nullable<System.DateTime> AcquireDate, 
                    System.Nullable<System.DateTime> RetireDate, 
                    System.Nullable<System.DateTime> SoldDate, 
                    string ObjectPrefix, 
                    string OwningDistrict, 
                    string ProjectNbr, 
                    System.Nullable<decimal> TotalCtrReading_1, 
                    System.Nullable<decimal> TotalCtrReading_2, 
                    string CtrReadingUom_1, 
                    string CtrReadingUom_2, 
                    string ShortDesc) {
            this.Update3rdPartyVehicleAdditionalInfoAsync(userId, SID, vehicleId, EquipNbr, SAPEquipNbr, LegacyEquipNbr, ObjectType, DOTNbr, EquipCategory, AcquireDate, RetireDate, SoldDate, ObjectPrefix, OwningDistrict, ProjectNbr, TotalCtrReading_1, TotalCtrReading_2, CtrReadingUom_1, CtrReadingUom_2, ShortDesc, null);
        }
        
        /// <remarks/>
        public void Update3rdPartyVehicleAdditionalInfoAsync(
                    int userId, 
                    string SID, 
                    long vehicleId, 
                    string EquipNbr, 
                    string SAPEquipNbr, 
                    string LegacyEquipNbr, 
                    string ObjectType, 
                    string DOTNbr, 
                    string EquipCategory, 
                    System.Nullable<System.DateTime> AcquireDate, 
                    System.Nullable<System.DateTime> RetireDate, 
                    System.Nullable<System.DateTime> SoldDate, 
                    string ObjectPrefix, 
                    string OwningDistrict, 
                    string ProjectNbr, 
                    System.Nullable<decimal> TotalCtrReading_1, 
                    System.Nullable<decimal> TotalCtrReading_2, 
                    string CtrReadingUom_1, 
                    string CtrReadingUom_2, 
                    string ShortDesc, 
                    object userState) {
            if ((this.Update3rdPartyVehicleAdditionalInfoOperationCompleted == null)) {
                this.Update3rdPartyVehicleAdditionalInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdate3rdPartyVehicleAdditionalInfoOperationCompleted);
            }
            this.InvokeAsync("Update3rdPartyVehicleAdditionalInfo", new object[] {
                        userId,
                        SID,
                        vehicleId,
                        EquipNbr,
                        SAPEquipNbr,
                        LegacyEquipNbr,
                        ObjectType,
                        DOTNbr,
                        EquipCategory,
                        AcquireDate,
                        RetireDate,
                        SoldDate,
                        ObjectPrefix,
                        OwningDistrict,
                        ProjectNbr,
                        TotalCtrReading_1,
                        TotalCtrReading_2,
                        CtrReadingUom_1,
                        CtrReadingUom_2,
                        ShortDesc}, this.Update3rdPartyVehicleAdditionalInfoOperationCompleted, userState);
        }
        
        private void OnUpdate3rdPartyVehicleAdditionalInfoOperationCompleted(object arg) {
            if ((this.Update3rdPartyVehicleAdditionalInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Update3rdPartyVehicleAdditionalInfoCompleted(this, new Update3rdPartyVehicleAdditionalInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/UpdateVehicleWorkingHours", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateVehicleWorkingHours(int userId, string SID, long vehicleId, int weekdayStart, int weekdayEnd, int weekendStart, int weekendEnd) {
            object[] results = this.Invoke("UpdateVehicleWorkingHours", new object[] {
                        userId,
                        SID,
                        vehicleId,
                        weekdayStart,
                        weekdayEnd,
                        weekendStart,
                        weekendEnd});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateVehicleWorkingHoursAsync(int userId, string SID, long vehicleId, int weekdayStart, int weekdayEnd, int weekendStart, int weekendEnd) {
            this.UpdateVehicleWorkingHoursAsync(userId, SID, vehicleId, weekdayStart, weekdayEnd, weekendStart, weekendEnd, null);
        }
        
        /// <remarks/>
        public void UpdateVehicleWorkingHoursAsync(int userId, string SID, long vehicleId, int weekdayStart, int weekdayEnd, int weekendStart, int weekendEnd, object userState) {
            if ((this.UpdateVehicleWorkingHoursOperationCompleted == null)) {
                this.UpdateVehicleWorkingHoursOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateVehicleWorkingHoursOperationCompleted);
            }
            this.InvokeAsync("UpdateVehicleWorkingHours", new object[] {
                        userId,
                        SID,
                        vehicleId,
                        weekdayStart,
                        weekdayEnd,
                        weekendStart,
                        weekendEnd}, this.UpdateVehicleWorkingHoursOperationCompleted, userState);
        }
        
        private void OnUpdateVehicleWorkingHoursOperationCompleted(object arg) {
            if ((this.UpdateVehicleWorkingHoursCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateVehicleWorkingHoursCompleted(this, new UpdateVehicleWorkingHoursCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/UpdateVehicleInformation", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateVehicleInformation(int userId, string SID, long vehicleId, string xmlVehicleInfo, string newLicensePlate, int newBoxId) {
            object[] results = this.Invoke("UpdateVehicleInformation", new object[] {
                        userId,
                        SID,
                        vehicleId,
                        xmlVehicleInfo,
                        newLicensePlate,
                        newBoxId});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateVehicleInformationAsync(int userId, string SID, long vehicleId, string xmlVehicleInfo, string newLicensePlate, int newBoxId) {
            this.UpdateVehicleInformationAsync(userId, SID, vehicleId, xmlVehicleInfo, newLicensePlate, newBoxId, null);
        }
        
        /// <remarks/>
        public void UpdateVehicleInformationAsync(int userId, string SID, long vehicleId, string xmlVehicleInfo, string newLicensePlate, int newBoxId, object userState) {
            if ((this.UpdateVehicleInformationOperationCompleted == null)) {
                this.UpdateVehicleInformationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateVehicleInformationOperationCompleted);
            }
            this.InvokeAsync("UpdateVehicleInformation", new object[] {
                        userId,
                        SID,
                        vehicleId,
                        xmlVehicleInfo,
                        newLicensePlate,
                        newBoxId}, this.UpdateVehicleInformationOperationCompleted, userState);
        }
        
        private void OnUpdateVehicleInformationOperationCompleted(object arg) {
            if ((this.UpdateVehicleInformationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateVehicleInformationCompleted(this, new UpdateVehicleInformationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/AddVehicle", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AddVehicle(
                    int userId, 
                    string SID, 
                    string vinNum, 
                    int makeModelId, 
                    short vehicleTypeId, 
                    string stateProvince, 
                    short modelYear, 
                    string color, 
                    string description, 
                    double costPerMile, 
                    int organizationId, 
                    string licensePlate, 
                    int boxId, 
                    short iconTypeId, 
                    string email, 
                    string phone, 
                    int timeZone, 
                    bool dayLightSaving, 
                    short formatType, 
                    bool notify, 
                    bool warning, 
                    bool critical, 
                    bool autoAdjustDayLightSaving, 
                    bool maintenance, 
                    int ServiceConfigID, 
                    string _class, 
                    ref long vehicleId) {
            object[] results = this.Invoke("AddVehicle", new object[] {
                        userId,
                        SID,
                        vinNum,
                        makeModelId,
                        vehicleTypeId,
                        stateProvince,
                        modelYear,
                        color,
                        description,
                        costPerMile,
                        organizationId,
                        licensePlate,
                        boxId,
                        iconTypeId,
                        email,
                        phone,
                        timeZone,
                        dayLightSaving,
                        formatType,
                        notify,
                        warning,
                        critical,
                        autoAdjustDayLightSaving,
                        maintenance,
                        ServiceConfigID,
                        _class,
                        vehicleId});
            vehicleId = ((long)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AddVehicleAsync(
                    int userId, 
                    string SID, 
                    string vinNum, 
                    int makeModelId, 
                    short vehicleTypeId, 
                    string stateProvince, 
                    short modelYear, 
                    string color, 
                    string description, 
                    double costPerMile, 
                    int organizationId, 
                    string licensePlate, 
                    int boxId, 
                    short iconTypeId, 
                    string email, 
                    string phone, 
                    int timeZone, 
                    bool dayLightSaving, 
                    short formatType, 
                    bool notify, 
                    bool warning, 
                    bool critical, 
                    bool autoAdjustDayLightSaving, 
                    bool maintenance, 
                    int ServiceConfigID, 
                    string _class, 
                    long vehicleId) {
            this.AddVehicleAsync(userId, SID, vinNum, makeModelId, vehicleTypeId, stateProvince, modelYear, color, description, costPerMile, organizationId, licensePlate, boxId, iconTypeId, email, phone, timeZone, dayLightSaving, formatType, notify, warning, critical, autoAdjustDayLightSaving, maintenance, ServiceConfigID, _class, vehicleId, null);
        }
        
        /// <remarks/>
        public void AddVehicleAsync(
                    int userId, 
                    string SID, 
                    string vinNum, 
                    int makeModelId, 
                    short vehicleTypeId, 
                    string stateProvince, 
                    short modelYear, 
                    string color, 
                    string description, 
                    double costPerMile, 
                    int organizationId, 
                    string licensePlate, 
                    int boxId, 
                    short iconTypeId, 
                    string email, 
                    string phone, 
                    int timeZone, 
                    bool dayLightSaving, 
                    short formatType, 
                    bool notify, 
                    bool warning, 
                    bool critical, 
                    bool autoAdjustDayLightSaving, 
                    bool maintenance, 
                    int ServiceConfigID, 
                    string _class, 
                    long vehicleId, 
                    object userState) {
            if ((this.AddVehicleOperationCompleted == null)) {
                this.AddVehicleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddVehicleOperationCompleted);
            }
            this.InvokeAsync("AddVehicle", new object[] {
                        userId,
                        SID,
                        vinNum,
                        makeModelId,
                        vehicleTypeId,
                        stateProvince,
                        modelYear,
                        color,
                        description,
                        costPerMile,
                        organizationId,
                        licensePlate,
                        boxId,
                        iconTypeId,
                        email,
                        phone,
                        timeZone,
                        dayLightSaving,
                        formatType,
                        notify,
                        warning,
                        critical,
                        autoAdjustDayLightSaving,
                        maintenance,
                        ServiceConfigID,
                        _class,
                        vehicleId}, this.AddVehicleOperationCompleted, userState);
        }
        
        private void OnAddVehicleOperationCompleted(object arg) {
            if ((this.AddVehicleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddVehicleCompleted(this, new AddVehicleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/AddVehicleWorkingHours", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AddVehicleWorkingHours(int userId, string SID, long vehicleId, int weekdayStart, int weekdayEnd, int weekendStart, int weekendEnd) {
            object[] results = this.Invoke("AddVehicleWorkingHours", new object[] {
                        userId,
                        SID,
                        vehicleId,
                        weekdayStart,
                        weekdayEnd,
                        weekendStart,
                        weekendEnd});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AddVehicleWorkingHoursAsync(int userId, string SID, long vehicleId, int weekdayStart, int weekdayEnd, int weekendStart, int weekendEnd) {
            this.AddVehicleWorkingHoursAsync(userId, SID, vehicleId, weekdayStart, weekdayEnd, weekendStart, weekendEnd, null);
        }
        
        /// <remarks/>
        public void AddVehicleWorkingHoursAsync(int userId, string SID, long vehicleId, int weekdayStart, int weekdayEnd, int weekendStart, int weekendEnd, object userState) {
            if ((this.AddVehicleWorkingHoursOperationCompleted == null)) {
                this.AddVehicleWorkingHoursOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddVehicleWorkingHoursOperationCompleted);
            }
            this.InvokeAsync("AddVehicleWorkingHours", new object[] {
                        userId,
                        SID,
                        vehicleId,
                        weekdayStart,
                        weekdayEnd,
                        weekendStart,
                        weekendEnd}, this.AddVehicleWorkingHoursOperationCompleted, userState);
        }
        
        private void OnAddVehicleWorkingHoursOperationCompleted(object arg) {
            if ((this.AddVehicleWorkingHoursCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddVehicleWorkingHoursCompleted(this, new AddVehicleWorkingHoursCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/DeleteVehicleWorkingHours", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int DeleteVehicleWorkingHours(int userId, string SID, long vehicleId) {
            object[] results = this.Invoke("DeleteVehicleWorkingHours", new object[] {
                        userId,
                        SID,
                        vehicleId});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteVehicleWorkingHoursAsync(int userId, string SID, long vehicleId) {
            this.DeleteVehicleWorkingHoursAsync(userId, SID, vehicleId, null);
        }
        
        /// <remarks/>
        public void DeleteVehicleWorkingHoursAsync(int userId, string SID, long vehicleId, object userState) {
            if ((this.DeleteVehicleWorkingHoursOperationCompleted == null)) {
                this.DeleteVehicleWorkingHoursOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteVehicleWorkingHoursOperationCompleted);
            }
            this.InvokeAsync("DeleteVehicleWorkingHours", new object[] {
                        userId,
                        SID,
                        vehicleId}, this.DeleteVehicleWorkingHoursOperationCompleted, userState);
        }
        
        private void OnDeleteVehicleWorkingHoursOperationCompleted(object arg) {
            if ((this.DeleteVehicleWorkingHoursCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteVehicleWorkingHoursCompleted(this, new DeleteVehicleWorkingHoursCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/AssignVehicle", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AssignVehicle(int userId, string SID, string licensePlate, int boxId, long vehicleId) {
            object[] results = this.Invoke("AssignVehicle", new object[] {
                        userId,
                        SID,
                        licensePlate,
                        boxId,
                        vehicleId});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AssignVehicleAsync(int userId, string SID, string licensePlate, int boxId, long vehicleId) {
            this.AssignVehicleAsync(userId, SID, licensePlate, boxId, vehicleId, null);
        }
        
        /// <remarks/>
        public void AssignVehicleAsync(int userId, string SID, string licensePlate, int boxId, long vehicleId, object userState) {
            if ((this.AssignVehicleOperationCompleted == null)) {
                this.AssignVehicleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAssignVehicleOperationCompleted);
            }
            this.InvokeAsync("AssignVehicle", new object[] {
                        userId,
                        SID,
                        licensePlate,
                        boxId,
                        vehicleId}, this.AssignVehicleOperationCompleted, userState);
        }
        
        private void OnAssignVehicleOperationCompleted(object arg) {
            if ((this.AssignVehicleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AssignVehicleCompleted(this, new AssignVehicleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/AssignVehicleToBox", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AssignVehicleToBox(int userId, string SID, string licensePlate, int boxId, long vehicleId) {
            object[] results = this.Invoke("AssignVehicleToBox", new object[] {
                        userId,
                        SID,
                        licensePlate,
                        boxId,
                        vehicleId});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AssignVehicleToBoxAsync(int userId, string SID, string licensePlate, int boxId, long vehicleId) {
            this.AssignVehicleToBoxAsync(userId, SID, licensePlate, boxId, vehicleId, null);
        }
        
        /// <remarks/>
        public void AssignVehicleToBoxAsync(int userId, string SID, string licensePlate, int boxId, long vehicleId, object userState) {
            if ((this.AssignVehicleToBoxOperationCompleted == null)) {
                this.AssignVehicleToBoxOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAssignVehicleToBoxOperationCompleted);
            }
            this.InvokeAsync("AssignVehicleToBox", new object[] {
                        userId,
                        SID,
                        licensePlate,
                        boxId,
                        vehicleId}, this.AssignVehicleToBoxOperationCompleted, userState);
        }
        
        private void OnAssignVehicleToBoxOperationCompleted(object arg) {
            if ((this.AssignVehicleToBoxCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AssignVehicleToBoxCompleted(this, new AssignVehicleToBoxCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/DeleteVehicle", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int DeleteVehicle(int userId, string SID, long vehicleId) {
            object[] results = this.Invoke("DeleteVehicle", new object[] {
                        userId,
                        SID,
                        vehicleId});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteVehicleAsync(int userId, string SID, long vehicleId) {
            this.DeleteVehicleAsync(userId, SID, vehicleId, null);
        }
        
        /// <remarks/>
        public void DeleteVehicleAsync(int userId, string SID, long vehicleId, object userState) {
            if ((this.DeleteVehicleOperationCompleted == null)) {
                this.DeleteVehicleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteVehicleOperationCompleted);
            }
            this.InvokeAsync("DeleteVehicle", new object[] {
                        userId,
                        SID,
                        vehicleId}, this.DeleteVehicleOperationCompleted, userState);
        }
        
        private void OnDeleteVehicleOperationCompleted(object arg) {
            if ((this.DeleteVehicleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteVehicleCompleted(this, new DeleteVehicleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/SetVehicleAutoAdjustDayLightSaving", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SetVehicleAutoAdjustDayLightSaving(int userId, string SID, long vehicleId, bool autoAdjustDayLightSaving, bool dayLightSaving) {
            object[] results = this.Invoke("SetVehicleAutoAdjustDayLightSaving", new object[] {
                        userId,
                        SID,
                        vehicleId,
                        autoAdjustDayLightSaving,
                        dayLightSaving});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SetVehicleAutoAdjustDayLightSavingAsync(int userId, string SID, long vehicleId, bool autoAdjustDayLightSaving, bool dayLightSaving) {
            this.SetVehicleAutoAdjustDayLightSavingAsync(userId, SID, vehicleId, autoAdjustDayLightSaving, dayLightSaving, null);
        }
        
        /// <remarks/>
        public void SetVehicleAutoAdjustDayLightSavingAsync(int userId, string SID, long vehicleId, bool autoAdjustDayLightSaving, bool dayLightSaving, object userState) {
            if ((this.SetVehicleAutoAdjustDayLightSavingOperationCompleted == null)) {
                this.SetVehicleAutoAdjustDayLightSavingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetVehicleAutoAdjustDayLightSavingOperationCompleted);
            }
            this.InvokeAsync("SetVehicleAutoAdjustDayLightSaving", new object[] {
                        userId,
                        SID,
                        vehicleId,
                        autoAdjustDayLightSaving,
                        dayLightSaving}, this.SetVehicleAutoAdjustDayLightSavingOperationCompleted, userState);
        }
        
        private void OnSetVehicleAutoAdjustDayLightSavingOperationCompleted(object arg) {
            if ((this.SetVehicleAutoAdjustDayLightSavingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetVehicleAutoAdjustDayLightSavingCompleted(this, new SetVehicleAutoAdjustDayLightSavingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetVehicleSensorsXML", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetVehicleSensorsXML(int userId, string SID, string licensePlate, ref string xml) {
            object[] results = this.Invoke("GetVehicleSensorsXML", new object[] {
                        userId,
                        SID,
                        licensePlate,
                        xml});
            xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetVehicleSensorsXMLAsync(int userId, string SID, string licensePlate, string xml) {
            this.GetVehicleSensorsXMLAsync(userId, SID, licensePlate, xml, null);
        }
        
        /// <remarks/>
        public void GetVehicleSensorsXMLAsync(int userId, string SID, string licensePlate, string xml, object userState) {
            if ((this.GetVehicleSensorsXMLOperationCompleted == null)) {
                this.GetVehicleSensorsXMLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetVehicleSensorsXMLOperationCompleted);
            }
            this.InvokeAsync("GetVehicleSensorsXML", new object[] {
                        userId,
                        SID,
                        licensePlate,
                        xml}, this.GetVehicleSensorsXMLOperationCompleted, userState);
        }
        
        private void OnGetVehicleSensorsXMLOperationCompleted(object arg) {
            if ((this.GetVehicleSensorsXMLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetVehicleSensorsXMLCompleted(this, new GetVehicleSensorsXMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetVehicleSensorsXMLByLang", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetVehicleSensorsXMLByLang(int userId, string SID, string licensePlate, string lang, ref string xml) {
            object[] results = this.Invoke("GetVehicleSensorsXMLByLang", new object[] {
                        userId,
                        SID,
                        licensePlate,
                        lang,
                        xml});
            xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetVehicleSensorsXMLByLangAsync(int userId, string SID, string licensePlate, string lang, string xml) {
            this.GetVehicleSensorsXMLByLangAsync(userId, SID, licensePlate, lang, xml, null);
        }
        
        /// <remarks/>
        public void GetVehicleSensorsXMLByLangAsync(int userId, string SID, string licensePlate, string lang, string xml, object userState) {
            if ((this.GetVehicleSensorsXMLByLangOperationCompleted == null)) {
                this.GetVehicleSensorsXMLByLangOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetVehicleSensorsXMLByLangOperationCompleted);
            }
            this.InvokeAsync("GetVehicleSensorsXMLByLang", new object[] {
                        userId,
                        SID,
                        licensePlate,
                        lang,
                        xml}, this.GetVehicleSensorsXMLByLangOperationCompleted, userState);
        }
        
        private void OnGetVehicleSensorsXMLByLangOperationCompleted(object arg) {
            if ((this.GetVehicleSensorsXMLByLangCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetVehicleSensorsXMLByLangCompleted(this, new GetVehicleSensorsXMLByLangCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetVehicleSensorsXMLByBoxId", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetVehicleSensorsXMLByBoxId(int userId, string SID, int boxId, ref string xml) {
            object[] results = this.Invoke("GetVehicleSensorsXMLByBoxId", new object[] {
                        userId,
                        SID,
                        boxId,
                        xml});
            xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetVehicleSensorsXMLByBoxIdAsync(int userId, string SID, int boxId, string xml) {
            this.GetVehicleSensorsXMLByBoxIdAsync(userId, SID, boxId, xml, null);
        }
        
        /// <remarks/>
        public void GetVehicleSensorsXMLByBoxIdAsync(int userId, string SID, int boxId, string xml, object userState) {
            if ((this.GetVehicleSensorsXMLByBoxIdOperationCompleted == null)) {
                this.GetVehicleSensorsXMLByBoxIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetVehicleSensorsXMLByBoxIdOperationCompleted);
            }
            this.InvokeAsync("GetVehicleSensorsXMLByBoxId", new object[] {
                        userId,
                        SID,
                        boxId,
                        xml}, this.GetVehicleSensorsXMLByBoxIdOperationCompleted, userState);
        }
        
        private void OnGetVehicleSensorsXMLByBoxIdOperationCompleted(object arg) {
            if ((this.GetVehicleSensorsXMLByBoxIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetVehicleSensorsXMLByBoxIdCompleted(this, new GetVehicleSensorsXMLByBoxIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetBoxIDByLicensePlate", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetBoxIDByLicensePlate(int userId, string SID, string licensePlate, ref int boxId) {
            object[] results = this.Invoke("GetBoxIDByLicensePlate", new object[] {
                        userId,
                        SID,
                        licensePlate,
                        boxId});
            boxId = ((int)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetBoxIDByLicensePlateAsync(int userId, string SID, string licensePlate, int boxId) {
            this.GetBoxIDByLicensePlateAsync(userId, SID, licensePlate, boxId, null);
        }
        
        /// <remarks/>
        public void GetBoxIDByLicensePlateAsync(int userId, string SID, string licensePlate, int boxId, object userState) {
            if ((this.GetBoxIDByLicensePlateOperationCompleted == null)) {
                this.GetBoxIDByLicensePlateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBoxIDByLicensePlateOperationCompleted);
            }
            this.InvokeAsync("GetBoxIDByLicensePlate", new object[] {
                        userId,
                        SID,
                        licensePlate,
                        boxId}, this.GetBoxIDByLicensePlateOperationCompleted, userState);
        }
        
        private void OnGetBoxIDByLicensePlateOperationCompleted(object arg) {
            if ((this.GetBoxIDByLicensePlateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBoxIDByLicensePlateCompleted(this, new GetBoxIDByLicensePlateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetBoxIDByVehicleDescription", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetBoxIDByVehicleDescription(int userId, string SID, string vehicleDescription, int organizationId, ref int boxId) {
            object[] results = this.Invoke("GetBoxIDByVehicleDescription", new object[] {
                        userId,
                        SID,
                        vehicleDescription,
                        organizationId,
                        boxId});
            boxId = ((int)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetBoxIDByVehicleDescriptionAsync(int userId, string SID, string vehicleDescription, int organizationId, int boxId) {
            this.GetBoxIDByVehicleDescriptionAsync(userId, SID, vehicleDescription, organizationId, boxId, null);
        }
        
        /// <remarks/>
        public void GetBoxIDByVehicleDescriptionAsync(int userId, string SID, string vehicleDescription, int organizationId, int boxId, object userState) {
            if ((this.GetBoxIDByVehicleDescriptionOperationCompleted == null)) {
                this.GetBoxIDByVehicleDescriptionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBoxIDByVehicleDescriptionOperationCompleted);
            }
            this.InvokeAsync("GetBoxIDByVehicleDescription", new object[] {
                        userId,
                        SID,
                        vehicleDescription,
                        organizationId,
                        boxId}, this.GetBoxIDByVehicleDescriptionOperationCompleted, userState);
        }
        
        private void OnGetBoxIDByVehicleDescriptionOperationCompleted(object arg) {
            if ((this.GetBoxIDByVehicleDescriptionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBoxIDByVehicleDescriptionCompleted(this, new GetBoxIDByVehicleDescriptionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetBoxChannelsInfo", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetBoxChannelsInfo(int userId, string SID, string vehicleDescription, int organizationId, ref string xml) {
            object[] results = this.Invoke("GetBoxChannelsInfo", new object[] {
                        userId,
                        SID,
                        vehicleDescription,
                        organizationId,
                        xml});
            xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetBoxChannelsInfoAsync(int userId, string SID, string vehicleDescription, int organizationId, string xml) {
            this.GetBoxChannelsInfoAsync(userId, SID, vehicleDescription, organizationId, xml, null);
        }
        
        /// <remarks/>
        public void GetBoxChannelsInfoAsync(int userId, string SID, string vehicleDescription, int organizationId, string xml, object userState) {
            if ((this.GetBoxChannelsInfoOperationCompleted == null)) {
                this.GetBoxChannelsInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBoxChannelsInfoOperationCompleted);
            }
            this.InvokeAsync("GetBoxChannelsInfo", new object[] {
                        userId,
                        SID,
                        vehicleDescription,
                        organizationId,
                        xml}, this.GetBoxChannelsInfoOperationCompleted, userState);
        }
        
        private void OnGetBoxChannelsInfoOperationCompleted(object arg) {
            if ((this.GetBoxChannelsInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBoxChannelsInfoCompleted(this, new GetBoxChannelsInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/SetVehicleSensorsByBoxId", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SetVehicleSensorsByBoxId(int userId, string SID, int boxId, string xmlSensorsSetting) {
            object[] results = this.Invoke("SetVehicleSensorsByBoxId", new object[] {
                        userId,
                        SID,
                        boxId,
                        xmlSensorsSetting});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SetVehicleSensorsByBoxIdAsync(int userId, string SID, int boxId, string xmlSensorsSetting) {
            this.SetVehicleSensorsByBoxIdAsync(userId, SID, boxId, xmlSensorsSetting, null);
        }
        
        /// <remarks/>
        public void SetVehicleSensorsByBoxIdAsync(int userId, string SID, int boxId, string xmlSensorsSetting, object userState) {
            if ((this.SetVehicleSensorsByBoxIdOperationCompleted == null)) {
                this.SetVehicleSensorsByBoxIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetVehicleSensorsByBoxIdOperationCompleted);
            }
            this.InvokeAsync("SetVehicleSensorsByBoxId", new object[] {
                        userId,
                        SID,
                        boxId,
                        xmlSensorsSetting}, this.SetVehicleSensorsByBoxIdOperationCompleted, userState);
        }
        
        private void OnSetVehicleSensorsByBoxIdOperationCompleted(object arg) {
            if ((this.SetVehicleSensorsByBoxIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetVehicleSensorsByBoxIdCompleted(this, new SetVehicleSensorsByBoxIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/SetVehicleSensorsByLicencePlate", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SetVehicleSensorsByLicencePlate(int userId, string SID, string licensePlate, string xmlSensorsSetting) {
            object[] results = this.Invoke("SetVehicleSensorsByLicencePlate", new object[] {
                        userId,
                        SID,
                        licensePlate,
                        xmlSensorsSetting});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SetVehicleSensorsByLicencePlateAsync(int userId, string SID, string licensePlate, string xmlSensorsSetting) {
            this.SetVehicleSensorsByLicencePlateAsync(userId, SID, licensePlate, xmlSensorsSetting, null);
        }
        
        /// <remarks/>
        public void SetVehicleSensorsByLicencePlateAsync(int userId, string SID, string licensePlate, string xmlSensorsSetting, object userState) {
            if ((this.SetVehicleSensorsByLicencePlateOperationCompleted == null)) {
                this.SetVehicleSensorsByLicencePlateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetVehicleSensorsByLicencePlateOperationCompleted);
            }
            this.InvokeAsync("SetVehicleSensorsByLicencePlate", new object[] {
                        userId,
                        SID,
                        licensePlate,
                        xmlSensorsSetting}, this.SetVehicleSensorsByLicencePlateOperationCompleted, userState);
        }
        
        private void OnSetVehicleSensorsByLicencePlateOperationCompleted(object arg) {
            if ((this.SetVehicleSensorsByLicencePlateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetVehicleSensorsByLicencePlateCompleted(this, new SetVehicleSensorsByLicencePlateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/UpdateSensorByLicencePlate", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateSensorByLicencePlate(int userId, string SID, string licensePlate, short sensorId, string sensorName, string sensorAction, short alarmLevelOn, short alarmLevelOff) {
            object[] results = this.Invoke("UpdateSensorByLicencePlate", new object[] {
                        userId,
                        SID,
                        licensePlate,
                        sensorId,
                        sensorName,
                        sensorAction,
                        alarmLevelOn,
                        alarmLevelOff});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateSensorByLicencePlateAsync(int userId, string SID, string licensePlate, short sensorId, string sensorName, string sensorAction, short alarmLevelOn, short alarmLevelOff) {
            this.UpdateSensorByLicencePlateAsync(userId, SID, licensePlate, sensorId, sensorName, sensorAction, alarmLevelOn, alarmLevelOff, null);
        }
        
        /// <remarks/>
        public void UpdateSensorByLicencePlateAsync(int userId, string SID, string licensePlate, short sensorId, string sensorName, string sensorAction, short alarmLevelOn, short alarmLevelOff, object userState) {
            if ((this.UpdateSensorByLicencePlateOperationCompleted == null)) {
                this.UpdateSensorByLicencePlateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateSensorByLicencePlateOperationCompleted);
            }
            this.InvokeAsync("UpdateSensorByLicencePlate", new object[] {
                        userId,
                        SID,
                        licensePlate,
                        sensorId,
                        sensorName,
                        sensorAction,
                        alarmLevelOn,
                        alarmLevelOff}, this.UpdateSensorByLicencePlateOperationCompleted, userState);
        }
        
        private void OnUpdateSensorByLicencePlateOperationCompleted(object arg) {
            if ((this.UpdateSensorByLicencePlateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateSensorByLicencePlateCompleted(this, new UpdateSensorByLicencePlateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/UpdateSensorNameByLicencePlate", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateSensorNameByLicencePlate(int userId, string licensePlate, short sensorId, string sensorName) {
            object[] results = this.Invoke("UpdateSensorNameByLicencePlate", new object[] {
                        userId,
                        licensePlate,
                        sensorId,
                        sensorName});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateSensorNameByLicencePlateAsync(int userId, string licensePlate, short sensorId, string sensorName) {
            this.UpdateSensorNameByLicencePlateAsync(userId, licensePlate, sensorId, sensorName, null);
        }
        
        /// <remarks/>
        public void UpdateSensorNameByLicencePlateAsync(int userId, string licensePlate, short sensorId, string sensorName, object userState) {
            if ((this.UpdateSensorNameByLicencePlateOperationCompleted == null)) {
                this.UpdateSensorNameByLicencePlateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateSensorNameByLicencePlateOperationCompleted);
            }
            this.InvokeAsync("UpdateSensorNameByLicencePlate", new object[] {
                        userId,
                        licensePlate,
                        sensorId,
                        sensorName}, this.UpdateSensorNameByLicencePlateOperationCompleted, userState);
        }
        
        private void OnUpdateSensorNameByLicencePlateOperationCompleted(object arg) {
            if ((this.UpdateSensorNameByLicencePlateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateSensorNameByLicencePlateCompleted(this, new UpdateSensorNameByLicencePlateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/DeleteVehicleSensorsByBoxId", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int DeleteVehicleSensorsByBoxId(int userId, string SID, int boxId) {
            object[] results = this.Invoke("DeleteVehicleSensorsByBoxId", new object[] {
                        userId,
                        SID,
                        boxId});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteVehicleSensorsByBoxIdAsync(int userId, string SID, int boxId) {
            this.DeleteVehicleSensorsByBoxIdAsync(userId, SID, boxId, null);
        }
        
        /// <remarks/>
        public void DeleteVehicleSensorsByBoxIdAsync(int userId, string SID, int boxId, object userState) {
            if ((this.DeleteVehicleSensorsByBoxIdOperationCompleted == null)) {
                this.DeleteVehicleSensorsByBoxIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteVehicleSensorsByBoxIdOperationCompleted);
            }
            this.InvokeAsync("DeleteVehicleSensorsByBoxId", new object[] {
                        userId,
                        SID,
                        boxId}, this.DeleteVehicleSensorsByBoxIdOperationCompleted, userState);
        }
        
        private void OnDeleteVehicleSensorsByBoxIdOperationCompleted(object arg) {
            if ((this.DeleteVehicleSensorsByBoxIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteVehicleSensorsByBoxIdCompleted(this, new DeleteVehicleSensorsByBoxIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/DeleteVehicleSensorsByLicencePlate", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int DeleteVehicleSensorsByLicencePlate(int userId, string SID, string licensePlate) {
            object[] results = this.Invoke("DeleteVehicleSensorsByLicencePlate", new object[] {
                        userId,
                        SID,
                        licensePlate});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteVehicleSensorsByLicencePlateAsync(int userId, string SID, string licensePlate) {
            this.DeleteVehicleSensorsByLicencePlateAsync(userId, SID, licensePlate, null);
        }
        
        /// <remarks/>
        public void DeleteVehicleSensorsByLicencePlateAsync(int userId, string SID, string licensePlate, object userState) {
            if ((this.DeleteVehicleSensorsByLicencePlateOperationCompleted == null)) {
                this.DeleteVehicleSensorsByLicencePlateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteVehicleSensorsByLicencePlateOperationCompleted);
            }
            this.InvokeAsync("DeleteVehicleSensorsByLicencePlate", new object[] {
                        userId,
                        SID,
                        licensePlate}, this.DeleteVehicleSensorsByLicencePlateOperationCompleted, userState);
        }
        
        private void OnDeleteVehicleSensorsByLicencePlateOperationCompleted(object arg) {
            if ((this.DeleteVehicleSensorsByLicencePlateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteVehicleSensorsByLicencePlateCompleted(this, new DeleteVehicleSensorsByLicencePlateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetSensorsInfoByBox", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetSensorsInfoByBox(int userId, string SID, int boxId, ref string xml) {
            object[] results = this.Invoke("GetSensorsInfoByBox", new object[] {
                        userId,
                        SID,
                        boxId,
                        xml});
            xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetSensorsInfoByBoxAsync(int userId, string SID, int boxId, string xml) {
            this.GetSensorsInfoByBoxAsync(userId, SID, boxId, xml, null);
        }
        
        /// <remarks/>
        public void GetSensorsInfoByBoxAsync(int userId, string SID, int boxId, string xml, object userState) {
            if ((this.GetSensorsInfoByBoxOperationCompleted == null)) {
                this.GetSensorsInfoByBoxOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSensorsInfoByBoxOperationCompleted);
            }
            this.InvokeAsync("GetSensorsInfoByBox", new object[] {
                        userId,
                        SID,
                        boxId,
                        xml}, this.GetSensorsInfoByBoxOperationCompleted, userState);
        }
        
        private void OnGetSensorsInfoByBoxOperationCompleted(object arg) {
            if ((this.GetSensorsInfoByBoxCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSensorsInfoByBoxCompleted(this, new GetSensorsInfoByBoxCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetSensorProfileByBox", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetSensorProfileByBox(int userId, string SID, short hwTypeId, int boxId, ref string xml) {
            object[] results = this.Invoke("GetSensorProfileByBox", new object[] {
                        userId,
                        SID,
                        hwTypeId,
                        boxId,
                        xml});
            xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetSensorProfileByBoxAsync(int userId, string SID, short hwTypeId, int boxId, string xml) {
            this.GetSensorProfileByBoxAsync(userId, SID, hwTypeId, boxId, xml, null);
        }
        
        /// <remarks/>
        public void GetSensorProfileByBoxAsync(int userId, string SID, short hwTypeId, int boxId, string xml, object userState) {
            if ((this.GetSensorProfileByBoxOperationCompleted == null)) {
                this.GetSensorProfileByBoxOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSensorProfileByBoxOperationCompleted);
            }
            this.InvokeAsync("GetSensorProfileByBox", new object[] {
                        userId,
                        SID,
                        hwTypeId,
                        boxId,
                        xml}, this.GetSensorProfileByBoxOperationCompleted, userState);
        }
        
        private void OnGetSensorProfileByBoxOperationCompleted(object arg) {
            if ((this.GetSensorProfileByBoxCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSensorProfileByBoxCompleted(this, new GetSensorProfileByBoxCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetVehicleCommandsXML", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetVehicleCommandsXML(int userId, string SID, string licensePlate, ref string xml) {
            object[] results = this.Invoke("GetVehicleCommandsXML", new object[] {
                        userId,
                        SID,
                        licensePlate,
                        xml});
            xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetVehicleCommandsXMLAsync(int userId, string SID, string licensePlate, string xml) {
            this.GetVehicleCommandsXMLAsync(userId, SID, licensePlate, xml, null);
        }
        
        /// <remarks/>
        public void GetVehicleCommandsXMLAsync(int userId, string SID, string licensePlate, string xml, object userState) {
            if ((this.GetVehicleCommandsXMLOperationCompleted == null)) {
                this.GetVehicleCommandsXMLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetVehicleCommandsXMLOperationCompleted);
            }
            this.InvokeAsync("GetVehicleCommandsXML", new object[] {
                        userId,
                        SID,
                        licensePlate,
                        xml}, this.GetVehicleCommandsXMLOperationCompleted, userState);
        }
        
        private void OnGetVehicleCommandsXMLOperationCompleted(object arg) {
            if ((this.GetVehicleCommandsXMLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetVehicleCommandsXMLCompleted(this, new GetVehicleCommandsXMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetVehicleCommandsXMLByLang", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetVehicleCommandsXMLByLang(int userId, string SID, string licensePlate, string lang, ref string xml) {
            object[] results = this.Invoke("GetVehicleCommandsXMLByLang", new object[] {
                        userId,
                        SID,
                        licensePlate,
                        lang,
                        xml});
            xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetVehicleCommandsXMLByLangAsync(int userId, string SID, string licensePlate, string lang, string xml) {
            this.GetVehicleCommandsXMLByLangAsync(userId, SID, licensePlate, lang, xml, null);
        }
        
        /// <remarks/>
        public void GetVehicleCommandsXMLByLangAsync(int userId, string SID, string licensePlate, string lang, string xml, object userState) {
            if ((this.GetVehicleCommandsXMLByLangOperationCompleted == null)) {
                this.GetVehicleCommandsXMLByLangOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetVehicleCommandsXMLByLangOperationCompleted);
            }
            this.InvokeAsync("GetVehicleCommandsXMLByLang", new object[] {
                        userId,
                        SID,
                        licensePlate,
                        lang,
                        xml}, this.GetVehicleCommandsXMLByLangOperationCompleted, userState);
        }
        
        private void OnGetVehicleCommandsXMLByLangOperationCompleted(object arg) {
            if ((this.GetVehicleCommandsXMLByLangCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetVehicleCommandsXMLByLangCompleted(this, new GetVehicleCommandsXMLByLangCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetVehicleCommandsXMLByBoxId", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetVehicleCommandsXMLByBoxId(int userId, string SID, int boxId, ref string xml) {
            object[] results = this.Invoke("GetVehicleCommandsXMLByBoxId", new object[] {
                        userId,
                        SID,
                        boxId,
                        xml});
            xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetVehicleCommandsXMLByBoxIdAsync(int userId, string SID, int boxId, string xml) {
            this.GetVehicleCommandsXMLByBoxIdAsync(userId, SID, boxId, xml, null);
        }
        
        /// <remarks/>
        public void GetVehicleCommandsXMLByBoxIdAsync(int userId, string SID, int boxId, string xml, object userState) {
            if ((this.GetVehicleCommandsXMLByBoxIdOperationCompleted == null)) {
                this.GetVehicleCommandsXMLByBoxIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetVehicleCommandsXMLByBoxIdOperationCompleted);
            }
            this.InvokeAsync("GetVehicleCommandsXMLByBoxId", new object[] {
                        userId,
                        SID,
                        boxId,
                        xml}, this.GetVehicleCommandsXMLByBoxIdOperationCompleted, userState);
        }
        
        private void OnGetVehicleCommandsXMLByBoxIdOperationCompleted(object arg) {
            if ((this.GetVehicleCommandsXMLByBoxIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetVehicleCommandsXMLByBoxIdCompleted(this, new GetVehicleCommandsXMLByBoxIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetCommandProtocolTypesInfo", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetCommandProtocolTypesInfo(int userId, string SID, int boxId, short commandTypeId, ref string xml) {
            object[] results = this.Invoke("GetCommandProtocolTypesInfo", new object[] {
                        userId,
                        SID,
                        boxId,
                        commandTypeId,
                        xml});
            xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetCommandProtocolTypesInfoAsync(int userId, string SID, int boxId, short commandTypeId, string xml) {
            this.GetCommandProtocolTypesInfoAsync(userId, SID, boxId, commandTypeId, xml, null);
        }
        
        /// <remarks/>
        public void GetCommandProtocolTypesInfoAsync(int userId, string SID, int boxId, short commandTypeId, string xml, object userState) {
            if ((this.GetCommandProtocolTypesInfoOperationCompleted == null)) {
                this.GetCommandProtocolTypesInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCommandProtocolTypesInfoOperationCompleted);
            }
            this.InvokeAsync("GetCommandProtocolTypesInfo", new object[] {
                        userId,
                        SID,
                        boxId,
                        commandTypeId,
                        xml}, this.GetCommandProtocolTypesInfoOperationCompleted, userState);
        }
        
        private void OnGetCommandProtocolTypesInfoOperationCompleted(object arg) {
            if ((this.GetCommandProtocolTypesInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCommandProtocolTypesInfoCompleted(this, new GetCommandProtocolTypesInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetOutputProtocolTypesInfo", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetOutputProtocolTypesInfo(int userId, string SID, int boxId, short outputId, ref string xml) {
            object[] results = this.Invoke("GetOutputProtocolTypesInfo", new object[] {
                        userId,
                        SID,
                        boxId,
                        outputId,
                        xml});
            xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetOutputProtocolTypesInfoAsync(int userId, string SID, int boxId, short outputId, string xml) {
            this.GetOutputProtocolTypesInfoAsync(userId, SID, boxId, outputId, xml, null);
        }
        
        /// <remarks/>
        public void GetOutputProtocolTypesInfoAsync(int userId, string SID, int boxId, short outputId, string xml, object userState) {
            if ((this.GetOutputProtocolTypesInfoOperationCompleted == null)) {
                this.GetOutputProtocolTypesInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOutputProtocolTypesInfoOperationCompleted);
            }
            this.InvokeAsync("GetOutputProtocolTypesInfo", new object[] {
                        userId,
                        SID,
                        boxId,
                        outputId,
                        xml}, this.GetOutputProtocolTypesInfoOperationCompleted, userState);
        }
        
        private void OnGetOutputProtocolTypesInfoOperationCompleted(object arg) {
            if ((this.GetOutputProtocolTypesInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOutputProtocolTypesInfoCompleted(this, new GetOutputProtocolTypesInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetVehicleMultiProtocolCommandsXML", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetVehicleMultiProtocolCommandsXML(int userId, string SID, string licensePlate, string protocols, ref string xml) {
            object[] results = this.Invoke("GetVehicleMultiProtocolCommandsXML", new object[] {
                        userId,
                        SID,
                        licensePlate,
                        protocols,
                        xml});
            xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetVehicleMultiProtocolCommandsXMLAsync(int userId, string SID, string licensePlate, string protocols, string xml) {
            this.GetVehicleMultiProtocolCommandsXMLAsync(userId, SID, licensePlate, protocols, xml, null);
        }
        
        /// <remarks/>
        public void GetVehicleMultiProtocolCommandsXMLAsync(int userId, string SID, string licensePlate, string protocols, string xml, object userState) {
            if ((this.GetVehicleMultiProtocolCommandsXMLOperationCompleted == null)) {
                this.GetVehicleMultiProtocolCommandsXMLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetVehicleMultiProtocolCommandsXMLOperationCompleted);
            }
            this.InvokeAsync("GetVehicleMultiProtocolCommandsXML", new object[] {
                        userId,
                        SID,
                        licensePlate,
                        protocols,
                        xml}, this.GetVehicleMultiProtocolCommandsXMLOperationCompleted, userState);
        }
        
        private void OnGetVehicleMultiProtocolCommandsXMLOperationCompleted(object arg) {
            if ((this.GetVehicleMultiProtocolCommandsXMLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetVehicleMultiProtocolCommandsXMLCompleted(this, new GetVehicleMultiProtocolCommandsXMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetMultiVehicleCommandsXMLByLang", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetMultiVehicleCommandsXMLByLang(int userId, string SID, string Boxid, string lang, ref string xml) {
            object[] results = this.Invoke("GetMultiVehicleCommandsXMLByLang", new object[] {
                        userId,
                        SID,
                        Boxid,
                        lang,
                        xml});
            xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetMultiVehicleCommandsXMLByLangAsync(int userId, string SID, string Boxid, string lang, string xml) {
            this.GetMultiVehicleCommandsXMLByLangAsync(userId, SID, Boxid, lang, xml, null);
        }
        
        /// <remarks/>
        public void GetMultiVehicleCommandsXMLByLangAsync(int userId, string SID, string Boxid, string lang, string xml, object userState) {
            if ((this.GetMultiVehicleCommandsXMLByLangOperationCompleted == null)) {
                this.GetMultiVehicleCommandsXMLByLangOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMultiVehicleCommandsXMLByLangOperationCompleted);
            }
            this.InvokeAsync("GetMultiVehicleCommandsXMLByLang", new object[] {
                        userId,
                        SID,
                        Boxid,
                        lang,
                        xml}, this.GetMultiVehicleCommandsXMLByLangOperationCompleted, userState);
        }
        
        private void OnGetMultiVehicleCommandsXMLByLangOperationCompleted(object arg) {
            if ((this.GetMultiVehicleCommandsXMLByLangCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMultiVehicleCommandsXMLByLangCompleted(this, new GetMultiVehicleCommandsXMLByLangCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetVehicleOutputsXML", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetVehicleOutputsXML(int userId, string SID, string licensePlate, ref string xml) {
            object[] results = this.Invoke("GetVehicleOutputsXML", new object[] {
                        userId,
                        SID,
                        licensePlate,
                        xml});
            xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetVehicleOutputsXMLAsync(int userId, string SID, string licensePlate, string xml) {
            this.GetVehicleOutputsXMLAsync(userId, SID, licensePlate, xml, null);
        }
        
        /// <remarks/>
        public void GetVehicleOutputsXMLAsync(int userId, string SID, string licensePlate, string xml, object userState) {
            if ((this.GetVehicleOutputsXMLOperationCompleted == null)) {
                this.GetVehicleOutputsXMLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetVehicleOutputsXMLOperationCompleted);
            }
            this.InvokeAsync("GetVehicleOutputsXML", new object[] {
                        userId,
                        SID,
                        licensePlate,
                        xml}, this.GetVehicleOutputsXMLOperationCompleted, userState);
        }
        
        private void OnGetVehicleOutputsXMLOperationCompleted(object arg) {
            if ((this.GetVehicleOutputsXMLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetVehicleOutputsXMLCompleted(this, new GetVehicleOutputsXMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetVehicleOutputsXMLByLang", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetVehicleOutputsXMLByLang(int userId, string SID, string licensePlate, string lang, ref string xml) {
            object[] results = this.Invoke("GetVehicleOutputsXMLByLang", new object[] {
                        userId,
                        SID,
                        licensePlate,
                        lang,
                        xml});
            xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetVehicleOutputsXMLByLangAsync(int userId, string SID, string licensePlate, string lang, string xml) {
            this.GetVehicleOutputsXMLByLangAsync(userId, SID, licensePlate, lang, xml, null);
        }
        
        /// <remarks/>
        public void GetVehicleOutputsXMLByLangAsync(int userId, string SID, string licensePlate, string lang, string xml, object userState) {
            if ((this.GetVehicleOutputsXMLByLangOperationCompleted == null)) {
                this.GetVehicleOutputsXMLByLangOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetVehicleOutputsXMLByLangOperationCompleted);
            }
            this.InvokeAsync("GetVehicleOutputsXMLByLang", new object[] {
                        userId,
                        SID,
                        licensePlate,
                        lang,
                        xml}, this.GetVehicleOutputsXMLByLangOperationCompleted, userState);
        }
        
        private void OnGetVehicleOutputsXMLByLangOperationCompleted(object arg) {
            if ((this.GetVehicleOutputsXMLByLangCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetVehicleOutputsXMLByLangCompleted(this, new GetVehicleOutputsXMLByLangCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetVehicleOutputsXMLByBoxId", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetVehicleOutputsXMLByBoxId(int userId, string SID, int boxId, ref string xml) {
            object[] results = this.Invoke("GetVehicleOutputsXMLByBoxId", new object[] {
                        userId,
                        SID,
                        boxId,
                        xml});
            xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetVehicleOutputsXMLByBoxIdAsync(int userId, string SID, int boxId, string xml) {
            this.GetVehicleOutputsXMLByBoxIdAsync(userId, SID, boxId, xml, null);
        }
        
        /// <remarks/>
        public void GetVehicleOutputsXMLByBoxIdAsync(int userId, string SID, int boxId, string xml, object userState) {
            if ((this.GetVehicleOutputsXMLByBoxIdOperationCompleted == null)) {
                this.GetVehicleOutputsXMLByBoxIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetVehicleOutputsXMLByBoxIdOperationCompleted);
            }
            this.InvokeAsync("GetVehicleOutputsXMLByBoxId", new object[] {
                        userId,
                        SID,
                        boxId,
                        xml}, this.GetVehicleOutputsXMLByBoxIdOperationCompleted, userState);
        }
        
        private void OnGetVehicleOutputsXMLByBoxIdOperationCompleted(object arg) {
            if ((this.GetVehicleOutputsXMLByBoxIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetVehicleOutputsXMLByBoxIdCompleted(this, new GetVehicleOutputsXMLByBoxIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/UpdateOutputByLicencePlate", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateOutputByLicencePlate(int userId, string SID, string licensePlate, short outputId, string outputName, string outputAction) {
            object[] results = this.Invoke("UpdateOutputByLicencePlate", new object[] {
                        userId,
                        SID,
                        licensePlate,
                        outputId,
                        outputName,
                        outputAction});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateOutputByLicencePlateAsync(int userId, string SID, string licensePlate, short outputId, string outputName, string outputAction) {
            this.UpdateOutputByLicencePlateAsync(userId, SID, licensePlate, outputId, outputName, outputAction, null);
        }
        
        /// <remarks/>
        public void UpdateOutputByLicencePlateAsync(int userId, string SID, string licensePlate, short outputId, string outputName, string outputAction, object userState) {
            if ((this.UpdateOutputByLicencePlateOperationCompleted == null)) {
                this.UpdateOutputByLicencePlateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateOutputByLicencePlateOperationCompleted);
            }
            this.InvokeAsync("UpdateOutputByLicencePlate", new object[] {
                        userId,
                        SID,
                        licensePlate,
                        outputId,
                        outputName,
                        outputAction}, this.UpdateOutputByLicencePlateOperationCompleted, userState);
        }
        
        private void OnUpdateOutputByLicencePlateOperationCompleted(object arg) {
            if ((this.UpdateOutputByLicencePlateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateOutputByLicencePlateCompleted(this, new UpdateOutputByLicencePlateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetAllSupportedMessagesByBoxId", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetAllSupportedMessagesByBoxId(int userId, string SID, int boxId, ref string xml) {
            object[] results = this.Invoke("GetAllSupportedMessagesByBoxId", new object[] {
                        userId,
                        SID,
                        boxId,
                        xml});
            xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllSupportedMessagesByBoxIdAsync(int userId, string SID, int boxId, string xml) {
            this.GetAllSupportedMessagesByBoxIdAsync(userId, SID, boxId, xml, null);
        }
        
        /// <remarks/>
        public void GetAllSupportedMessagesByBoxIdAsync(int userId, string SID, int boxId, string xml, object userState) {
            if ((this.GetAllSupportedMessagesByBoxIdOperationCompleted == null)) {
                this.GetAllSupportedMessagesByBoxIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllSupportedMessagesByBoxIdOperationCompleted);
            }
            this.InvokeAsync("GetAllSupportedMessagesByBoxId", new object[] {
                        userId,
                        SID,
                        boxId,
                        xml}, this.GetAllSupportedMessagesByBoxIdOperationCompleted, userState);
        }
        
        private void OnGetAllSupportedMessagesByBoxIdOperationCompleted(object arg) {
            if ((this.GetAllSupportedMessagesByBoxIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllSupportedMessagesByBoxIdCompleted(this, new GetAllSupportedMessagesByBoxIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetAllSupportedMessagesByBoxIdByLang", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetAllSupportedMessagesByBoxIdByLang(int userId, string SID, int boxId, string lang, ref string xml) {
            object[] results = this.Invoke("GetAllSupportedMessagesByBoxIdByLang", new object[] {
                        userId,
                        SID,
                        boxId,
                        lang,
                        xml});
            xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllSupportedMessagesByBoxIdByLangAsync(int userId, string SID, int boxId, string lang, string xml) {
            this.GetAllSupportedMessagesByBoxIdByLangAsync(userId, SID, boxId, lang, xml, null);
        }
        
        /// <remarks/>
        public void GetAllSupportedMessagesByBoxIdByLangAsync(int userId, string SID, int boxId, string lang, string xml, object userState) {
            if ((this.GetAllSupportedMessagesByBoxIdByLangOperationCompleted == null)) {
                this.GetAllSupportedMessagesByBoxIdByLangOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllSupportedMessagesByBoxIdByLangOperationCompleted);
            }
            this.InvokeAsync("GetAllSupportedMessagesByBoxIdByLang", new object[] {
                        userId,
                        SID,
                        boxId,
                        lang,
                        xml}, this.GetAllSupportedMessagesByBoxIdByLangOperationCompleted, userState);
        }
        
        private void OnGetAllSupportedMessagesByBoxIdByLangOperationCompleted(object arg) {
            if ((this.GetAllSupportedMessagesByBoxIdByLangCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllSupportedMessagesByBoxIdByLangCompleted(this, new GetAllSupportedMessagesByBoxIdByLangCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/UpdateMsgSeverity", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateMsgSeverity(int userId, string SID, int boxId, short msgInTypeId, short alarmLevel) {
            object[] results = this.Invoke("UpdateMsgSeverity", new object[] {
                        userId,
                        SID,
                        boxId,
                        msgInTypeId,
                        alarmLevel});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateMsgSeverityAsync(int userId, string SID, int boxId, short msgInTypeId, short alarmLevel) {
            this.UpdateMsgSeverityAsync(userId, SID, boxId, msgInTypeId, alarmLevel, null);
        }
        
        /// <remarks/>
        public void UpdateMsgSeverityAsync(int userId, string SID, int boxId, short msgInTypeId, short alarmLevel, object userState) {
            if ((this.UpdateMsgSeverityOperationCompleted == null)) {
                this.UpdateMsgSeverityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateMsgSeverityOperationCompleted);
            }
            this.InvokeAsync("UpdateMsgSeverity", new object[] {
                        userId,
                        SID,
                        boxId,
                        msgInTypeId,
                        alarmLevel}, this.UpdateMsgSeverityOperationCompleted, userState);
        }
        
        private void OnUpdateMsgSeverityOperationCompleted(object arg) {
            if ((this.UpdateMsgSeverityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateMsgSeverityCompleted(this, new UpdateMsgSeverityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetAllSupportedMessagesByFwChId", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetAllSupportedMessagesByFwChId(int userId, string SID, short fwChId, string lang, ref string xml) {
            object[] results = this.Invoke("GetAllSupportedMessagesByFwChId", new object[] {
                        userId,
                        SID,
                        fwChId,
                        lang,
                        xml});
            xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllSupportedMessagesByFwChIdAsync(int userId, string SID, short fwChId, string lang, string xml) {
            this.GetAllSupportedMessagesByFwChIdAsync(userId, SID, fwChId, lang, xml, null);
        }
        
        /// <remarks/>
        public void GetAllSupportedMessagesByFwChIdAsync(int userId, string SID, short fwChId, string lang, string xml, object userState) {
            if ((this.GetAllSupportedMessagesByFwChIdOperationCompleted == null)) {
                this.GetAllSupportedMessagesByFwChIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllSupportedMessagesByFwChIdOperationCompleted);
            }
            this.InvokeAsync("GetAllSupportedMessagesByFwChId", new object[] {
                        userId,
                        SID,
                        fwChId,
                        lang,
                        xml}, this.GetAllSupportedMessagesByFwChIdOperationCompleted, userState);
        }
        
        private void OnGetAllSupportedMessagesByFwChIdOperationCompleted(object arg) {
            if ((this.GetAllSupportedMessagesByFwChIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllSupportedMessagesByFwChIdCompleted(this, new GetAllSupportedMessagesByFwChIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/DeleteActiveVehicleAssignment", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int DeleteActiveVehicleAssignment(int userId, string SID, int boxId, string description) {
            object[] results = this.Invoke("DeleteActiveVehicleAssignment", new object[] {
                        userId,
                        SID,
                        boxId,
                        description});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteActiveVehicleAssignmentAsync(int userId, string SID, int boxId, string description) {
            this.DeleteActiveVehicleAssignmentAsync(userId, SID, boxId, description, null);
        }
        
        /// <remarks/>
        public void DeleteActiveVehicleAssignmentAsync(int userId, string SID, int boxId, string description, object userState) {
            if ((this.DeleteActiveVehicleAssignmentOperationCompleted == null)) {
                this.DeleteActiveVehicleAssignmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteActiveVehicleAssignmentOperationCompleted);
            }
            this.InvokeAsync("DeleteActiveVehicleAssignment", new object[] {
                        userId,
                        SID,
                        boxId,
                        description}, this.DeleteActiveVehicleAssignmentOperationCompleted, userState);
        }
        
        private void OnDeleteActiveVehicleAssignmentOperationCompleted(object arg) {
            if ((this.DeleteActiveVehicleAssignmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteActiveVehicleAssignmentCompleted(this, new DeleteActiveVehicleAssignmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetAllUnassignedVehiclesByOrganization", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetAllUnassignedVehiclesByOrganization(int userId, string SID, int organizationId, ref string xml) {
            object[] results = this.Invoke("GetAllUnassignedVehiclesByOrganization", new object[] {
                        userId,
                        SID,
                        organizationId,
                        xml});
            xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllUnassignedVehiclesByOrganizationAsync(int userId, string SID, int organizationId, string xml) {
            this.GetAllUnassignedVehiclesByOrganizationAsync(userId, SID, organizationId, xml, null);
        }
        
        /// <remarks/>
        public void GetAllUnassignedVehiclesByOrganizationAsync(int userId, string SID, int organizationId, string xml, object userState) {
            if ((this.GetAllUnassignedVehiclesByOrganizationOperationCompleted == null)) {
                this.GetAllUnassignedVehiclesByOrganizationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllUnassignedVehiclesByOrganizationOperationCompleted);
            }
            this.InvokeAsync("GetAllUnassignedVehiclesByOrganization", new object[] {
                        userId,
                        SID,
                        organizationId,
                        xml}, this.GetAllUnassignedVehiclesByOrganizationOperationCompleted, userState);
        }
        
        private void OnGetAllUnassignedVehiclesByOrganizationOperationCompleted(object arg) {
            if ((this.GetAllUnassignedVehiclesByOrganizationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllUnassignedVehiclesByOrganizationCompleted(this, new GetAllUnassignedVehiclesByOrganizationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetAllAssignedToVehicleGeozonesInfo", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetAllAssignedToVehicleGeozonesInfo(int userId, string SID, long vehicleId, ref string xml) {
            object[] results = this.Invoke("GetAllAssignedToVehicleGeozonesInfo", new object[] {
                        userId,
                        SID,
                        vehicleId,
                        xml});
            xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllAssignedToVehicleGeozonesInfoAsync(int userId, string SID, long vehicleId, string xml) {
            this.GetAllAssignedToVehicleGeozonesInfoAsync(userId, SID, vehicleId, xml, null);
        }
        
        /// <remarks/>
        public void GetAllAssignedToVehicleGeozonesInfoAsync(int userId, string SID, long vehicleId, string xml, object userState) {
            if ((this.GetAllAssignedToVehicleGeozonesInfoOperationCompleted == null)) {
                this.GetAllAssignedToVehicleGeozonesInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllAssignedToVehicleGeozonesInfoOperationCompleted);
            }
            this.InvokeAsync("GetAllAssignedToVehicleGeozonesInfo", new object[] {
                        userId,
                        SID,
                        vehicleId,
                        xml}, this.GetAllAssignedToVehicleGeozonesInfoOperationCompleted, userState);
        }
        
        private void OnGetAllAssignedToVehicleGeozonesInfoOperationCompleted(object arg) {
            if ((this.GetAllAssignedToVehicleGeozonesInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllAssignedToVehicleGeozonesInfoCompleted(this, new GetAllAssignedToVehicleGeozonesInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetAllAssignedGeozonesToVehicle", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetAllAssignedGeozonesToVehicle(int userId, string SID, int organizationId, short geozoneId, ref string xml) {
            object[] results = this.Invoke("GetAllAssignedGeozonesToVehicle", new object[] {
                        userId,
                        SID,
                        organizationId,
                        geozoneId,
                        xml});
            xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllAssignedGeozonesToVehicleAsync(int userId, string SID, int organizationId, short geozoneId, string xml) {
            this.GetAllAssignedGeozonesToVehicleAsync(userId, SID, organizationId, geozoneId, xml, null);
        }
        
        /// <remarks/>
        public void GetAllAssignedGeozonesToVehicleAsync(int userId, string SID, int organizationId, short geozoneId, string xml, object userState) {
            if ((this.GetAllAssignedGeozonesToVehicleOperationCompleted == null)) {
                this.GetAllAssignedGeozonesToVehicleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllAssignedGeozonesToVehicleOperationCompleted);
            }
            this.InvokeAsync("GetAllAssignedGeozonesToVehicle", new object[] {
                        userId,
                        SID,
                        organizationId,
                        geozoneId,
                        xml}, this.GetAllAssignedGeozonesToVehicleOperationCompleted, userState);
        }
        
        private void OnGetAllAssignedGeozonesToVehicleOperationCompleted(object arg) {
            if ((this.GetAllAssignedGeozonesToVehicleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllAssignedGeozonesToVehicleCompleted(this, new GetAllAssignedGeozonesToVehicleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetAllUnassignedToVehicleGeozonesInfo", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetAllUnassignedToVehicleGeozonesInfo(int userId, string SID, long vehicleId, ref string xml) {
            object[] results = this.Invoke("GetAllUnassignedToVehicleGeozonesInfo", new object[] {
                        userId,
                        SID,
                        vehicleId,
                        xml});
            xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllUnassignedToVehicleGeozonesInfoAsync(int userId, string SID, long vehicleId, string xml) {
            this.GetAllUnassignedToVehicleGeozonesInfoAsync(userId, SID, vehicleId, xml, null);
        }
        
        /// <remarks/>
        public void GetAllUnassignedToVehicleGeozonesInfoAsync(int userId, string SID, long vehicleId, string xml, object userState) {
            if ((this.GetAllUnassignedToVehicleGeozonesInfoOperationCompleted == null)) {
                this.GetAllUnassignedToVehicleGeozonesInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllUnassignedToVehicleGeozonesInfoOperationCompleted);
            }
            this.InvokeAsync("GetAllUnassignedToVehicleGeozonesInfo", new object[] {
                        userId,
                        SID,
                        vehicleId,
                        xml}, this.GetAllUnassignedToVehicleGeozonesInfoOperationCompleted, userState);
        }
        
        private void OnGetAllUnassignedToVehicleGeozonesInfoOperationCompleted(object arg) {
            if ((this.GetAllUnassignedToVehicleGeozonesInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllUnassignedToVehicleGeozonesInfoCompleted(this, new GetAllUnassignedToVehicleGeozonesInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/SetGeozoneSeverity", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SetGeozoneSeverity(int organizationId, int userId, string SID, long vehicleId, short geozoneId, short severityId) {
            object[] results = this.Invoke("SetGeozoneSeverity", new object[] {
                        organizationId,
                        userId,
                        SID,
                        vehicleId,
                        geozoneId,
                        severityId});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SetGeozoneSeverityAsync(int organizationId, int userId, string SID, long vehicleId, short geozoneId, short severityId) {
            this.SetGeozoneSeverityAsync(organizationId, userId, SID, vehicleId, geozoneId, severityId, null);
        }
        
        /// <remarks/>
        public void SetGeozoneSeverityAsync(int organizationId, int userId, string SID, long vehicleId, short geozoneId, short severityId, object userState) {
            if ((this.SetGeozoneSeverityOperationCompleted == null)) {
                this.SetGeozoneSeverityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetGeozoneSeverityOperationCompleted);
            }
            this.InvokeAsync("SetGeozoneSeverity", new object[] {
                        organizationId,
                        userId,
                        SID,
                        vehicleId,
                        geozoneId,
                        severityId}, this.SetGeozoneSeverityOperationCompleted, userState);
        }
        
        private void OnSetGeozoneSeverityOperationCompleted(object arg) {
            if ((this.SetGeozoneSeverityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetGeozoneSeverityCompleted(this, new SetGeozoneSeverityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/DeleteGeozoneFromVehicle", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int DeleteGeozoneFromVehicle(int userId, string SID, int boxId, short geozoneId, ref int rowsAffected) {
            object[] results = this.Invoke("DeleteGeozoneFromVehicle", new object[] {
                        userId,
                        SID,
                        boxId,
                        geozoneId,
                        rowsAffected});
            rowsAffected = ((int)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteGeozoneFromVehicleAsync(int userId, string SID, int boxId, short geozoneId, int rowsAffected) {
            this.DeleteGeozoneFromVehicleAsync(userId, SID, boxId, geozoneId, rowsAffected, null);
        }
        
        /// <remarks/>
        public void DeleteGeozoneFromVehicleAsync(int userId, string SID, int boxId, short geozoneId, int rowsAffected, object userState) {
            if ((this.DeleteGeozoneFromVehicleOperationCompleted == null)) {
                this.DeleteGeozoneFromVehicleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteGeozoneFromVehicleOperationCompleted);
            }
            this.InvokeAsync("DeleteGeozoneFromVehicle", new object[] {
                        userId,
                        SID,
                        boxId,
                        geozoneId,
                        rowsAffected}, this.DeleteGeozoneFromVehicleOperationCompleted, userState);
        }
        
        private void OnDeleteGeozoneFromVehicleOperationCompleted(object arg) {
            if ((this.DeleteGeozoneFromVehicleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteGeozoneFromVehicleCompleted(this, new DeleteGeozoneFromVehicleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/DeleteGeozoneFromVehicleByVehicleId", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int DeleteGeozoneFromVehicleByVehicleId(int userId, string SID, int vehicleId, short geozoneId, ref int rowsAffected) {
            object[] results = this.Invoke("DeleteGeozoneFromVehicleByVehicleId", new object[] {
                        userId,
                        SID,
                        vehicleId,
                        geozoneId,
                        rowsAffected});
            rowsAffected = ((int)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteGeozoneFromVehicleByVehicleIdAsync(int userId, string SID, int vehicleId, short geozoneId, int rowsAffected) {
            this.DeleteGeozoneFromVehicleByVehicleIdAsync(userId, SID, vehicleId, geozoneId, rowsAffected, null);
        }
        
        /// <remarks/>
        public void DeleteGeozoneFromVehicleByVehicleIdAsync(int userId, string SID, int vehicleId, short geozoneId, int rowsAffected, object userState) {
            if ((this.DeleteGeozoneFromVehicleByVehicleIdOperationCompleted == null)) {
                this.DeleteGeozoneFromVehicleByVehicleIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteGeozoneFromVehicleByVehicleIdOperationCompleted);
            }
            this.InvokeAsync("DeleteGeozoneFromVehicleByVehicleId", new object[] {
                        userId,
                        SID,
                        vehicleId,
                        geozoneId,
                        rowsAffected}, this.DeleteGeozoneFromVehicleByVehicleIdOperationCompleted, userState);
        }
        
        private void OnDeleteGeozoneFromVehicleByVehicleIdOperationCompleted(object arg) {
            if ((this.DeleteGeozoneFromVehicleByVehicleIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteGeozoneFromVehicleByVehicleIdCompleted(this, new DeleteGeozoneFromVehicleByVehicleIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/AddGeozoneToVehicle", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AddGeozoneToVehicle(int userId, string SID, int vehicleId, short geozoneId, short severityId, int speed) {
            object[] results = this.Invoke("AddGeozoneToVehicle", new object[] {
                        userId,
                        SID,
                        vehicleId,
                        geozoneId,
                        severityId,
                        speed});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AddGeozoneToVehicleAsync(int userId, string SID, int vehicleId, short geozoneId, short severityId, int speed) {
            this.AddGeozoneToVehicleAsync(userId, SID, vehicleId, geozoneId, severityId, speed, null);
        }
        
        /// <remarks/>
        public void AddGeozoneToVehicleAsync(int userId, string SID, int vehicleId, short geozoneId, short severityId, int speed, object userState) {
            if ((this.AddGeozoneToVehicleOperationCompleted == null)) {
                this.AddGeozoneToVehicleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddGeozoneToVehicleOperationCompleted);
            }
            this.InvokeAsync("AddGeozoneToVehicle", new object[] {
                        userId,
                        SID,
                        vehicleId,
                        geozoneId,
                        severityId,
                        speed}, this.AddGeozoneToVehicleOperationCompleted, userState);
        }
        
        private void OnAddGeozoneToVehicleOperationCompleted(object arg) {
            if ((this.AddGeozoneToVehicleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddGeozoneToVehicleCompleted(this, new AddGeozoneToVehicleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetMaxGeozonesByVehicleId", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetMaxGeozonesByVehicleId(int userId, string SID, long vehicleId, ref int maxGeozones) {
            object[] results = this.Invoke("GetMaxGeozonesByVehicleId", new object[] {
                        userId,
                        SID,
                        vehicleId,
                        maxGeozones});
            maxGeozones = ((int)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetMaxGeozonesByVehicleIdAsync(int userId, string SID, long vehicleId, int maxGeozones) {
            this.GetMaxGeozonesByVehicleIdAsync(userId, SID, vehicleId, maxGeozones, null);
        }
        
        /// <remarks/>
        public void GetMaxGeozonesByVehicleIdAsync(int userId, string SID, long vehicleId, int maxGeozones, object userState) {
            if ((this.GetMaxGeozonesByVehicleIdOperationCompleted == null)) {
                this.GetMaxGeozonesByVehicleIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMaxGeozonesByVehicleIdOperationCompleted);
            }
            this.InvokeAsync("GetMaxGeozonesByVehicleId", new object[] {
                        userId,
                        SID,
                        vehicleId,
                        maxGeozones}, this.GetMaxGeozonesByVehicleIdOperationCompleted, userState);
        }
        
        private void OnGetMaxGeozonesByVehicleIdOperationCompleted(object arg) {
            if ((this.GetMaxGeozonesByVehicleIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMaxGeozonesByVehicleIdCompleted(this, new GetMaxGeozonesByVehicleIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetCommInfoByBoxId", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetCommInfoByBoxId(int userId, string SID, int boxId, ref string xml) {
            object[] results = this.Invoke("GetCommInfoByBoxId", new object[] {
                        userId,
                        SID,
                        boxId,
                        xml});
            xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetCommInfoByBoxIdAsync(int userId, string SID, int boxId, string xml) {
            this.GetCommInfoByBoxIdAsync(userId, SID, boxId, xml, null);
        }
        
        /// <remarks/>
        public void GetCommInfoByBoxIdAsync(int userId, string SID, int boxId, string xml, object userState) {
            if ((this.GetCommInfoByBoxIdOperationCompleted == null)) {
                this.GetCommInfoByBoxIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCommInfoByBoxIdOperationCompleted);
            }
            this.InvokeAsync("GetCommInfoByBoxId", new object[] {
                        userId,
                        SID,
                        boxId,
                        xml}, this.GetCommInfoByBoxIdOperationCompleted, userState);
        }
        
        private void OnGetCommInfoByBoxIdOperationCompleted(object arg) {
            if ((this.GetCommInfoByBoxIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCommInfoByBoxIdCompleted(this, new GetCommInfoByBoxIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetBoxConfigInfo", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetBoxConfigInfo(int userId, string SID, int boxId, ref string xml) {
            object[] results = this.Invoke("GetBoxConfigInfo", new object[] {
                        userId,
                        SID,
                        boxId,
                        xml});
            xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetBoxConfigInfoAsync(int userId, string SID, int boxId, string xml) {
            this.GetBoxConfigInfoAsync(userId, SID, boxId, xml, null);
        }
        
        /// <remarks/>
        public void GetBoxConfigInfoAsync(int userId, string SID, int boxId, string xml, object userState) {
            if ((this.GetBoxConfigInfoOperationCompleted == null)) {
                this.GetBoxConfigInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBoxConfigInfoOperationCompleted);
            }
            this.InvokeAsync("GetBoxConfigInfo", new object[] {
                        userId,
                        SID,
                        boxId,
                        xml}, this.GetBoxConfigInfoOperationCompleted, userState);
        }
        
        private void OnGetBoxConfigInfoOperationCompleted(object arg) {
            if ((this.GetBoxConfigInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBoxConfigInfoCompleted(this, new GetBoxConfigInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetActiveVehicleCfgInfo", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetActiveVehicleCfgInfo(int userId, string SID, long vehicleId, ref string xml) {
            object[] results = this.Invoke("GetActiveVehicleCfgInfo", new object[] {
                        userId,
                        SID,
                        vehicleId,
                        xml});
            xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetActiveVehicleCfgInfoAsync(int userId, string SID, long vehicleId, string xml) {
            this.GetActiveVehicleCfgInfoAsync(userId, SID, vehicleId, xml, null);
        }
        
        /// <remarks/>
        public void GetActiveVehicleCfgInfoAsync(int userId, string SID, long vehicleId, string xml, object userState) {
            if ((this.GetActiveVehicleCfgInfoOperationCompleted == null)) {
                this.GetActiveVehicleCfgInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetActiveVehicleCfgInfoOperationCompleted);
            }
            this.InvokeAsync("GetActiveVehicleCfgInfo", new object[] {
                        userId,
                        SID,
                        vehicleId,
                        xml}, this.GetActiveVehicleCfgInfoOperationCompleted, userState);
        }
        
        private void OnGetActiveVehicleCfgInfoOperationCompleted(object arg) {
            if ((this.GetActiveVehicleCfgInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetActiveVehicleCfgInfoCompleted(this, new GetActiveVehicleCfgInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetLastCommunicationByBoxId", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetLastCommunicationByBoxId(int userId, string SID, int boxId, ref System.DateTime dtLastCommunicated) {
            object[] results = this.Invoke("GetLastCommunicationByBoxId", new object[] {
                        userId,
                        SID,
                        boxId,
                        dtLastCommunicated});
            dtLastCommunicated = ((System.DateTime)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetLastCommunicationByBoxIdAsync(int userId, string SID, int boxId, System.DateTime dtLastCommunicated) {
            this.GetLastCommunicationByBoxIdAsync(userId, SID, boxId, dtLastCommunicated, null);
        }
        
        /// <remarks/>
        public void GetLastCommunicationByBoxIdAsync(int userId, string SID, int boxId, System.DateTime dtLastCommunicated, object userState) {
            if ((this.GetLastCommunicationByBoxIdOperationCompleted == null)) {
                this.GetLastCommunicationByBoxIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLastCommunicationByBoxIdOperationCompleted);
            }
            this.InvokeAsync("GetLastCommunicationByBoxId", new object[] {
                        userId,
                        SID,
                        boxId,
                        dtLastCommunicated}, this.GetLastCommunicationByBoxIdOperationCompleted, userState);
        }
        
        private void OnGetLastCommunicationByBoxIdOperationCompleted(object arg) {
            if ((this.GetLastCommunicationByBoxIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLastCommunicationByBoxIdCompleted(this, new GetLastCommunicationByBoxIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetLastBoxCommunicationInfo", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetLastBoxCommunicationInfo(int userId, string SID, int boxId, ref string xml) {
            object[] results = this.Invoke("GetLastBoxCommunicationInfo", new object[] {
                        userId,
                        SID,
                        boxId,
                        xml});
            xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetLastBoxCommunicationInfoAsync(int userId, string SID, int boxId, string xml) {
            this.GetLastBoxCommunicationInfoAsync(userId, SID, boxId, xml, null);
        }
        
        /// <remarks/>
        public void GetLastBoxCommunicationInfoAsync(int userId, string SID, int boxId, string xml, object userState) {
            if ((this.GetLastBoxCommunicationInfoOperationCompleted == null)) {
                this.GetLastBoxCommunicationInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLastBoxCommunicationInfoOperationCompleted);
            }
            this.InvokeAsync("GetLastBoxCommunicationInfo", new object[] {
                        userId,
                        SID,
                        boxId,
                        xml}, this.GetLastBoxCommunicationInfoOperationCompleted, userState);
        }
        
        private void OnGetLastBoxCommunicationInfoOperationCompleted(object arg) {
            if ((this.GetLastBoxCommunicationInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLastBoxCommunicationInfoCompleted(this, new GetLastBoxCommunicationInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetVehicleLastKnownPositionInfoByBoxId", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetVehicleLastKnownPositionInfoByBoxId(int userId, string SID, int boxId, string language, ref string xml) {
            object[] results = this.Invoke("GetVehicleLastKnownPositionInfoByBoxId", new object[] {
                        userId,
                        SID,
                        boxId,
                        language,
                        xml});
            xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetVehicleLastKnownPositionInfoByBoxIdAsync(int userId, string SID, int boxId, string language, string xml) {
            this.GetVehicleLastKnownPositionInfoByBoxIdAsync(userId, SID, boxId, language, xml, null);
        }
        
        /// <remarks/>
        public void GetVehicleLastKnownPositionInfoByBoxIdAsync(int userId, string SID, int boxId, string language, string xml, object userState) {
            if ((this.GetVehicleLastKnownPositionInfoByBoxIdOperationCompleted == null)) {
                this.GetVehicleLastKnownPositionInfoByBoxIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetVehicleLastKnownPositionInfoByBoxIdOperationCompleted);
            }
            this.InvokeAsync("GetVehicleLastKnownPositionInfoByBoxId", new object[] {
                        userId,
                        SID,
                        boxId,
                        language,
                        xml}, this.GetVehicleLastKnownPositionInfoByBoxIdOperationCompleted, userState);
        }
        
        private void OnGetVehicleLastKnownPositionInfoByBoxIdOperationCompleted(object arg) {
            if ((this.GetVehicleLastKnownPositionInfoByBoxIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetVehicleLastKnownPositionInfoByBoxIdCompleted(this, new GetVehicleLastKnownPositionInfoByBoxIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/UpdateBoxFeatures", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateBoxFeatures(int userId, string SID, int boxId, long mask) {
            object[] results = this.Invoke("UpdateBoxFeatures", new object[] {
                        userId,
                        SID,
                        boxId,
                        mask});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateBoxFeaturesAsync(int userId, string SID, int boxId, long mask) {
            this.UpdateBoxFeaturesAsync(userId, SID, boxId, mask, null);
        }
        
        /// <remarks/>
        public void UpdateBoxFeaturesAsync(int userId, string SID, int boxId, long mask, object userState) {
            if ((this.UpdateBoxFeaturesOperationCompleted == null)) {
                this.UpdateBoxFeaturesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateBoxFeaturesOperationCompleted);
            }
            this.InvokeAsync("UpdateBoxFeatures", new object[] {
                        userId,
                        SID,
                        boxId,
                        mask}, this.UpdateBoxFeaturesOperationCompleted, userState);
        }
        
        private void OnUpdateBoxFeaturesOperationCompleted(object arg) {
            if ((this.UpdateBoxFeaturesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateBoxFeaturesCompleted(this, new UpdateBoxFeaturesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetBoxConfigFeatures", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetBoxConfigFeatures(int userId, string SID, int boxId, ref string xml) {
            object[] results = this.Invoke("GetBoxConfigFeatures", new object[] {
                        userId,
                        SID,
                        boxId,
                        xml});
            xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetBoxConfigFeaturesAsync(int userId, string SID, int boxId, string xml) {
            this.GetBoxConfigFeaturesAsync(userId, SID, boxId, xml, null);
        }
        
        /// <remarks/>
        public void GetBoxConfigFeaturesAsync(int userId, string SID, int boxId, string xml, object userState) {
            if ((this.GetBoxConfigFeaturesOperationCompleted == null)) {
                this.GetBoxConfigFeaturesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBoxConfigFeaturesOperationCompleted);
            }
            this.InvokeAsync("GetBoxConfigFeatures", new object[] {
                        userId,
                        SID,
                        boxId,
                        xml}, this.GetBoxConfigFeaturesOperationCompleted, userState);
        }
        
        private void OnGetBoxConfigFeaturesOperationCompleted(object arg) {
            if ((this.GetBoxConfigFeaturesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBoxConfigFeaturesCompleted(this, new GetBoxConfigFeaturesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetCommInfoByBoxAndFwChnl", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetCommInfoByBoxAndFwChnl(int userId, string SID, int boxId, short fwChnlId, ref string xml) {
            object[] results = this.Invoke("GetCommInfoByBoxAndFwChnl", new object[] {
                        userId,
                        SID,
                        boxId,
                        fwChnlId,
                        xml});
            xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetCommInfoByBoxAndFwChnlAsync(int userId, string SID, int boxId, short fwChnlId, string xml) {
            this.GetCommInfoByBoxAndFwChnlAsync(userId, SID, boxId, fwChnlId, xml, null);
        }
        
        /// <remarks/>
        public void GetCommInfoByBoxAndFwChnlAsync(int userId, string SID, int boxId, short fwChnlId, string xml, object userState) {
            if ((this.GetCommInfoByBoxAndFwChnlOperationCompleted == null)) {
                this.GetCommInfoByBoxAndFwChnlOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCommInfoByBoxAndFwChnlOperationCompleted);
            }
            this.InvokeAsync("GetCommInfoByBoxAndFwChnl", new object[] {
                        userId,
                        SID,
                        boxId,
                        fwChnlId,
                        xml}, this.GetCommInfoByBoxAndFwChnlOperationCompleted, userState);
        }
        
        private void OnGetCommInfoByBoxAndFwChnlOperationCompleted(object arg) {
            if ((this.GetCommInfoByBoxAndFwChnlCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCommInfoByBoxAndFwChnlCompleted(this, new GetCommInfoByBoxAndFwChnlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetDefaultCommInfoByFwChnl", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetDefaultCommInfoByFwChnl(int userId, string SID, short fwChnlId, ref string xml) {
            object[] results = this.Invoke("GetDefaultCommInfoByFwChnl", new object[] {
                        userId,
                        SID,
                        fwChnlId,
                        xml});
            xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetDefaultCommInfoByFwChnlAsync(int userId, string SID, short fwChnlId, string xml) {
            this.GetDefaultCommInfoByFwChnlAsync(userId, SID, fwChnlId, xml, null);
        }
        
        /// <remarks/>
        public void GetDefaultCommInfoByFwChnlAsync(int userId, string SID, short fwChnlId, string xml, object userState) {
            if ((this.GetDefaultCommInfoByFwChnlOperationCompleted == null)) {
                this.GetDefaultCommInfoByFwChnlOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDefaultCommInfoByFwChnlOperationCompleted);
            }
            this.InvokeAsync("GetDefaultCommInfoByFwChnl", new object[] {
                        userId,
                        SID,
                        fwChnlId,
                        xml}, this.GetDefaultCommInfoByFwChnlOperationCompleted, userState);
        }
        
        private void OnGetDefaultCommInfoByFwChnlOperationCompleted(object arg) {
            if ((this.GetDefaultCommInfoByFwChnlCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDefaultCommInfoByFwChnlCompleted(this, new GetDefaultCommInfoByFwChnlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetLastControllerStatusFromHistoryByLicensePlate", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetLastControllerStatusFromHistoryByLicensePlate(int userId, string SID, string licensePlate, ref string xml) {
            object[] results = this.Invoke("GetLastControllerStatusFromHistoryByLicensePlate", new object[] {
                        userId,
                        SID,
                        licensePlate,
                        xml});
            xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetLastControllerStatusFromHistoryByLicensePlateAsync(int userId, string SID, string licensePlate, string xml) {
            this.GetLastControllerStatusFromHistoryByLicensePlateAsync(userId, SID, licensePlate, xml, null);
        }
        
        /// <remarks/>
        public void GetLastControllerStatusFromHistoryByLicensePlateAsync(int userId, string SID, string licensePlate, string xml, object userState) {
            if ((this.GetLastControllerStatusFromHistoryByLicensePlateOperationCompleted == null)) {
                this.GetLastControllerStatusFromHistoryByLicensePlateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLastControllerStatusFromHistoryByLicensePlateOperationCompleted);
            }
            this.InvokeAsync("GetLastControllerStatusFromHistoryByLicensePlate", new object[] {
                        userId,
                        SID,
                        licensePlate,
                        xml}, this.GetLastControllerStatusFromHistoryByLicensePlateOperationCompleted, userState);
        }
        
        private void OnGetLastControllerStatusFromHistoryByLicensePlateOperationCompleted(object arg) {
            if ((this.GetLastControllerStatusFromHistoryByLicensePlateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLastControllerStatusFromHistoryByLicensePlateCompleted(this, new GetLastControllerStatusFromHistoryByLicensePlateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetLastControllerStatusFromHistoryByBoxId", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetLastControllerStatusFromHistoryByBoxId(int userId, string SID, int boxId, ref string xml) {
            object[] results = this.Invoke("GetLastControllerStatusFromHistoryByBoxId", new object[] {
                        userId,
                        SID,
                        boxId,
                        xml});
            xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetLastControllerStatusFromHistoryByBoxIdAsync(int userId, string SID, int boxId, string xml) {
            this.GetLastControllerStatusFromHistoryByBoxIdAsync(userId, SID, boxId, xml, null);
        }
        
        /// <remarks/>
        public void GetLastControllerStatusFromHistoryByBoxIdAsync(int userId, string SID, int boxId, string xml, object userState) {
            if ((this.GetLastControllerStatusFromHistoryByBoxIdOperationCompleted == null)) {
                this.GetLastControllerStatusFromHistoryByBoxIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLastControllerStatusFromHistoryByBoxIdOperationCompleted);
            }
            this.InvokeAsync("GetLastControllerStatusFromHistoryByBoxId", new object[] {
                        userId,
                        SID,
                        boxId,
                        xml}, this.GetLastControllerStatusFromHistoryByBoxIdOperationCompleted, userState);
        }
        
        private void OnGetLastControllerStatusFromHistoryByBoxIdOperationCompleted(object arg) {
            if ((this.GetLastControllerStatusFromHistoryByBoxIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLastControllerStatusFromHistoryByBoxIdCompleted(this, new GetLastControllerStatusFromHistoryByBoxIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetLastTARModeFromHistoryByLicensePlate", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetLastTARModeFromHistoryByLicensePlate(int userId, string SID, string licensePlate, ref string xml) {
            object[] results = this.Invoke("GetLastTARModeFromHistoryByLicensePlate", new object[] {
                        userId,
                        SID,
                        licensePlate,
                        xml});
            xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetLastTARModeFromHistoryByLicensePlateAsync(int userId, string SID, string licensePlate, string xml) {
            this.GetLastTARModeFromHistoryByLicensePlateAsync(userId, SID, licensePlate, xml, null);
        }
        
        /// <remarks/>
        public void GetLastTARModeFromHistoryByLicensePlateAsync(int userId, string SID, string licensePlate, string xml, object userState) {
            if ((this.GetLastTARModeFromHistoryByLicensePlateOperationCompleted == null)) {
                this.GetLastTARModeFromHistoryByLicensePlateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLastTARModeFromHistoryByLicensePlateOperationCompleted);
            }
            this.InvokeAsync("GetLastTARModeFromHistoryByLicensePlate", new object[] {
                        userId,
                        SID,
                        licensePlate,
                        xml}, this.GetLastTARModeFromHistoryByLicensePlateOperationCompleted, userState);
        }
        
        private void OnGetLastTARModeFromHistoryByLicensePlateOperationCompleted(object arg) {
            if ((this.GetLastTARModeFromHistoryByLicensePlateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLastTARModeFromHistoryByLicensePlateCompleted(this, new GetLastTARModeFromHistoryByLicensePlateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetLastTARModeFromHistoryByBoxId", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetLastTARModeFromHistoryByBoxId(int userId, string SID, int boxId, ref string xml) {
            object[] results = this.Invoke("GetLastTARModeFromHistoryByBoxId", new object[] {
                        userId,
                        SID,
                        boxId,
                        xml});
            xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetLastTARModeFromHistoryByBoxIdAsync(int userId, string SID, int boxId, string xml) {
            this.GetLastTARModeFromHistoryByBoxIdAsync(userId, SID, boxId, xml, null);
        }
        
        /// <remarks/>
        public void GetLastTARModeFromHistoryByBoxIdAsync(int userId, string SID, int boxId, string xml, object userState) {
            if ((this.GetLastTARModeFromHistoryByBoxIdOperationCompleted == null)) {
                this.GetLastTARModeFromHistoryByBoxIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLastTARModeFromHistoryByBoxIdOperationCompleted);
            }
            this.InvokeAsync("GetLastTARModeFromHistoryByBoxId", new object[] {
                        userId,
                        SID,
                        boxId,
                        xml}, this.GetLastTARModeFromHistoryByBoxIdOperationCompleted, userState);
        }
        
        private void OnGetLastTARModeFromHistoryByBoxIdOperationCompleted(object arg) {
            if ((this.GetLastTARModeFromHistoryByBoxIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLastTARModeFromHistoryByBoxIdCompleted(this, new GetLastTARModeFromHistoryByBoxIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetLastKeyFobStatusFromHistoryByLicensePlate", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetLastKeyFobStatusFromHistoryByLicensePlate(int userId, string SID, string licensePlate, ref string xml) {
            object[] results = this.Invoke("GetLastKeyFobStatusFromHistoryByLicensePlate", new object[] {
                        userId,
                        SID,
                        licensePlate,
                        xml});
            xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetLastKeyFobStatusFromHistoryByLicensePlateAsync(int userId, string SID, string licensePlate, string xml) {
            this.GetLastKeyFobStatusFromHistoryByLicensePlateAsync(userId, SID, licensePlate, xml, null);
        }
        
        /// <remarks/>
        public void GetLastKeyFobStatusFromHistoryByLicensePlateAsync(int userId, string SID, string licensePlate, string xml, object userState) {
            if ((this.GetLastKeyFobStatusFromHistoryByLicensePlateOperationCompleted == null)) {
                this.GetLastKeyFobStatusFromHistoryByLicensePlateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLastKeyFobStatusFromHistoryByLicensePlateOperationCompleted);
            }
            this.InvokeAsync("GetLastKeyFobStatusFromHistoryByLicensePlate", new object[] {
                        userId,
                        SID,
                        licensePlate,
                        xml}, this.GetLastKeyFobStatusFromHistoryByLicensePlateOperationCompleted, userState);
        }
        
        private void OnGetLastKeyFobStatusFromHistoryByLicensePlateOperationCompleted(object arg) {
            if ((this.GetLastKeyFobStatusFromHistoryByLicensePlateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLastKeyFobStatusFromHistoryByLicensePlateCompleted(this, new GetLastKeyFobStatusFromHistoryByLicensePlateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetLastKeyFobStatusFromHistoryByBoxId", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetLastKeyFobStatusFromHistoryByBoxId(int userId, string SID, int boxId, ref string xml) {
            object[] results = this.Invoke("GetLastKeyFobStatusFromHistoryByBoxId", new object[] {
                        userId,
                        SID,
                        boxId,
                        xml});
            xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetLastKeyFobStatusFromHistoryByBoxIdAsync(int userId, string SID, int boxId, string xml) {
            this.GetLastKeyFobStatusFromHistoryByBoxIdAsync(userId, SID, boxId, xml, null);
        }
        
        /// <remarks/>
        public void GetLastKeyFobStatusFromHistoryByBoxIdAsync(int userId, string SID, int boxId, string xml, object userState) {
            if ((this.GetLastKeyFobStatusFromHistoryByBoxIdOperationCompleted == null)) {
                this.GetLastKeyFobStatusFromHistoryByBoxIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLastKeyFobStatusFromHistoryByBoxIdOperationCompleted);
            }
            this.InvokeAsync("GetLastKeyFobStatusFromHistoryByBoxId", new object[] {
                        userId,
                        SID,
                        boxId,
                        xml}, this.GetLastKeyFobStatusFromHistoryByBoxIdOperationCompleted, userState);
        }
        
        private void OnGetLastKeyFobStatusFromHistoryByBoxIdOperationCompleted(object arg) {
            if ((this.GetLastKeyFobStatusFromHistoryByBoxIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLastKeyFobStatusFromHistoryByBoxIdCompleted(this, new GetLastKeyFobStatusFromHistoryByBoxIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetLastVCROffDelayFromHistoryByLicensePlateCompletedEventHandler(object sender, GetLastVCROffDelayFromHistoryByLicensePlateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLastVCROffDelayFromHistoryByLicensePlateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLastVCROffDelayFromHistoryByLicensePlateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetLastVCROffDelayFromHistoryByBoxIdCompletedEventHandler(object sender, GetLastVCROffDelayFromHistoryByBoxIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLastVCROffDelayFromHistoryByBoxIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLastVCROffDelayFromHistoryByBoxIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetLastBoxSetupFromHistoryByLicensePlateCompletedEventHandler(object sender, GetLastBoxSetupFromHistoryByLicensePlateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLastBoxSetupFromHistoryByLicensePlateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLastBoxSetupFromHistoryByLicensePlateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetLastBoxSetupFromHistoryByBoxIdCompletedEventHandler(object sender, GetLastBoxSetupFromHistoryByBoxIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLastBoxSetupFromHistoryByBoxIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLastBoxSetupFromHistoryByBoxIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetLastBoxSetupFromHistoryByLicensePlateExtendedCompletedEventHandler(object sender, GetLastBoxSetupFromHistoryByLicensePlateExtendedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLastBoxSetupFromHistoryByLicensePlateExtendedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLastBoxSetupFromHistoryByLicensePlateExtendedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetLastBoxSetupFromHistoryByBoxIdExtendedCompletedEventHandler(object sender, GetLastBoxSetupFromHistoryByBoxIdExtendedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLastBoxSetupFromHistoryByBoxIdExtendedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLastBoxSetupFromHistoryByBoxIdExtendedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetLastBoxStatusFromHistoryByLicensePlateCompletedEventHandler(object sender, GetLastBoxStatusFromHistoryByLicensePlateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLastBoxStatusFromHistoryByLicensePlateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLastBoxStatusFromHistoryByLicensePlateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetLastBoxStatusFromHistoryByBoxIdCompletedEventHandler(object sender, GetLastBoxStatusFromHistoryByBoxIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLastBoxStatusFromHistoryByBoxIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLastBoxStatusFromHistoryByBoxIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetLastBoxStatusFromHistoryByLicensePlateExtendedCompletedEventHandler(object sender, GetLastBoxStatusFromHistoryByLicensePlateExtendedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLastBoxStatusFromHistoryByLicensePlateExtendedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLastBoxStatusFromHistoryByLicensePlateExtendedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetLastBoxStatusFromHistoryByBoxIdExtendedCompletedEventHandler(object sender, GetLastBoxStatusFromHistoryByBoxIdExtendedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLastBoxStatusFromHistoryByBoxIdExtendedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLastBoxStatusFromHistoryByBoxIdExtendedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetLastGeoZoneIDsFromHistoryByLicensePlateCompletedEventHandler(object sender, GetLastGeoZoneIDsFromHistoryByLicensePlateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLastGeoZoneIDsFromHistoryByLicensePlateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLastGeoZoneIDsFromHistoryByLicensePlateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetLastGeoZoneIDsFromHistoryByBoxIdCompletedEventHandler(object sender, GetLastGeoZoneIDsFromHistoryByBoxIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLastGeoZoneIDsFromHistoryByBoxIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLastGeoZoneIDsFromHistoryByBoxIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetLastUploadFirmwareStatusFromHistoryCompletedEventHandler(object sender, GetLastUploadFirmwareStatusFromHistoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLastUploadFirmwareStatusFromHistoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLastUploadFirmwareStatusFromHistoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetLastUploadFirmwareMessageFromHistoryCompletedEventHandler(object sender, GetLastUploadFirmwareMessageFromHistoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLastUploadFirmwareMessageFromHistoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLastUploadFirmwareMessageFromHistoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void UpdateBoxStreetAddressInHistoryCompletedEventHandler(object sender, UpdateBoxStreetAddressInHistoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateBoxStreetAddressInHistoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateBoxStreetAddressInHistoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetLastBoxMessageFromHistoryByLicensePlateCompletedEventHandler(object sender, GetLastBoxMessageFromHistoryByLicensePlateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLastBoxMessageFromHistoryByLicensePlateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLastBoxMessageFromHistoryByLicensePlateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetLastBoxMessageFromHistoryByBoxIdCompletedEventHandler(object sender, GetLastBoxMessageFromHistoryByBoxIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLastBoxMessageFromHistoryByBoxIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLastBoxMessageFromHistoryByBoxIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetVehicleMaintenanceInfoXMLCompletedEventHandler(object sender, GetVehicleMaintenanceInfoXMLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetVehicleMaintenanceInfoXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetVehicleMaintenanceInfoXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void AddVehicleMaintenanceInfoCompletedEventHandler(object sender, AddVehicleMaintenanceInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddVehicleMaintenanceInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddVehicleMaintenanceInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void UpdateVehicleMaintenanceInfoCompletedEventHandler(object sender, UpdateVehicleMaintenanceInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateVehicleMaintenanceInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateVehicleMaintenanceInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void UpdateVehicleEngineMaintenanceInfoCompletedEventHandler(object sender, UpdateVehicleEngineMaintenanceInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateVehicleEngineMaintenanceInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateVehicleEngineMaintenanceInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void UpdateVehicleMaintenanceShortInfoCompletedEventHandler(object sender, UpdateVehicleMaintenanceShortInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateVehicleMaintenanceShortInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateVehicleMaintenanceShortInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void UpdateVehicleEngineMaintenanceShortInfoCompletedEventHandler(object sender, UpdateVehicleEngineMaintenanceShortInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateVehicleEngineMaintenanceShortInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateVehicleEngineMaintenanceShortInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void AddVehicleMaintenanceHstCompletedEventHandler(object sender, AddVehicleMaintenanceHstCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddVehicleMaintenanceHstCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddVehicleMaintenanceHstCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void AddVehicleEngineMaintenanceHstCompletedEventHandler(object sender, AddVehicleEngineMaintenanceHstCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddVehicleEngineMaintenanceHstCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddVehicleEngineMaintenanceHstCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void UpdateVehicleMaintenanceHstCompletedEventHandler(object sender, UpdateVehicleMaintenanceHstCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateVehicleMaintenanceHstCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateVehicleMaintenanceHstCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetVehicleMaintenanceHistoryXMLCompletedEventHandler(object sender, GetVehicleMaintenanceHistoryXMLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetVehicleMaintenanceHistoryXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetVehicleMaintenanceHistoryXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void VehicleMaintenancePlan_AddCompletedEventHandler(object sender, VehicleMaintenancePlan_AddCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VehicleMaintenancePlan_AddCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VehicleMaintenancePlan_AddCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void VehicleMaintenancePlan_UpdateCompletedEventHandler(object sender, VehicleMaintenancePlan_UpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VehicleMaintenancePlan_UpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VehicleMaintenancePlan_UpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void VehicleMaintenancePlan_DeleteAllCompletedEventHandler(object sender, VehicleMaintenancePlan_DeleteAllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VehicleMaintenancePlan_DeleteAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VehicleMaintenancePlan_DeleteAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void VehicleMaintenancePlan_DeleteCompletedEventHandler(object sender, VehicleMaintenancePlan_DeleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VehicleMaintenancePlan_DeleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VehicleMaintenancePlan_DeleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void VehicleMaintenancePlan_CloseCompletedEventHandler(object sender, VehicleMaintenancePlan_CloseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VehicleMaintenancePlan_CloseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VehicleMaintenancePlan_CloseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void VehicleMaintenancePlanExtended_CloseCompletedEventHandler(object sender, VehicleMaintenancePlanExtended_CloseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VehicleMaintenancePlanExtended_CloseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VehicleMaintenancePlanExtended_CloseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void VehicleMaintenancePlan_GetAllCompletedEventHandler(object sender, VehicleMaintenancePlan_GetAllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VehicleMaintenancePlan_GetAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VehicleMaintenancePlan_GetAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xmlString {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void VehicleMaintenancePlan_GetAllByLangCompletedEventHandler(object sender, VehicleMaintenancePlan_GetAllByLangCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VehicleMaintenancePlan_GetAllByLangCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VehicleMaintenancePlan_GetAllByLangCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xmlString {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void VehicleMaintenancePlan_GetByTypeCompletedEventHandler(object sender, VehicleMaintenancePlan_GetByTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VehicleMaintenancePlan_GetByTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VehicleMaintenancePlan_GetByTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xmlString {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void VehicleMaintenancePlan_GetByTypeLangCompletedEventHandler(object sender, VehicleMaintenancePlan_GetByTypeLangCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VehicleMaintenancePlan_GetByTypeLangCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VehicleMaintenancePlan_GetByTypeLangCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xmlString {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void VehicleMaintenancePlan_GetCompletedEventHandler(object sender, VehicleMaintenancePlan_GetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VehicleMaintenancePlan_GetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VehicleMaintenancePlan_GetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xmlString {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void VehicleMaintenancePlanHistory_GetAllCompletedEventHandler(object sender, VehicleMaintenancePlanHistory_GetAllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VehicleMaintenancePlanHistory_GetAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VehicleMaintenancePlanHistory_GetAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xmlString {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void VehicleOperationTypes_GetCompletedEventHandler(object sender, VehicleOperationTypes_GetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VehicleOperationTypes_GetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VehicleOperationTypes_GetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xmlString {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void VehicleMaintenance_UpdateEngineHoursCompletedEventHandler(object sender, VehicleMaintenance_UpdateEngineHoursCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VehicleMaintenance_UpdateEngineHoursCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VehicleMaintenance_UpdateEngineHoursCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void VehicleMaintenance_GetInfoCompletedEventHandler(object sender, VehicleMaintenance_GetInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VehicleMaintenance_GetInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VehicleMaintenance_GetInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetMDTInfoByTypeIdCompletedEventHandler(object sender, GetMDTInfoByTypeIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMDTInfoByTypeIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMDTInfoByTypeIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetDTCCodesDescriptionCompletedEventHandler(object sender, GetDTCCodesDescriptionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDTCCodesDescriptionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDTCCodesDescriptionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetBoxId4BBCompletedEventHandler(object sender, GetBoxId4BBCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBoxId4BBCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBoxId4BBCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int boxId {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetVehicleExtraServiceHistoryByVehicleIdCompletedEventHandler(object sender, GetVehicleExtraServiceHistoryByVehicleIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetVehicleExtraServiceHistoryByVehicleIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetVehicleExtraServiceHistoryByVehicleIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void VehicleExtraServiceHistory_Add_UpdateCompletedEventHandler(object sender, VehicleExtraServiceHistory_Add_UpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VehicleExtraServiceHistory_Add_UpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VehicleExtraServiceHistory_Add_UpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetJ1708CodesVehicleFleetCompletedEventHandler(object sender, GetJ1708CodesVehicleFleetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetJ1708CodesVehicleFleetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetJ1708CodesVehicleFleetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetBoxExtraInfoCompletedEventHandler(object sender, GetBoxExtraInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBoxExtraInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBoxExtraInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetStateMileagePerVehicleCompletedEventHandler(object sender, GetStateMileagePerVehicleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStateMileagePerVehicleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStateMileagePerVehicleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void AddMdtOTACompletedEventHandler(object sender, AddMdtOTACompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddMdtOTACompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddMdtOTACompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetPostedSpeedServiceConfigurationCompletedEventHandler(object sender, GetPostedSpeedServiceConfigurationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPostedSpeedServiceConfigurationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPostedSpeedServiceConfigurationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetVehicleInfoXMLCompletedEventHandler(object sender, GetVehicleInfoXMLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetVehicleInfoXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetVehicleInfoXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetVehicleAdditionalInfoXMLCompletedEventHandler(object sender, GetVehicleAdditionalInfoXMLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetVehicleAdditionalInfoXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetVehicleAdditionalInfoXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void Get3rdPartyVehicleAdditionalInfoXMLCompletedEventHandler(object sender, Get3rdPartyVehicleAdditionalInfoXMLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get3rdPartyVehicleAdditionalInfoXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get3rdPartyVehicleAdditionalInfoXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetVehicleWorkingHoursXMLCompletedEventHandler(object sender, GetVehicleWorkingHoursXMLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetVehicleWorkingHoursXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetVehicleWorkingHoursXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetLastOdometerFromHistoryByBoxIdCompletedEventHandler(object sender, GetLastOdometerFromHistoryByBoxIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLastOdometerFromHistoryByBoxIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLastOdometerFromHistoryByBoxIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetLastEEPROMDataFromHistoryByBoxIdCompletedEventHandler(object sender, GetLastEEPROMDataFromHistoryByBoxIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLastEEPROMDataFromHistoryByBoxIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLastEEPROMDataFromHistoryByBoxIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetVehicleInfoXMLByVehicleIdCompletedEventHandler(object sender, GetVehicleInfoXMLByVehicleIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetVehicleInfoXMLByVehicleIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetVehicleInfoXMLByVehicleIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xmlResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetVehicleInfoXMLByBoxIdCompletedEventHandler(object sender, GetVehicleInfoXMLByBoxIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetVehicleInfoXMLByBoxIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetVehicleInfoXMLByBoxIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xmlResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void UpdateVehicleInfoCompletedEventHandler(object sender, UpdateVehicleInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateVehicleInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateVehicleInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void UpdateVehicleAdditionalInfoCompletedEventHandler(object sender, UpdateVehicleAdditionalInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateVehicleAdditionalInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateVehicleAdditionalInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void Update3rdPartyVehicleAdditionalInfoCompletedEventHandler(object sender, Update3rdPartyVehicleAdditionalInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Update3rdPartyVehicleAdditionalInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Update3rdPartyVehicleAdditionalInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void UpdateVehicleWorkingHoursCompletedEventHandler(object sender, UpdateVehicleWorkingHoursCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateVehicleWorkingHoursCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateVehicleWorkingHoursCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void UpdateVehicleInformationCompletedEventHandler(object sender, UpdateVehicleInformationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateVehicleInformationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateVehicleInformationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void AddVehicleCompletedEventHandler(object sender, AddVehicleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddVehicleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddVehicleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public long vehicleId {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void AddVehicleWorkingHoursCompletedEventHandler(object sender, AddVehicleWorkingHoursCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddVehicleWorkingHoursCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddVehicleWorkingHoursCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void DeleteVehicleWorkingHoursCompletedEventHandler(object sender, DeleteVehicleWorkingHoursCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteVehicleWorkingHoursCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteVehicleWorkingHoursCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void AssignVehicleCompletedEventHandler(object sender, AssignVehicleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AssignVehicleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AssignVehicleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void AssignVehicleToBoxCompletedEventHandler(object sender, AssignVehicleToBoxCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AssignVehicleToBoxCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AssignVehicleToBoxCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void DeleteVehicleCompletedEventHandler(object sender, DeleteVehicleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteVehicleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteVehicleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void SetVehicleAutoAdjustDayLightSavingCompletedEventHandler(object sender, SetVehicleAutoAdjustDayLightSavingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetVehicleAutoAdjustDayLightSavingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetVehicleAutoAdjustDayLightSavingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetVehicleSensorsXMLCompletedEventHandler(object sender, GetVehicleSensorsXMLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetVehicleSensorsXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetVehicleSensorsXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetVehicleSensorsXMLByLangCompletedEventHandler(object sender, GetVehicleSensorsXMLByLangCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetVehicleSensorsXMLByLangCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetVehicleSensorsXMLByLangCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetVehicleSensorsXMLByBoxIdCompletedEventHandler(object sender, GetVehicleSensorsXMLByBoxIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetVehicleSensorsXMLByBoxIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetVehicleSensorsXMLByBoxIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetBoxIDByLicensePlateCompletedEventHandler(object sender, GetBoxIDByLicensePlateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBoxIDByLicensePlateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBoxIDByLicensePlateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int boxId {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetBoxIDByVehicleDescriptionCompletedEventHandler(object sender, GetBoxIDByVehicleDescriptionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBoxIDByVehicleDescriptionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBoxIDByVehicleDescriptionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int boxId {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetBoxChannelsInfoCompletedEventHandler(object sender, GetBoxChannelsInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBoxChannelsInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBoxChannelsInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void SetVehicleSensorsByBoxIdCompletedEventHandler(object sender, SetVehicleSensorsByBoxIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetVehicleSensorsByBoxIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetVehicleSensorsByBoxIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void SetVehicleSensorsByLicencePlateCompletedEventHandler(object sender, SetVehicleSensorsByLicencePlateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetVehicleSensorsByLicencePlateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetVehicleSensorsByLicencePlateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void UpdateSensorByLicencePlateCompletedEventHandler(object sender, UpdateSensorByLicencePlateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateSensorByLicencePlateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateSensorByLicencePlateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void UpdateSensorNameByLicencePlateCompletedEventHandler(object sender, UpdateSensorNameByLicencePlateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateSensorNameByLicencePlateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateSensorNameByLicencePlateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void DeleteVehicleSensorsByBoxIdCompletedEventHandler(object sender, DeleteVehicleSensorsByBoxIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteVehicleSensorsByBoxIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteVehicleSensorsByBoxIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void DeleteVehicleSensorsByLicencePlateCompletedEventHandler(object sender, DeleteVehicleSensorsByLicencePlateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteVehicleSensorsByLicencePlateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteVehicleSensorsByLicencePlateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetSensorsInfoByBoxCompletedEventHandler(object sender, GetSensorsInfoByBoxCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSensorsInfoByBoxCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSensorsInfoByBoxCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetSensorProfileByBoxCompletedEventHandler(object sender, GetSensorProfileByBoxCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSensorProfileByBoxCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSensorProfileByBoxCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetVehicleCommandsXMLCompletedEventHandler(object sender, GetVehicleCommandsXMLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetVehicleCommandsXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetVehicleCommandsXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetVehicleCommandsXMLByLangCompletedEventHandler(object sender, GetVehicleCommandsXMLByLangCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetVehicleCommandsXMLByLangCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetVehicleCommandsXMLByLangCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetVehicleCommandsXMLByBoxIdCompletedEventHandler(object sender, GetVehicleCommandsXMLByBoxIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetVehicleCommandsXMLByBoxIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetVehicleCommandsXMLByBoxIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetCommandProtocolTypesInfoCompletedEventHandler(object sender, GetCommandProtocolTypesInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCommandProtocolTypesInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCommandProtocolTypesInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetOutputProtocolTypesInfoCompletedEventHandler(object sender, GetOutputProtocolTypesInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOutputProtocolTypesInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOutputProtocolTypesInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetVehicleMultiProtocolCommandsXMLCompletedEventHandler(object sender, GetVehicleMultiProtocolCommandsXMLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetVehicleMultiProtocolCommandsXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetVehicleMultiProtocolCommandsXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetMultiVehicleCommandsXMLByLangCompletedEventHandler(object sender, GetMultiVehicleCommandsXMLByLangCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMultiVehicleCommandsXMLByLangCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMultiVehicleCommandsXMLByLangCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetVehicleOutputsXMLCompletedEventHandler(object sender, GetVehicleOutputsXMLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetVehicleOutputsXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetVehicleOutputsXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetVehicleOutputsXMLByLangCompletedEventHandler(object sender, GetVehicleOutputsXMLByLangCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetVehicleOutputsXMLByLangCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetVehicleOutputsXMLByLangCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetVehicleOutputsXMLByBoxIdCompletedEventHandler(object sender, GetVehicleOutputsXMLByBoxIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetVehicleOutputsXMLByBoxIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetVehicleOutputsXMLByBoxIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void UpdateOutputByLicencePlateCompletedEventHandler(object sender, UpdateOutputByLicencePlateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateOutputByLicencePlateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateOutputByLicencePlateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetAllSupportedMessagesByBoxIdCompletedEventHandler(object sender, GetAllSupportedMessagesByBoxIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllSupportedMessagesByBoxIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllSupportedMessagesByBoxIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetAllSupportedMessagesByBoxIdByLangCompletedEventHandler(object sender, GetAllSupportedMessagesByBoxIdByLangCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllSupportedMessagesByBoxIdByLangCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllSupportedMessagesByBoxIdByLangCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void UpdateMsgSeverityCompletedEventHandler(object sender, UpdateMsgSeverityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateMsgSeverityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateMsgSeverityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetAllSupportedMessagesByFwChIdCompletedEventHandler(object sender, GetAllSupportedMessagesByFwChIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllSupportedMessagesByFwChIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllSupportedMessagesByFwChIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void DeleteActiveVehicleAssignmentCompletedEventHandler(object sender, DeleteActiveVehicleAssignmentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteActiveVehicleAssignmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteActiveVehicleAssignmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetAllUnassignedVehiclesByOrganizationCompletedEventHandler(object sender, GetAllUnassignedVehiclesByOrganizationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllUnassignedVehiclesByOrganizationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllUnassignedVehiclesByOrganizationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetAllAssignedToVehicleGeozonesInfoCompletedEventHandler(object sender, GetAllAssignedToVehicleGeozonesInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllAssignedToVehicleGeozonesInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllAssignedToVehicleGeozonesInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetAllAssignedGeozonesToVehicleCompletedEventHandler(object sender, GetAllAssignedGeozonesToVehicleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllAssignedGeozonesToVehicleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllAssignedGeozonesToVehicleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetAllUnassignedToVehicleGeozonesInfoCompletedEventHandler(object sender, GetAllUnassignedToVehicleGeozonesInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllUnassignedToVehicleGeozonesInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllUnassignedToVehicleGeozonesInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void SetGeozoneSeverityCompletedEventHandler(object sender, SetGeozoneSeverityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetGeozoneSeverityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetGeozoneSeverityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void DeleteGeozoneFromVehicleCompletedEventHandler(object sender, DeleteGeozoneFromVehicleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteGeozoneFromVehicleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteGeozoneFromVehicleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int rowsAffected {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void DeleteGeozoneFromVehicleByVehicleIdCompletedEventHandler(object sender, DeleteGeozoneFromVehicleByVehicleIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteGeozoneFromVehicleByVehicleIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteGeozoneFromVehicleByVehicleIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int rowsAffected {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void AddGeozoneToVehicleCompletedEventHandler(object sender, AddGeozoneToVehicleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddGeozoneToVehicleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddGeozoneToVehicleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetMaxGeozonesByVehicleIdCompletedEventHandler(object sender, GetMaxGeozonesByVehicleIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMaxGeozonesByVehicleIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMaxGeozonesByVehicleIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int maxGeozones {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetCommInfoByBoxIdCompletedEventHandler(object sender, GetCommInfoByBoxIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCommInfoByBoxIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCommInfoByBoxIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetBoxConfigInfoCompletedEventHandler(object sender, GetBoxConfigInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBoxConfigInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBoxConfigInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetActiveVehicleCfgInfoCompletedEventHandler(object sender, GetActiveVehicleCfgInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetActiveVehicleCfgInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetActiveVehicleCfgInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetLastCommunicationByBoxIdCompletedEventHandler(object sender, GetLastCommunicationByBoxIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLastCommunicationByBoxIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLastCommunicationByBoxIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.DateTime dtLastCommunicated {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetLastBoxCommunicationInfoCompletedEventHandler(object sender, GetLastBoxCommunicationInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLastBoxCommunicationInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLastBoxCommunicationInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetVehicleLastKnownPositionInfoByBoxIdCompletedEventHandler(object sender, GetVehicleLastKnownPositionInfoByBoxIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetVehicleLastKnownPositionInfoByBoxIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetVehicleLastKnownPositionInfoByBoxIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void UpdateBoxFeaturesCompletedEventHandler(object sender, UpdateBoxFeaturesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateBoxFeaturesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateBoxFeaturesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetBoxConfigFeaturesCompletedEventHandler(object sender, GetBoxConfigFeaturesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBoxConfigFeaturesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBoxConfigFeaturesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetCommInfoByBoxAndFwChnlCompletedEventHandler(object sender, GetCommInfoByBoxAndFwChnlCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCommInfoByBoxAndFwChnlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCommInfoByBoxAndFwChnlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetDefaultCommInfoByFwChnlCompletedEventHandler(object sender, GetDefaultCommInfoByFwChnlCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDefaultCommInfoByFwChnlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDefaultCommInfoByFwChnlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetLastControllerStatusFromHistoryByLicensePlateCompletedEventHandler(object sender, GetLastControllerStatusFromHistoryByLicensePlateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLastControllerStatusFromHistoryByLicensePlateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLastControllerStatusFromHistoryByLicensePlateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetLastControllerStatusFromHistoryByBoxIdCompletedEventHandler(object sender, GetLastControllerStatusFromHistoryByBoxIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLastControllerStatusFromHistoryByBoxIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLastControllerStatusFromHistoryByBoxIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetLastTARModeFromHistoryByLicensePlateCompletedEventHandler(object sender, GetLastTARModeFromHistoryByLicensePlateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLastTARModeFromHistoryByLicensePlateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLastTARModeFromHistoryByLicensePlateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetLastTARModeFromHistoryByBoxIdCompletedEventHandler(object sender, GetLastTARModeFromHistoryByBoxIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLastTARModeFromHistoryByBoxIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLastTARModeFromHistoryByBoxIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetLastKeyFobStatusFromHistoryByLicensePlateCompletedEventHandler(object sender, GetLastKeyFobStatusFromHistoryByLicensePlateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLastKeyFobStatusFromHistoryByLicensePlateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLastKeyFobStatusFromHistoryByLicensePlateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetLastKeyFobStatusFromHistoryByBoxIdCompletedEventHandler(object sender, GetLastKeyFobStatusFromHistoryByBoxIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLastKeyFobStatusFromHistoryByBoxIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLastKeyFobStatusFromHistoryByBoxIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
}

#pragma warning restore 1591