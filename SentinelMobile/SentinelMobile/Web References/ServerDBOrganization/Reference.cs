//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.18444.
// 
#pragma warning disable 1591

namespace SentinelMobile.ServerDBOrganization {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="DBOrganizationSoap", Namespace="http://www.sentinelfm.com")]
    public partial class DBOrganization : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback AddFuelTransactionByAddressOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddFuelCardTransactionOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateFuelTransactionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFuelTransactionOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddPushOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeletePushOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdatePushConfigurationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPushConfigurationByOrgOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUnassignedPushTypesByOrgOperationCompleted;
        
        private System.Threading.SendOrPostCallback Waypoint_Add_UpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWaypointTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOrganizationWaypointsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOrganizationServicesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOrganizationServicesForAddOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddOrganizationServiceOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteOrganizationServiceOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddUserGroupsDefaultOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUsersNameInfoByOrganizationByLangOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOrganizationColumnsPreferencesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOrganizationSensorPreferencesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOrganizationSensorOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOrganizationPreferenceByOrganizationIdAndUserIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddOrganizationSensorPrefereneOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteOrganizationSensorPrefereneOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllSensorByOrganizationIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllOrganizationsInfoXMLOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOrganizationInfoXMLByOrganizationIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOrganizationInfoXMLByOrganizationNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOrganizationInfoXMLByUserIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOrganizationCommPhonesInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFleetsInfoByOrganizationIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFleetsInfoByOrganizationIdAndTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOrganizationLandmarksWithBoundaryOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOrganizationLandmarksXMLByOrganizationIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOrganizationLandmark_PublicOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOrganizationGeozones_PublicOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOrganizationLandmarksXMLByOrganizationNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLandmarkNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLandmarkLocationOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddOrganizationLandmarkOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddOrganizationLandmarksOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateLandmarkOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteOrganizationLandmarkOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteOrganizationLandmarksOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddGeozoneOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteOrganizationAllGeozonesOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteGeozoneFromOrganizationOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateGeozoneOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsGeozoneAssignedOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsGeoZoneUpdatableByUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsLandmarkUpdatableByUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetGeozoneTypesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOrganizationGeozonesInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOrganizationGeozonesInfoByLangOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOrganizationGeozoneInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllAssignedVehiclesInfoToGeozoneOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllUnasignedVehiclesInfoToGeozoneOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetOrganizationGeozoneAutoAdjustDayLightSavingOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOrganizationGeozonesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOrganizationGeozonesWithStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOrganizationUserLoginsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetVehiclesLastKnownPositionInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOrganizationAllActiveVehiclesXmlOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOrganizationAllActiveVehiclesXmlByLangOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOrganizationAllActiveVehiclesCfgInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOrganizationAllUnassignedBoxIdsXmlOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUsersInfoByOrganizationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUsersInfoByOrganizationByLangOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDclCommInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOrganizationPreferencesOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateOrganizationPreferencesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOrganizationSettingsOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateOrganizationSettingsOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteOrganizationSettingsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllAssignedBoxesByOrganizationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllUnassignedBoxesByOrganizationOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddProductOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateProductByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateProductByNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteOrganizationProductOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteOrganizationAllProductsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOrganizationProductByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOrganizationProductByNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOrganizationAllProductsOperationCompleted;
        
        private System.Threading.SendOrPostCallback VehicleService_AddOperationCompleted;
        
        private System.Threading.SendOrPostCallback VehicleService_UpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback VehicleService_DeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback VehicleService_GetOperationCompleted;
        
        private System.Threading.SendOrPostCallback VehicleService_GetAllOperationCompleted;
        
        private System.Threading.SendOrPostCallback VehicleService_GetAllByLangOperationCompleted;
        
        private System.Threading.SendOrPostCallback VehicleService_GetByTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback Notification_AddOperationCompleted;
        
        private System.Threading.SendOrPostCallback Notification_UpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback Notification_DeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback Notification_GetOperationCompleted;
        
        private System.Threading.SendOrPostCallback Notification_GetAllOperationCompleted;
        
        private System.Threading.SendOrPostCallback Notification_GetAllByLangOperationCompleted;
        
        private System.Threading.SendOrPostCallback Notification_GetByTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetActivitySummaryPerOrganizationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOrganizationsMonitoredByOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLoginCredentialsWithinSameGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddFuelTransactionOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public DBOrganization() {
            this.Url = global::SentinelMobile.Properties.Settings.Default.SentinelMobile_ServerDBOrganization_DBOrganization;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event AddFuelTransactionByAddressCompletedEventHandler AddFuelTransactionByAddressCompleted;
        
        /// <remarks/>
        public event AddFuelCardTransactionCompletedEventHandler AddFuelCardTransactionCompleted;
        
        /// <remarks/>
        public event UpdateFuelTransactionCompletedEventHandler UpdateFuelTransactionCompleted;
        
        /// <remarks/>
        public event GetFuelTransactionCompletedEventHandler GetFuelTransactionCompleted;
        
        /// <remarks/>
        public event AddPushCompletedEventHandler AddPushCompleted;
        
        /// <remarks/>
        public event DeletePushCompletedEventHandler DeletePushCompleted;
        
        /// <remarks/>
        public event UpdatePushConfigurationCompletedEventHandler UpdatePushConfigurationCompleted;
        
        /// <remarks/>
        public event GetPushConfigurationByOrgCompletedEventHandler GetPushConfigurationByOrgCompleted;
        
        /// <remarks/>
        public event GetUnassignedPushTypesByOrgCompletedEventHandler GetUnassignedPushTypesByOrgCompleted;
        
        /// <remarks/>
        public event Waypoint_Add_UpdateCompletedEventHandler Waypoint_Add_UpdateCompleted;
        
        /// <remarks/>
        public event GetWaypointTypeCompletedEventHandler GetWaypointTypeCompleted;
        
        /// <remarks/>
        public event GetOrganizationWaypointsCompletedEventHandler GetOrganizationWaypointsCompleted;
        
        /// <remarks/>
        public event GetOrganizationServicesCompletedEventHandler GetOrganizationServicesCompleted;
        
        /// <remarks/>
        public event GetOrganizationServicesForAddCompletedEventHandler GetOrganizationServicesForAddCompleted;
        
        /// <remarks/>
        public event AddOrganizationServiceCompletedEventHandler AddOrganizationServiceCompleted;
        
        /// <remarks/>
        public event DeleteOrganizationServiceCompletedEventHandler DeleteOrganizationServiceCompleted;
        
        /// <remarks/>
        public event AddUserGroupsDefaultCompletedEventHandler AddUserGroupsDefaultCompleted;
        
        /// <remarks/>
        public event GetUsersNameInfoByOrganizationByLangCompletedEventHandler GetUsersNameInfoByOrganizationByLangCompleted;
        
        /// <remarks/>
        public event GetOrganizationColumnsPreferencesCompletedEventHandler GetOrganizationColumnsPreferencesCompleted;
        
        /// <remarks/>
        public event GetOrganizationSensorPreferencesCompletedEventHandler GetOrganizationSensorPreferencesCompleted;
        
        /// <remarks/>
        public event GetOrganizationSensorCompletedEventHandler GetOrganizationSensorCompleted;
        
        /// <remarks/>
        public event GetOrganizationPreferenceByOrganizationIdAndUserIdCompletedEventHandler GetOrganizationPreferenceByOrganizationIdAndUserIdCompleted;
        
        /// <remarks/>
        public event AddOrganizationSensorPrefereneCompletedEventHandler AddOrganizationSensorPrefereneCompleted;
        
        /// <remarks/>
        public event DeleteOrganizationSensorPrefereneCompletedEventHandler DeleteOrganizationSensorPrefereneCompleted;
        
        /// <remarks/>
        public event GetAllSensorByOrganizationIdCompletedEventHandler GetAllSensorByOrganizationIdCompleted;
        
        /// <remarks/>
        public event GetAllOrganizationsInfoXMLCompletedEventHandler GetAllOrganizationsInfoXMLCompleted;
        
        /// <remarks/>
        public event GetOrganizationInfoXMLByOrganizationIdCompletedEventHandler GetOrganizationInfoXMLByOrganizationIdCompleted;
        
        /// <remarks/>
        public event GetOrganizationInfoXMLByOrganizationNameCompletedEventHandler GetOrganizationInfoXMLByOrganizationNameCompleted;
        
        /// <remarks/>
        public event GetOrganizationInfoXMLByUserIdCompletedEventHandler GetOrganizationInfoXMLByUserIdCompleted;
        
        /// <remarks/>
        public event GetOrganizationCommPhonesInfoCompletedEventHandler GetOrganizationCommPhonesInfoCompleted;
        
        /// <remarks/>
        public event GetFleetsInfoByOrganizationIdCompletedEventHandler GetFleetsInfoByOrganizationIdCompleted;
        
        /// <remarks/>
        public event GetFleetsInfoByOrganizationIdAndTypeCompletedEventHandler GetFleetsInfoByOrganizationIdAndTypeCompleted;
        
        /// <remarks/>
        public event GetOrganizationLandmarksWithBoundaryCompletedEventHandler GetOrganizationLandmarksWithBoundaryCompleted;
        
        /// <remarks/>
        public event GetOrganizationLandmarksXMLByOrganizationIdCompletedEventHandler GetOrganizationLandmarksXMLByOrganizationIdCompleted;
        
        /// <remarks/>
        public event GetOrganizationLandmark_PublicCompletedEventHandler GetOrganizationLandmark_PublicCompleted;
        
        /// <remarks/>
        public event GetOrganizationGeozones_PublicCompletedEventHandler GetOrganizationGeozones_PublicCompleted;
        
        /// <remarks/>
        public event GetOrganizationLandmarksXMLByOrganizationNameCompletedEventHandler GetOrganizationLandmarksXMLByOrganizationNameCompleted;
        
        /// <remarks/>
        public event GetLandmarkNameCompletedEventHandler GetLandmarkNameCompleted;
        
        /// <remarks/>
        public event GetLandmarkLocationCompletedEventHandler GetLandmarkLocationCompleted;
        
        /// <remarks/>
        public event AddOrganizationLandmarkCompletedEventHandler AddOrganizationLandmarkCompleted;
        
        /// <remarks/>
        public event AddOrganizationLandmarksCompletedEventHandler AddOrganizationLandmarksCompleted;
        
        /// <remarks/>
        public event UpdateLandmarkCompletedEventHandler UpdateLandmarkCompleted;
        
        /// <remarks/>
        public event DeleteOrganizationLandmarkCompletedEventHandler DeleteOrganizationLandmarkCompleted;
        
        /// <remarks/>
        public event DeleteOrganizationLandmarksCompletedEventHandler DeleteOrganizationLandmarksCompleted;
        
        /// <remarks/>
        public event AddGeozoneCompletedEventHandler AddGeozoneCompleted;
        
        /// <remarks/>
        public event DeleteOrganizationAllGeozonesCompletedEventHandler DeleteOrganizationAllGeozonesCompleted;
        
        /// <remarks/>
        public event DeleteGeozoneFromOrganizationCompletedEventHandler DeleteGeozoneFromOrganizationCompleted;
        
        /// <remarks/>
        public event UpdateGeozoneCompletedEventHandler UpdateGeozoneCompleted;
        
        /// <remarks/>
        public event IsGeozoneAssignedCompletedEventHandler IsGeozoneAssignedCompleted;
        
        /// <remarks/>
        public event IsGeoZoneUpdatableByUserCompletedEventHandler IsGeoZoneUpdatableByUserCompleted;
        
        /// <remarks/>
        public event IsLandmarkUpdatableByUserCompletedEventHandler IsLandmarkUpdatableByUserCompleted;
        
        /// <remarks/>
        public event GetGeozoneTypesCompletedEventHandler GetGeozoneTypesCompleted;
        
        /// <remarks/>
        public event GetOrganizationGeozonesInfoCompletedEventHandler GetOrganizationGeozonesInfoCompleted;
        
        /// <remarks/>
        public event GetOrganizationGeozonesInfoByLangCompletedEventHandler GetOrganizationGeozonesInfoByLangCompleted;
        
        /// <remarks/>
        public event GetOrganizationGeozoneInfoCompletedEventHandler GetOrganizationGeozoneInfoCompleted;
        
        /// <remarks/>
        public event GetAllAssignedVehiclesInfoToGeozoneCompletedEventHandler GetAllAssignedVehiclesInfoToGeozoneCompleted;
        
        /// <remarks/>
        public event GetAllUnasignedVehiclesInfoToGeozoneCompletedEventHandler GetAllUnasignedVehiclesInfoToGeozoneCompleted;
        
        /// <remarks/>
        public event SetOrganizationGeozoneAutoAdjustDayLightSavingCompletedEventHandler SetOrganizationGeozoneAutoAdjustDayLightSavingCompleted;
        
        /// <remarks/>
        public event GetOrganizationGeozonesCompletedEventHandler GetOrganizationGeozonesCompleted;
        
        /// <remarks/>
        public event GetOrganizationGeozonesWithStatusCompletedEventHandler GetOrganizationGeozonesWithStatusCompleted;
        
        /// <remarks/>
        public event GetOrganizationUserLoginsCompletedEventHandler GetOrganizationUserLoginsCompleted;
        
        /// <remarks/>
        public event GetVehiclesLastKnownPositionInfoCompletedEventHandler GetVehiclesLastKnownPositionInfoCompleted;
        
        /// <remarks/>
        public event GetOrganizationAllActiveVehiclesXmlCompletedEventHandler GetOrganizationAllActiveVehiclesXmlCompleted;
        
        /// <remarks/>
        public event GetOrganizationAllActiveVehiclesXmlByLangCompletedEventHandler GetOrganizationAllActiveVehiclesXmlByLangCompleted;
        
        /// <remarks/>
        public event GetOrganizationAllActiveVehiclesCfgInfoCompletedEventHandler GetOrganizationAllActiveVehiclesCfgInfoCompleted;
        
        /// <remarks/>
        public event GetOrganizationAllUnassignedBoxIdsXmlCompletedEventHandler GetOrganizationAllUnassignedBoxIdsXmlCompleted;
        
        /// <remarks/>
        public event GetUsersInfoByOrganizationCompletedEventHandler GetUsersInfoByOrganizationCompleted;
        
        /// <remarks/>
        public event GetUsersInfoByOrganizationByLangCompletedEventHandler GetUsersInfoByOrganizationByLangCompleted;
        
        /// <remarks/>
        public event GetDclCommInfoCompletedEventHandler GetDclCommInfoCompleted;
        
        /// <remarks/>
        public event GetOrganizationPreferencesCompletedEventHandler GetOrganizationPreferencesCompleted;
        
        /// <remarks/>
        public event UpdateOrganizationPreferencesCompletedEventHandler UpdateOrganizationPreferencesCompleted;
        
        /// <remarks/>
        public event GetOrganizationSettingsCompletedEventHandler GetOrganizationSettingsCompleted;
        
        /// <remarks/>
        public event UpdateOrganizationSettingsCompletedEventHandler UpdateOrganizationSettingsCompleted;
        
        /// <remarks/>
        public event DeleteOrganizationSettingsCompletedEventHandler DeleteOrganizationSettingsCompleted;
        
        /// <remarks/>
        public event GetAllAssignedBoxesByOrganizationCompletedEventHandler GetAllAssignedBoxesByOrganizationCompleted;
        
        /// <remarks/>
        public event GetAllUnassignedBoxesByOrganizationCompletedEventHandler GetAllUnassignedBoxesByOrganizationCompleted;
        
        /// <remarks/>
        public event AddProductCompletedEventHandler AddProductCompleted;
        
        /// <remarks/>
        public event UpdateProductByIdCompletedEventHandler UpdateProductByIdCompleted;
        
        /// <remarks/>
        public event UpdateProductByNameCompletedEventHandler UpdateProductByNameCompleted;
        
        /// <remarks/>
        public event DeleteOrganizationProductCompletedEventHandler DeleteOrganizationProductCompleted;
        
        /// <remarks/>
        public event DeleteOrganizationAllProductsCompletedEventHandler DeleteOrganizationAllProductsCompleted;
        
        /// <remarks/>
        public event GetOrganizationProductByIdCompletedEventHandler GetOrganizationProductByIdCompleted;
        
        /// <remarks/>
        public event GetOrganizationProductByNameCompletedEventHandler GetOrganizationProductByNameCompleted;
        
        /// <remarks/>
        public event GetOrganizationAllProductsCompletedEventHandler GetOrganizationAllProductsCompleted;
        
        /// <remarks/>
        public event VehicleService_AddCompletedEventHandler VehicleService_AddCompleted;
        
        /// <remarks/>
        public event VehicleService_UpdateCompletedEventHandler VehicleService_UpdateCompleted;
        
        /// <remarks/>
        public event VehicleService_DeleteCompletedEventHandler VehicleService_DeleteCompleted;
        
        /// <remarks/>
        public event VehicleService_GetCompletedEventHandler VehicleService_GetCompleted;
        
        /// <remarks/>
        public event VehicleService_GetAllCompletedEventHandler VehicleService_GetAllCompleted;
        
        /// <remarks/>
        public event VehicleService_GetAllByLangCompletedEventHandler VehicleService_GetAllByLangCompleted;
        
        /// <remarks/>
        public event VehicleService_GetByTypeCompletedEventHandler VehicleService_GetByTypeCompleted;
        
        /// <remarks/>
        public event Notification_AddCompletedEventHandler Notification_AddCompleted;
        
        /// <remarks/>
        public event Notification_UpdateCompletedEventHandler Notification_UpdateCompleted;
        
        /// <remarks/>
        public event Notification_DeleteCompletedEventHandler Notification_DeleteCompleted;
        
        /// <remarks/>
        public event Notification_GetCompletedEventHandler Notification_GetCompleted;
        
        /// <remarks/>
        public event Notification_GetAllCompletedEventHandler Notification_GetAllCompleted;
        
        /// <remarks/>
        public event Notification_GetAllByLangCompletedEventHandler Notification_GetAllByLangCompleted;
        
        /// <remarks/>
        public event Notification_GetByTypeCompletedEventHandler Notification_GetByTypeCompleted;
        
        /// <remarks/>
        public event GetActivitySummaryPerOrganizationCompletedEventHandler GetActivitySummaryPerOrganizationCompleted;
        
        /// <remarks/>
        public event GetOrganizationsMonitoredByCompletedEventHandler GetOrganizationsMonitoredByCompleted;
        
        /// <remarks/>
        public event GetLoginCredentialsWithinSameGroupCompletedEventHandler GetLoginCredentialsWithinSameGroupCompleted;
        
        /// <remarks/>
        public event AddFuelTransactionCompletedEventHandler AddFuelTransactionCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/AddFuelTransactionByAddress", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AddFuelTransactionByAddress(int userId, string SID, string unitNum, System.DateTime dtWhen, string address, string xmlData, ref long transactionId) {
            object[] results = this.Invoke("AddFuelTransactionByAddress", new object[] {
                        userId,
                        SID,
                        unitNum,
                        dtWhen,
                        address,
                        xmlData,
                        transactionId});
            transactionId = ((long)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AddFuelTransactionByAddressAsync(int userId, string SID, string unitNum, System.DateTime dtWhen, string address, string xmlData, long transactionId) {
            this.AddFuelTransactionByAddressAsync(userId, SID, unitNum, dtWhen, address, xmlData, transactionId, null);
        }
        
        /// <remarks/>
        public void AddFuelTransactionByAddressAsync(int userId, string SID, string unitNum, System.DateTime dtWhen, string address, string xmlData, long transactionId, object userState) {
            if ((this.AddFuelTransactionByAddressOperationCompleted == null)) {
                this.AddFuelTransactionByAddressOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddFuelTransactionByAddressOperationCompleted);
            }
            this.InvokeAsync("AddFuelTransactionByAddress", new object[] {
                        userId,
                        SID,
                        unitNum,
                        dtWhen,
                        address,
                        xmlData,
                        transactionId}, this.AddFuelTransactionByAddressOperationCompleted, userState);
        }
        
        private void OnAddFuelTransactionByAddressOperationCompleted(object arg) {
            if ((this.AddFuelTransactionByAddressCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddFuelTransactionByAddressCompleted(this, new AddFuelTransactionByAddressCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/AddFuelCardTransaction", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AddFuelCardTransaction(int userId, string SID, string cardNum, System.DateTime dtWhen, double latitude, double longitude, string xmlData, ref long transactionId) {
            object[] results = this.Invoke("AddFuelCardTransaction", new object[] {
                        userId,
                        SID,
                        cardNum,
                        dtWhen,
                        latitude,
                        longitude,
                        xmlData,
                        transactionId});
            transactionId = ((long)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AddFuelCardTransactionAsync(int userId, string SID, string cardNum, System.DateTime dtWhen, double latitude, double longitude, string xmlData, long transactionId) {
            this.AddFuelCardTransactionAsync(userId, SID, cardNum, dtWhen, latitude, longitude, xmlData, transactionId, null);
        }
        
        /// <remarks/>
        public void AddFuelCardTransactionAsync(int userId, string SID, string cardNum, System.DateTime dtWhen, double latitude, double longitude, string xmlData, long transactionId, object userState) {
            if ((this.AddFuelCardTransactionOperationCompleted == null)) {
                this.AddFuelCardTransactionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddFuelCardTransactionOperationCompleted);
            }
            this.InvokeAsync("AddFuelCardTransaction", new object[] {
                        userId,
                        SID,
                        cardNum,
                        dtWhen,
                        latitude,
                        longitude,
                        xmlData,
                        transactionId}, this.AddFuelCardTransactionOperationCompleted, userState);
        }
        
        private void OnAddFuelCardTransactionOperationCompleted(object arg) {
            if ((this.AddFuelCardTransactionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddFuelCardTransactionCompleted(this, new AddFuelCardTransactionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/UpdateFuelTransaction", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateFuelTransaction(int userId, string SID, long transactionId, string data, ref bool status) {
            object[] results = this.Invoke("UpdateFuelTransaction", new object[] {
                        userId,
                        SID,
                        transactionId,
                        data,
                        status});
            status = ((bool)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateFuelTransactionAsync(int userId, string SID, long transactionId, string data, bool status) {
            this.UpdateFuelTransactionAsync(userId, SID, transactionId, data, status, null);
        }
        
        /// <remarks/>
        public void UpdateFuelTransactionAsync(int userId, string SID, long transactionId, string data, bool status, object userState) {
            if ((this.UpdateFuelTransactionOperationCompleted == null)) {
                this.UpdateFuelTransactionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateFuelTransactionOperationCompleted);
            }
            this.InvokeAsync("UpdateFuelTransaction", new object[] {
                        userId,
                        SID,
                        transactionId,
                        data,
                        status}, this.UpdateFuelTransactionOperationCompleted, userState);
        }
        
        private void OnUpdateFuelTransactionOperationCompleted(object arg) {
            if ((this.UpdateFuelTransactionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateFuelTransactionCompleted(this, new UpdateFuelTransactionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetFuelTransaction", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetFuelTransaction(int userId, string SID, int organizationId, System.DateTime from, System.DateTime to, ref string xml) {
            object[] results = this.Invoke("GetFuelTransaction", new object[] {
                        userId,
                        SID,
                        organizationId,
                        from,
                        to,
                        xml});
            xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetFuelTransactionAsync(int userId, string SID, int organizationId, System.DateTime from, System.DateTime to, string xml) {
            this.GetFuelTransactionAsync(userId, SID, organizationId, from, to, xml, null);
        }
        
        /// <remarks/>
        public void GetFuelTransactionAsync(int userId, string SID, int organizationId, System.DateTime from, System.DateTime to, string xml, object userState) {
            if ((this.GetFuelTransactionOperationCompleted == null)) {
                this.GetFuelTransactionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFuelTransactionOperationCompleted);
            }
            this.InvokeAsync("GetFuelTransaction", new object[] {
                        userId,
                        SID,
                        organizationId,
                        from,
                        to,
                        xml}, this.GetFuelTransactionOperationCompleted, userState);
        }
        
        private void OnGetFuelTransactionOperationCompleted(object arg) {
            if ((this.GetFuelTransactionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFuelTransactionCompleted(this, new GetFuelTransactionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/AddPush", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AddPush(int userId, string SID, int orgId, int type, string configuration) {
            object[] results = this.Invoke("AddPush", new object[] {
                        userId,
                        SID,
                        orgId,
                        type,
                        configuration});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AddPushAsync(int userId, string SID, int orgId, int type, string configuration) {
            this.AddPushAsync(userId, SID, orgId, type, configuration, null);
        }
        
        /// <remarks/>
        public void AddPushAsync(int userId, string SID, int orgId, int type, string configuration, object userState) {
            if ((this.AddPushOperationCompleted == null)) {
                this.AddPushOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddPushOperationCompleted);
            }
            this.InvokeAsync("AddPush", new object[] {
                        userId,
                        SID,
                        orgId,
                        type,
                        configuration}, this.AddPushOperationCompleted, userState);
        }
        
        private void OnAddPushOperationCompleted(object arg) {
            if ((this.AddPushCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddPushCompleted(this, new AddPushCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/DeletePush", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int DeletePush(int userId, string SID, int orgId, long pushConfigId) {
            object[] results = this.Invoke("DeletePush", new object[] {
                        userId,
                        SID,
                        orgId,
                        pushConfigId});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DeletePushAsync(int userId, string SID, int orgId, long pushConfigId) {
            this.DeletePushAsync(userId, SID, orgId, pushConfigId, null);
        }
        
        /// <remarks/>
        public void DeletePushAsync(int userId, string SID, int orgId, long pushConfigId, object userState) {
            if ((this.DeletePushOperationCompleted == null)) {
                this.DeletePushOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeletePushOperationCompleted);
            }
            this.InvokeAsync("DeletePush", new object[] {
                        userId,
                        SID,
                        orgId,
                        pushConfigId}, this.DeletePushOperationCompleted, userState);
        }
        
        private void OnDeletePushOperationCompleted(object arg) {
            if ((this.DeletePushCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeletePushCompleted(this, new DeletePushCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/UpdatePushConfiguration", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdatePushConfiguration(int userId, string SID, long pushConfigId, string configuration) {
            object[] results = this.Invoke("UpdatePushConfiguration", new object[] {
                        userId,
                        SID,
                        pushConfigId,
                        configuration});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdatePushConfigurationAsync(int userId, string SID, long pushConfigId, string configuration) {
            this.UpdatePushConfigurationAsync(userId, SID, pushConfigId, configuration, null);
        }
        
        /// <remarks/>
        public void UpdatePushConfigurationAsync(int userId, string SID, long pushConfigId, string configuration, object userState) {
            if ((this.UpdatePushConfigurationOperationCompleted == null)) {
                this.UpdatePushConfigurationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdatePushConfigurationOperationCompleted);
            }
            this.InvokeAsync("UpdatePushConfiguration", new object[] {
                        userId,
                        SID,
                        pushConfigId,
                        configuration}, this.UpdatePushConfigurationOperationCompleted, userState);
        }
        
        private void OnUpdatePushConfigurationOperationCompleted(object arg) {
            if ((this.UpdatePushConfigurationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdatePushConfigurationCompleted(this, new UpdatePushConfigurationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetPushConfigurationByOrg", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetPushConfigurationByOrg(int userId, string SID, int orgId, ref string xml) {
            object[] results = this.Invoke("GetPushConfigurationByOrg", new object[] {
                        userId,
                        SID,
                        orgId,
                        xml});
            xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetPushConfigurationByOrgAsync(int userId, string SID, int orgId, string xml) {
            this.GetPushConfigurationByOrgAsync(userId, SID, orgId, xml, null);
        }
        
        /// <remarks/>
        public void GetPushConfigurationByOrgAsync(int userId, string SID, int orgId, string xml, object userState) {
            if ((this.GetPushConfigurationByOrgOperationCompleted == null)) {
                this.GetPushConfigurationByOrgOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPushConfigurationByOrgOperationCompleted);
            }
            this.InvokeAsync("GetPushConfigurationByOrg", new object[] {
                        userId,
                        SID,
                        orgId,
                        xml}, this.GetPushConfigurationByOrgOperationCompleted, userState);
        }
        
        private void OnGetPushConfigurationByOrgOperationCompleted(object arg) {
            if ((this.GetPushConfigurationByOrgCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPushConfigurationByOrgCompleted(this, new GetPushConfigurationByOrgCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetUnassignedPushTypesByOrg", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetUnassignedPushTypesByOrg(int userId, string SID, int orgId, ref string xml) {
            object[] results = this.Invoke("GetUnassignedPushTypesByOrg", new object[] {
                        userId,
                        SID,
                        orgId,
                        xml});
            xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetUnassignedPushTypesByOrgAsync(int userId, string SID, int orgId, string xml) {
            this.GetUnassignedPushTypesByOrgAsync(userId, SID, orgId, xml, null);
        }
        
        /// <remarks/>
        public void GetUnassignedPushTypesByOrgAsync(int userId, string SID, int orgId, string xml, object userState) {
            if ((this.GetUnassignedPushTypesByOrgOperationCompleted == null)) {
                this.GetUnassignedPushTypesByOrgOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUnassignedPushTypesByOrgOperationCompleted);
            }
            this.InvokeAsync("GetUnassignedPushTypesByOrg", new object[] {
                        userId,
                        SID,
                        orgId,
                        xml}, this.GetUnassignedPushTypesByOrgOperationCompleted, userState);
        }
        
        private void OnGetUnassignedPushTypesByOrgOperationCompleted(object arg) {
            if ((this.GetUnassignedPushTypesByOrgCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUnassignedPushTypesByOrgCompleted(this, new GetUnassignedPushTypesByOrgCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/Waypoint_Add_Update", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int Waypoint_Add_Update(int userId, string SID, int orgId, int WaypointId, string WaypointName, int TypeId, float Latitude, float Longitude, int OrganizationId, short Persistent) {
            object[] results = this.Invoke("Waypoint_Add_Update", new object[] {
                        userId,
                        SID,
                        orgId,
                        WaypointId,
                        WaypointName,
                        TypeId,
                        Latitude,
                        Longitude,
                        OrganizationId,
                        Persistent});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void Waypoint_Add_UpdateAsync(int userId, string SID, int orgId, int WaypointId, string WaypointName, int TypeId, float Latitude, float Longitude, int OrganizationId, short Persistent) {
            this.Waypoint_Add_UpdateAsync(userId, SID, orgId, WaypointId, WaypointName, TypeId, Latitude, Longitude, OrganizationId, Persistent, null);
        }
        
        /// <remarks/>
        public void Waypoint_Add_UpdateAsync(int userId, string SID, int orgId, int WaypointId, string WaypointName, int TypeId, float Latitude, float Longitude, int OrganizationId, short Persistent, object userState) {
            if ((this.Waypoint_Add_UpdateOperationCompleted == null)) {
                this.Waypoint_Add_UpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWaypoint_Add_UpdateOperationCompleted);
            }
            this.InvokeAsync("Waypoint_Add_Update", new object[] {
                        userId,
                        SID,
                        orgId,
                        WaypointId,
                        WaypointName,
                        TypeId,
                        Latitude,
                        Longitude,
                        OrganizationId,
                        Persistent}, this.Waypoint_Add_UpdateOperationCompleted, userState);
        }
        
        private void OnWaypoint_Add_UpdateOperationCompleted(object arg) {
            if ((this.Waypoint_Add_UpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Waypoint_Add_UpdateCompleted(this, new Waypoint_Add_UpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetWaypointType", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetWaypointType(int userId, string SID, int orgId, ref string xml) {
            object[] results = this.Invoke("GetWaypointType", new object[] {
                        userId,
                        SID,
                        orgId,
                        xml});
            xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetWaypointTypeAsync(int userId, string SID, int orgId, string xml) {
            this.GetWaypointTypeAsync(userId, SID, orgId, xml, null);
        }
        
        /// <remarks/>
        public void GetWaypointTypeAsync(int userId, string SID, int orgId, string xml, object userState) {
            if ((this.GetWaypointTypeOperationCompleted == null)) {
                this.GetWaypointTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWaypointTypeOperationCompleted);
            }
            this.InvokeAsync("GetWaypointType", new object[] {
                        userId,
                        SID,
                        orgId,
                        xml}, this.GetWaypointTypeOperationCompleted, userState);
        }
        
        private void OnGetWaypointTypeOperationCompleted(object arg) {
            if ((this.GetWaypointTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWaypointTypeCompleted(this, new GetWaypointTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetOrganizationWaypoints", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetOrganizationWaypoints(int userId, string SID, int orgId, ref string xml) {
            object[] results = this.Invoke("GetOrganizationWaypoints", new object[] {
                        userId,
                        SID,
                        orgId,
                        xml});
            xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetOrganizationWaypointsAsync(int userId, string SID, int orgId, string xml) {
            this.GetOrganizationWaypointsAsync(userId, SID, orgId, xml, null);
        }
        
        /// <remarks/>
        public void GetOrganizationWaypointsAsync(int userId, string SID, int orgId, string xml, object userState) {
            if ((this.GetOrganizationWaypointsOperationCompleted == null)) {
                this.GetOrganizationWaypointsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOrganizationWaypointsOperationCompleted);
            }
            this.InvokeAsync("GetOrganizationWaypoints", new object[] {
                        userId,
                        SID,
                        orgId,
                        xml}, this.GetOrganizationWaypointsOperationCompleted, userState);
        }
        
        private void OnGetOrganizationWaypointsOperationCompleted(object arg) {
            if ((this.GetOrganizationWaypointsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOrganizationWaypointsCompleted(this, new GetOrganizationWaypointsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetOrganizationServices", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetOrganizationServices(int userId, string SID, int OrganizationId, int ServiceID, bool IsBillable, ref string xml) {
            object[] results = this.Invoke("GetOrganizationServices", new object[] {
                        userId,
                        SID,
                        OrganizationId,
                        ServiceID,
                        IsBillable,
                        xml});
            xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetOrganizationServicesAsync(int userId, string SID, int OrganizationId, int ServiceID, bool IsBillable, string xml) {
            this.GetOrganizationServicesAsync(userId, SID, OrganizationId, ServiceID, IsBillable, xml, null);
        }
        
        /// <remarks/>
        public void GetOrganizationServicesAsync(int userId, string SID, int OrganizationId, int ServiceID, bool IsBillable, string xml, object userState) {
            if ((this.GetOrganizationServicesOperationCompleted == null)) {
                this.GetOrganizationServicesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOrganizationServicesOperationCompleted);
            }
            this.InvokeAsync("GetOrganizationServices", new object[] {
                        userId,
                        SID,
                        OrganizationId,
                        ServiceID,
                        IsBillable,
                        xml}, this.GetOrganizationServicesOperationCompleted, userState);
        }
        
        private void OnGetOrganizationServicesOperationCompleted(object arg) {
            if ((this.GetOrganizationServicesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOrganizationServicesCompleted(this, new GetOrganizationServicesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetOrganizationServicesForAdd", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetOrganizationServicesForAdd(int userId, string SID, int OrganizationId, ref string xml) {
            object[] results = this.Invoke("GetOrganizationServicesForAdd", new object[] {
                        userId,
                        SID,
                        OrganizationId,
                        xml});
            xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetOrganizationServicesForAddAsync(int userId, string SID, int OrganizationId, string xml) {
            this.GetOrganizationServicesForAddAsync(userId, SID, OrganizationId, xml, null);
        }
        
        /// <remarks/>
        public void GetOrganizationServicesForAddAsync(int userId, string SID, int OrganizationId, string xml, object userState) {
            if ((this.GetOrganizationServicesForAddOperationCompleted == null)) {
                this.GetOrganizationServicesForAddOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOrganizationServicesForAddOperationCompleted);
            }
            this.InvokeAsync("GetOrganizationServicesForAdd", new object[] {
                        userId,
                        SID,
                        OrganizationId,
                        xml}, this.GetOrganizationServicesForAddOperationCompleted, userState);
        }
        
        private void OnGetOrganizationServicesForAddOperationCompleted(object arg) {
            if ((this.GetOrganizationServicesForAddCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOrganizationServicesForAddCompleted(this, new GetOrganizationServicesForAddCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/AddOrganizationService", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AddOrganizationService(int userId, string SID, int OrganizationID, int ServiceID) {
            object[] results = this.Invoke("AddOrganizationService", new object[] {
                        userId,
                        SID,
                        OrganizationID,
                        ServiceID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AddOrganizationServiceAsync(int userId, string SID, int OrganizationID, int ServiceID) {
            this.AddOrganizationServiceAsync(userId, SID, OrganizationID, ServiceID, null);
        }
        
        /// <remarks/>
        public void AddOrganizationServiceAsync(int userId, string SID, int OrganizationID, int ServiceID, object userState) {
            if ((this.AddOrganizationServiceOperationCompleted == null)) {
                this.AddOrganizationServiceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddOrganizationServiceOperationCompleted);
            }
            this.InvokeAsync("AddOrganizationService", new object[] {
                        userId,
                        SID,
                        OrganizationID,
                        ServiceID}, this.AddOrganizationServiceOperationCompleted, userState);
        }
        
        private void OnAddOrganizationServiceOperationCompleted(object arg) {
            if ((this.AddOrganizationServiceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddOrganizationServiceCompleted(this, new AddOrganizationServiceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/DeleteOrganizationService", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int DeleteOrganizationService(int userId, string SID, int OrganizationServiceID) {
            object[] results = this.Invoke("DeleteOrganizationService", new object[] {
                        userId,
                        SID,
                        OrganizationServiceID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteOrganizationServiceAsync(int userId, string SID, int OrganizationServiceID) {
            this.DeleteOrganizationServiceAsync(userId, SID, OrganizationServiceID, null);
        }
        
        /// <remarks/>
        public void DeleteOrganizationServiceAsync(int userId, string SID, int OrganizationServiceID, object userState) {
            if ((this.DeleteOrganizationServiceOperationCompleted == null)) {
                this.DeleteOrganizationServiceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteOrganizationServiceOperationCompleted);
            }
            this.InvokeAsync("DeleteOrganizationService", new object[] {
                        userId,
                        SID,
                        OrganizationServiceID}, this.DeleteOrganizationServiceOperationCompleted, userState);
        }
        
        private void OnDeleteOrganizationServiceOperationCompleted(object arg) {
            if ((this.DeleteOrganizationServiceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteOrganizationServiceCompleted(this, new DeleteOrganizationServiceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/AddUserGroupsDefault", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AddUserGroupsDefault(int userId, string SID, int OrganizationId) {
            object[] results = this.Invoke("AddUserGroupsDefault", new object[] {
                        userId,
                        SID,
                        OrganizationId});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AddUserGroupsDefaultAsync(int userId, string SID, int OrganizationId) {
            this.AddUserGroupsDefaultAsync(userId, SID, OrganizationId, null);
        }
        
        /// <remarks/>
        public void AddUserGroupsDefaultAsync(int userId, string SID, int OrganizationId, object userState) {
            if ((this.AddUserGroupsDefaultOperationCompleted == null)) {
                this.AddUserGroupsDefaultOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddUserGroupsDefaultOperationCompleted);
            }
            this.InvokeAsync("AddUserGroupsDefault", new object[] {
                        userId,
                        SID,
                        OrganizationId}, this.AddUserGroupsDefaultOperationCompleted, userState);
        }
        
        private void OnAddUserGroupsDefaultOperationCompleted(object arg) {
            if ((this.AddUserGroupsDefaultCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddUserGroupsDefaultCompleted(this, new AddUserGroupsDefaultCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetUsersNameInfoByOrganizationByLang", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetUsersNameInfoByOrganizationByLang(int userId, string SID, int organizationId, string lang, ref string xml) {
            object[] results = this.Invoke("GetUsersNameInfoByOrganizationByLang", new object[] {
                        userId,
                        SID,
                        organizationId,
                        lang,
                        xml});
            xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetUsersNameInfoByOrganizationByLangAsync(int userId, string SID, int organizationId, string lang, string xml) {
            this.GetUsersNameInfoByOrganizationByLangAsync(userId, SID, organizationId, lang, xml, null);
        }
        
        /// <remarks/>
        public void GetUsersNameInfoByOrganizationByLangAsync(int userId, string SID, int organizationId, string lang, string xml, object userState) {
            if ((this.GetUsersNameInfoByOrganizationByLangOperationCompleted == null)) {
                this.GetUsersNameInfoByOrganizationByLangOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUsersNameInfoByOrganizationByLangOperationCompleted);
            }
            this.InvokeAsync("GetUsersNameInfoByOrganizationByLang", new object[] {
                        userId,
                        SID,
                        organizationId,
                        lang,
                        xml}, this.GetUsersNameInfoByOrganizationByLangOperationCompleted, userState);
        }
        
        private void OnGetUsersNameInfoByOrganizationByLangOperationCompleted(object arg) {
            if ((this.GetUsersNameInfoByOrganizationByLangCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUsersNameInfoByOrganizationByLangCompleted(this, new GetUsersNameInfoByOrganizationByLangCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetOrganizationColumnsPreferences", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetOrganizationColumnsPreferences(int userId, string SID, int organizationId, ref string xmlString) {
            object[] results = this.Invoke("GetOrganizationColumnsPreferences", new object[] {
                        userId,
                        SID,
                        organizationId,
                        xmlString});
            xmlString = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetOrganizationColumnsPreferencesAsync(int userId, string SID, int organizationId, string xmlString) {
            this.GetOrganizationColumnsPreferencesAsync(userId, SID, organizationId, xmlString, null);
        }
        
        /// <remarks/>
        public void GetOrganizationColumnsPreferencesAsync(int userId, string SID, int organizationId, string xmlString, object userState) {
            if ((this.GetOrganizationColumnsPreferencesOperationCompleted == null)) {
                this.GetOrganizationColumnsPreferencesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOrganizationColumnsPreferencesOperationCompleted);
            }
            this.InvokeAsync("GetOrganizationColumnsPreferences", new object[] {
                        userId,
                        SID,
                        organizationId,
                        xmlString}, this.GetOrganizationColumnsPreferencesOperationCompleted, userState);
        }
        
        private void OnGetOrganizationColumnsPreferencesOperationCompleted(object arg) {
            if ((this.GetOrganizationColumnsPreferencesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOrganizationColumnsPreferencesCompleted(this, new GetOrganizationColumnsPreferencesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetOrganizationSensorPreferences", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetOrganizationSensorPreferences(int userId, string SID, int organizationId, ref string xmlString) {
            object[] results = this.Invoke("GetOrganizationSensorPreferences", new object[] {
                        userId,
                        SID,
                        organizationId,
                        xmlString});
            xmlString = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetOrganizationSensorPreferencesAsync(int userId, string SID, int organizationId, string xmlString) {
            this.GetOrganizationSensorPreferencesAsync(userId, SID, organizationId, xmlString, null);
        }
        
        /// <remarks/>
        public void GetOrganizationSensorPreferencesAsync(int userId, string SID, int organizationId, string xmlString, object userState) {
            if ((this.GetOrganizationSensorPreferencesOperationCompleted == null)) {
                this.GetOrganizationSensorPreferencesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOrganizationSensorPreferencesOperationCompleted);
            }
            this.InvokeAsync("GetOrganizationSensorPreferences", new object[] {
                        userId,
                        SID,
                        organizationId,
                        xmlString}, this.GetOrganizationSensorPreferencesOperationCompleted, userState);
        }
        
        private void OnGetOrganizationSensorPreferencesOperationCompleted(object arg) {
            if ((this.GetOrganizationSensorPreferencesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOrganizationSensorPreferencesCompleted(this, new GetOrganizationSensorPreferencesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetOrganizationSensor", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetOrganizationSensor(int userId, string SID, int organizationId, ref string xmlString) {
            object[] results = this.Invoke("GetOrganizationSensor", new object[] {
                        userId,
                        SID,
                        organizationId,
                        xmlString});
            xmlString = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetOrganizationSensorAsync(int userId, string SID, int organizationId, string xmlString) {
            this.GetOrganizationSensorAsync(userId, SID, organizationId, xmlString, null);
        }
        
        /// <remarks/>
        public void GetOrganizationSensorAsync(int userId, string SID, int organizationId, string xmlString, object userState) {
            if ((this.GetOrganizationSensorOperationCompleted == null)) {
                this.GetOrganizationSensorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOrganizationSensorOperationCompleted);
            }
            this.InvokeAsync("GetOrganizationSensor", new object[] {
                        userId,
                        SID,
                        organizationId,
                        xmlString}, this.GetOrganizationSensorOperationCompleted, userState);
        }
        
        private void OnGetOrganizationSensorOperationCompleted(object arg) {
            if ((this.GetOrganizationSensorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOrganizationSensorCompleted(this, new GetOrganizationSensorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetOrganizationPreferenceByOrganizationIdAndUserId", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetOrganizationPreferenceByOrganizationIdAndUserId(int userId, string SID, int organizationId, ref string xmlString) {
            object[] results = this.Invoke("GetOrganizationPreferenceByOrganizationIdAndUserId", new object[] {
                        userId,
                        SID,
                        organizationId,
                        xmlString});
            xmlString = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetOrganizationPreferenceByOrganizationIdAndUserIdAsync(int userId, string SID, int organizationId, string xmlString) {
            this.GetOrganizationPreferenceByOrganizationIdAndUserIdAsync(userId, SID, organizationId, xmlString, null);
        }
        
        /// <remarks/>
        public void GetOrganizationPreferenceByOrganizationIdAndUserIdAsync(int userId, string SID, int organizationId, string xmlString, object userState) {
            if ((this.GetOrganizationPreferenceByOrganizationIdAndUserIdOperationCompleted == null)) {
                this.GetOrganizationPreferenceByOrganizationIdAndUserIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOrganizationPreferenceByOrganizationIdAndUserIdOperationCompleted);
            }
            this.InvokeAsync("GetOrganizationPreferenceByOrganizationIdAndUserId", new object[] {
                        userId,
                        SID,
                        organizationId,
                        xmlString}, this.GetOrganizationPreferenceByOrganizationIdAndUserIdOperationCompleted, userState);
        }
        
        private void OnGetOrganizationPreferenceByOrganizationIdAndUserIdOperationCompleted(object arg) {
            if ((this.GetOrganizationPreferenceByOrganizationIdAndUserIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOrganizationPreferenceByOrganizationIdAndUserIdCompleted(this, new GetOrganizationPreferenceByOrganizationIdAndUserIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/AddOrganizationSensorPreferene", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AddOrganizationSensorPreferene(int userId, string SID, int organizationId, string sensorname) {
            object[] results = this.Invoke("AddOrganizationSensorPreferene", new object[] {
                        userId,
                        SID,
                        organizationId,
                        sensorname});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AddOrganizationSensorPrefereneAsync(int userId, string SID, int organizationId, string sensorname) {
            this.AddOrganizationSensorPrefereneAsync(userId, SID, organizationId, sensorname, null);
        }
        
        /// <remarks/>
        public void AddOrganizationSensorPrefereneAsync(int userId, string SID, int organizationId, string sensorname, object userState) {
            if ((this.AddOrganizationSensorPrefereneOperationCompleted == null)) {
                this.AddOrganizationSensorPrefereneOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddOrganizationSensorPrefereneOperationCompleted);
            }
            this.InvokeAsync("AddOrganizationSensorPreferene", new object[] {
                        userId,
                        SID,
                        organizationId,
                        sensorname}, this.AddOrganizationSensorPrefereneOperationCompleted, userState);
        }
        
        private void OnAddOrganizationSensorPrefereneOperationCompleted(object arg) {
            if ((this.AddOrganizationSensorPrefereneCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddOrganizationSensorPrefereneCompleted(this, new AddOrganizationSensorPrefereneCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/DeleteOrganizationSensorPreferene", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int DeleteOrganizationSensorPreferene(int userId, string SID, int organizationId, string sensorname) {
            object[] results = this.Invoke("DeleteOrganizationSensorPreferene", new object[] {
                        userId,
                        SID,
                        organizationId,
                        sensorname});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteOrganizationSensorPrefereneAsync(int userId, string SID, int organizationId, string sensorname) {
            this.DeleteOrganizationSensorPrefereneAsync(userId, SID, organizationId, sensorname, null);
        }
        
        /// <remarks/>
        public void DeleteOrganizationSensorPrefereneAsync(int userId, string SID, int organizationId, string sensorname, object userState) {
            if ((this.DeleteOrganizationSensorPrefereneOperationCompleted == null)) {
                this.DeleteOrganizationSensorPrefereneOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteOrganizationSensorPrefereneOperationCompleted);
            }
            this.InvokeAsync("DeleteOrganizationSensorPreferene", new object[] {
                        userId,
                        SID,
                        organizationId,
                        sensorname}, this.DeleteOrganizationSensorPrefereneOperationCompleted, userState);
        }
        
        private void OnDeleteOrganizationSensorPrefereneOperationCompleted(object arg) {
            if ((this.DeleteOrganizationSensorPrefereneCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteOrganizationSensorPrefereneCompleted(this, new DeleteOrganizationSensorPrefereneCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetAllSensorByOrganizationId", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetAllSensorByOrganizationId(int userId, int organizationId, ref string xmlString) {
            object[] results = this.Invoke("GetAllSensorByOrganizationId", new object[] {
                        userId,
                        organizationId,
                        xmlString});
            xmlString = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllSensorByOrganizationIdAsync(int userId, int organizationId, string xmlString) {
            this.GetAllSensorByOrganizationIdAsync(userId, organizationId, xmlString, null);
        }
        
        /// <remarks/>
        public void GetAllSensorByOrganizationIdAsync(int userId, int organizationId, string xmlString, object userState) {
            if ((this.GetAllSensorByOrganizationIdOperationCompleted == null)) {
                this.GetAllSensorByOrganizationIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllSensorByOrganizationIdOperationCompleted);
            }
            this.InvokeAsync("GetAllSensorByOrganizationId", new object[] {
                        userId,
                        organizationId,
                        xmlString}, this.GetAllSensorByOrganizationIdOperationCompleted, userState);
        }
        
        private void OnGetAllSensorByOrganizationIdOperationCompleted(object arg) {
            if ((this.GetAllSensorByOrganizationIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllSensorByOrganizationIdCompleted(this, new GetAllSensorByOrganizationIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetAllOrganizationsInfoXML", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetAllOrganizationsInfoXML(int userId, string SID, ref string xml) {
            object[] results = this.Invoke("GetAllOrganizationsInfoXML", new object[] {
                        userId,
                        SID,
                        xml});
            xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllOrganizationsInfoXMLAsync(int userId, string SID, string xml) {
            this.GetAllOrganizationsInfoXMLAsync(userId, SID, xml, null);
        }
        
        /// <remarks/>
        public void GetAllOrganizationsInfoXMLAsync(int userId, string SID, string xml, object userState) {
            if ((this.GetAllOrganizationsInfoXMLOperationCompleted == null)) {
                this.GetAllOrganizationsInfoXMLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllOrganizationsInfoXMLOperationCompleted);
            }
            this.InvokeAsync("GetAllOrganizationsInfoXML", new object[] {
                        userId,
                        SID,
                        xml}, this.GetAllOrganizationsInfoXMLOperationCompleted, userState);
        }
        
        private void OnGetAllOrganizationsInfoXMLOperationCompleted(object arg) {
            if ((this.GetAllOrganizationsInfoXMLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllOrganizationsInfoXMLCompleted(this, new GetAllOrganizationsInfoXMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetOrganizationInfoXMLByOrganizationId", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetOrganizationInfoXMLByOrganizationId(int userId, string SID, int organizationId, ref string xml) {
            object[] results = this.Invoke("GetOrganizationInfoXMLByOrganizationId", new object[] {
                        userId,
                        SID,
                        organizationId,
                        xml});
            xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetOrganizationInfoXMLByOrganizationIdAsync(int userId, string SID, int organizationId, string xml) {
            this.GetOrganizationInfoXMLByOrganizationIdAsync(userId, SID, organizationId, xml, null);
        }
        
        /// <remarks/>
        public void GetOrganizationInfoXMLByOrganizationIdAsync(int userId, string SID, int organizationId, string xml, object userState) {
            if ((this.GetOrganizationInfoXMLByOrganizationIdOperationCompleted == null)) {
                this.GetOrganizationInfoXMLByOrganizationIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOrganizationInfoXMLByOrganizationIdOperationCompleted);
            }
            this.InvokeAsync("GetOrganizationInfoXMLByOrganizationId", new object[] {
                        userId,
                        SID,
                        organizationId,
                        xml}, this.GetOrganizationInfoXMLByOrganizationIdOperationCompleted, userState);
        }
        
        private void OnGetOrganizationInfoXMLByOrganizationIdOperationCompleted(object arg) {
            if ((this.GetOrganizationInfoXMLByOrganizationIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOrganizationInfoXMLByOrganizationIdCompleted(this, new GetOrganizationInfoXMLByOrganizationIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetOrganizationInfoXMLByOrganizationName", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetOrganizationInfoXMLByOrganizationName(int userId, string SID, string organizationName, ref string xml) {
            object[] results = this.Invoke("GetOrganizationInfoXMLByOrganizationName", new object[] {
                        userId,
                        SID,
                        organizationName,
                        xml});
            xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetOrganizationInfoXMLByOrganizationNameAsync(int userId, string SID, string organizationName, string xml) {
            this.GetOrganizationInfoXMLByOrganizationNameAsync(userId, SID, organizationName, xml, null);
        }
        
        /// <remarks/>
        public void GetOrganizationInfoXMLByOrganizationNameAsync(int userId, string SID, string organizationName, string xml, object userState) {
            if ((this.GetOrganizationInfoXMLByOrganizationNameOperationCompleted == null)) {
                this.GetOrganizationInfoXMLByOrganizationNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOrganizationInfoXMLByOrganizationNameOperationCompleted);
            }
            this.InvokeAsync("GetOrganizationInfoXMLByOrganizationName", new object[] {
                        userId,
                        SID,
                        organizationName,
                        xml}, this.GetOrganizationInfoXMLByOrganizationNameOperationCompleted, userState);
        }
        
        private void OnGetOrganizationInfoXMLByOrganizationNameOperationCompleted(object arg) {
            if ((this.GetOrganizationInfoXMLByOrganizationNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOrganizationInfoXMLByOrganizationNameCompleted(this, new GetOrganizationInfoXMLByOrganizationNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetOrganizationInfoXMLByUserId", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetOrganizationInfoXMLByUserId(int userId, string SID, ref string xml) {
            object[] results = this.Invoke("GetOrganizationInfoXMLByUserId", new object[] {
                        userId,
                        SID,
                        xml});
            xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetOrganizationInfoXMLByUserIdAsync(int userId, string SID, string xml) {
            this.GetOrganizationInfoXMLByUserIdAsync(userId, SID, xml, null);
        }
        
        /// <remarks/>
        public void GetOrganizationInfoXMLByUserIdAsync(int userId, string SID, string xml, object userState) {
            if ((this.GetOrganizationInfoXMLByUserIdOperationCompleted == null)) {
                this.GetOrganizationInfoXMLByUserIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOrganizationInfoXMLByUserIdOperationCompleted);
            }
            this.InvokeAsync("GetOrganizationInfoXMLByUserId", new object[] {
                        userId,
                        SID,
                        xml}, this.GetOrganizationInfoXMLByUserIdOperationCompleted, userState);
        }
        
        private void OnGetOrganizationInfoXMLByUserIdOperationCompleted(object arg) {
            if ((this.GetOrganizationInfoXMLByUserIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOrganizationInfoXMLByUserIdCompleted(this, new GetOrganizationInfoXMLByUserIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetOrganizationCommPhonesInfo", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetOrganizationCommPhonesInfo(int userId, string SID, int organizationId, ref string xml) {
            object[] results = this.Invoke("GetOrganizationCommPhonesInfo", new object[] {
                        userId,
                        SID,
                        organizationId,
                        xml});
            xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetOrganizationCommPhonesInfoAsync(int userId, string SID, int organizationId, string xml) {
            this.GetOrganizationCommPhonesInfoAsync(userId, SID, organizationId, xml, null);
        }
        
        /// <remarks/>
        public void GetOrganizationCommPhonesInfoAsync(int userId, string SID, int organizationId, string xml, object userState) {
            if ((this.GetOrganizationCommPhonesInfoOperationCompleted == null)) {
                this.GetOrganizationCommPhonesInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOrganizationCommPhonesInfoOperationCompleted);
            }
            this.InvokeAsync("GetOrganizationCommPhonesInfo", new object[] {
                        userId,
                        SID,
                        organizationId,
                        xml}, this.GetOrganizationCommPhonesInfoOperationCompleted, userState);
        }
        
        private void OnGetOrganizationCommPhonesInfoOperationCompleted(object arg) {
            if ((this.GetOrganizationCommPhonesInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOrganizationCommPhonesInfoCompleted(this, new GetOrganizationCommPhonesInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetFleetsInfoByOrganizationId", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetFleetsInfoByOrganizationId(int userId, string SID, int organizationId, ref string xml) {
            object[] results = this.Invoke("GetFleetsInfoByOrganizationId", new object[] {
                        userId,
                        SID,
                        organizationId,
                        xml});
            xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetFleetsInfoByOrganizationIdAsync(int userId, string SID, int organizationId, string xml) {
            this.GetFleetsInfoByOrganizationIdAsync(userId, SID, organizationId, xml, null);
        }
        
        /// <remarks/>
        public void GetFleetsInfoByOrganizationIdAsync(int userId, string SID, int organizationId, string xml, object userState) {
            if ((this.GetFleetsInfoByOrganizationIdOperationCompleted == null)) {
                this.GetFleetsInfoByOrganizationIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFleetsInfoByOrganizationIdOperationCompleted);
            }
            this.InvokeAsync("GetFleetsInfoByOrganizationId", new object[] {
                        userId,
                        SID,
                        organizationId,
                        xml}, this.GetFleetsInfoByOrganizationIdOperationCompleted, userState);
        }
        
        private void OnGetFleetsInfoByOrganizationIdOperationCompleted(object arg) {
            if ((this.GetFleetsInfoByOrganizationIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFleetsInfoByOrganizationIdCompleted(this, new GetFleetsInfoByOrganizationIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetFleetsInfoByOrganizationIdAndType", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetFleetsInfoByOrganizationIdAndType(int userId, string SID, int organizationId, string FleetType, ref string xml) {
            object[] results = this.Invoke("GetFleetsInfoByOrganizationIdAndType", new object[] {
                        userId,
                        SID,
                        organizationId,
                        FleetType,
                        xml});
            xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetFleetsInfoByOrganizationIdAndTypeAsync(int userId, string SID, int organizationId, string FleetType, string xml) {
            this.GetFleetsInfoByOrganizationIdAndTypeAsync(userId, SID, organizationId, FleetType, xml, null);
        }
        
        /// <remarks/>
        public void GetFleetsInfoByOrganizationIdAndTypeAsync(int userId, string SID, int organizationId, string FleetType, string xml, object userState) {
            if ((this.GetFleetsInfoByOrganizationIdAndTypeOperationCompleted == null)) {
                this.GetFleetsInfoByOrganizationIdAndTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFleetsInfoByOrganizationIdAndTypeOperationCompleted);
            }
            this.InvokeAsync("GetFleetsInfoByOrganizationIdAndType", new object[] {
                        userId,
                        SID,
                        organizationId,
                        FleetType,
                        xml}, this.GetFleetsInfoByOrganizationIdAndTypeOperationCompleted, userState);
        }
        
        private void OnGetFleetsInfoByOrganizationIdAndTypeOperationCompleted(object arg) {
            if ((this.GetFleetsInfoByOrganizationIdAndTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFleetsInfoByOrganizationIdAndTypeCompleted(this, new GetFleetsInfoByOrganizationIdAndTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetOrganizationLandmarksWithBoundary", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetOrganizationLandmarksWithBoundary(int userId, string SID, int organizationId, double topleftlat, double topleftlong, double bottomrightlat, double bottomrightlong, ref string xml) {
            object[] results = this.Invoke("GetOrganizationLandmarksWithBoundary", new object[] {
                        userId,
                        SID,
                        organizationId,
                        topleftlat,
                        topleftlong,
                        bottomrightlat,
                        bottomrightlong,
                        xml});
            xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetOrganizationLandmarksWithBoundaryAsync(int userId, string SID, int organizationId, double topleftlat, double topleftlong, double bottomrightlat, double bottomrightlong, string xml) {
            this.GetOrganizationLandmarksWithBoundaryAsync(userId, SID, organizationId, topleftlat, topleftlong, bottomrightlat, bottomrightlong, xml, null);
        }
        
        /// <remarks/>
        public void GetOrganizationLandmarksWithBoundaryAsync(int userId, string SID, int organizationId, double topleftlat, double topleftlong, double bottomrightlat, double bottomrightlong, string xml, object userState) {
            if ((this.GetOrganizationLandmarksWithBoundaryOperationCompleted == null)) {
                this.GetOrganizationLandmarksWithBoundaryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOrganizationLandmarksWithBoundaryOperationCompleted);
            }
            this.InvokeAsync("GetOrganizationLandmarksWithBoundary", new object[] {
                        userId,
                        SID,
                        organizationId,
                        topleftlat,
                        topleftlong,
                        bottomrightlat,
                        bottomrightlong,
                        xml}, this.GetOrganizationLandmarksWithBoundaryOperationCompleted, userState);
        }
        
        private void OnGetOrganizationLandmarksWithBoundaryOperationCompleted(object arg) {
            if ((this.GetOrganizationLandmarksWithBoundaryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOrganizationLandmarksWithBoundaryCompleted(this, new GetOrganizationLandmarksWithBoundaryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetOrganizationLandmarksXMLByOrganizationId", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetOrganizationLandmarksXMLByOrganizationId(int userId, string SID, int organizationId, ref string xml) {
            object[] results = this.Invoke("GetOrganizationLandmarksXMLByOrganizationId", new object[] {
                        userId,
                        SID,
                        organizationId,
                        xml});
            xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetOrganizationLandmarksXMLByOrganizationIdAsync(int userId, string SID, int organizationId, string xml) {
            this.GetOrganizationLandmarksXMLByOrganizationIdAsync(userId, SID, organizationId, xml, null);
        }
        
        /// <remarks/>
        public void GetOrganizationLandmarksXMLByOrganizationIdAsync(int userId, string SID, int organizationId, string xml, object userState) {
            if ((this.GetOrganizationLandmarksXMLByOrganizationIdOperationCompleted == null)) {
                this.GetOrganizationLandmarksXMLByOrganizationIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOrganizationLandmarksXMLByOrganizationIdOperationCompleted);
            }
            this.InvokeAsync("GetOrganizationLandmarksXMLByOrganizationId", new object[] {
                        userId,
                        SID,
                        organizationId,
                        xml}, this.GetOrganizationLandmarksXMLByOrganizationIdOperationCompleted, userState);
        }
        
        private void OnGetOrganizationLandmarksXMLByOrganizationIdOperationCompleted(object arg) {
            if ((this.GetOrganizationLandmarksXMLByOrganizationIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOrganizationLandmarksXMLByOrganizationIdCompleted(this, new GetOrganizationLandmarksXMLByOrganizationIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetOrganizationLandmark_Public", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetOrganizationLandmark_Public(int userId, string SID, int orgId, bool IsPublic, ref string xml) {
            object[] results = this.Invoke("GetOrganizationLandmark_Public", new object[] {
                        userId,
                        SID,
                        orgId,
                        IsPublic,
                        xml});
            xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetOrganizationLandmark_PublicAsync(int userId, string SID, int orgId, bool IsPublic, string xml) {
            this.GetOrganizationLandmark_PublicAsync(userId, SID, orgId, IsPublic, xml, null);
        }
        
        /// <remarks/>
        public void GetOrganizationLandmark_PublicAsync(int userId, string SID, int orgId, bool IsPublic, string xml, object userState) {
            if ((this.GetOrganizationLandmark_PublicOperationCompleted == null)) {
                this.GetOrganizationLandmark_PublicOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOrganizationLandmark_PublicOperationCompleted);
            }
            this.InvokeAsync("GetOrganizationLandmark_Public", new object[] {
                        userId,
                        SID,
                        orgId,
                        IsPublic,
                        xml}, this.GetOrganizationLandmark_PublicOperationCompleted, userState);
        }
        
        private void OnGetOrganizationLandmark_PublicOperationCompleted(object arg) {
            if ((this.GetOrganizationLandmark_PublicCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOrganizationLandmark_PublicCompleted(this, new GetOrganizationLandmark_PublicCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetOrganizationGeozones_Public", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetOrganizationGeozones_Public(int userId, string SID, int orgId, bool IsPublic, ref string xml) {
            object[] results = this.Invoke("GetOrganizationGeozones_Public", new object[] {
                        userId,
                        SID,
                        orgId,
                        IsPublic,
                        xml});
            xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetOrganizationGeozones_PublicAsync(int userId, string SID, int orgId, bool IsPublic, string xml) {
            this.GetOrganizationGeozones_PublicAsync(userId, SID, orgId, IsPublic, xml, null);
        }
        
        /// <remarks/>
        public void GetOrganizationGeozones_PublicAsync(int userId, string SID, int orgId, bool IsPublic, string xml, object userState) {
            if ((this.GetOrganizationGeozones_PublicOperationCompleted == null)) {
                this.GetOrganizationGeozones_PublicOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOrganizationGeozones_PublicOperationCompleted);
            }
            this.InvokeAsync("GetOrganizationGeozones_Public", new object[] {
                        userId,
                        SID,
                        orgId,
                        IsPublic,
                        xml}, this.GetOrganizationGeozones_PublicOperationCompleted, userState);
        }
        
        private void OnGetOrganizationGeozones_PublicOperationCompleted(object arg) {
            if ((this.GetOrganizationGeozones_PublicCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOrganizationGeozones_PublicCompleted(this, new GetOrganizationGeozones_PublicCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetOrganizationLandmarksXMLByOrganizationName", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetOrganizationLandmarksXMLByOrganizationName(int userId, string SID, string organizationName, ref string xml) {
            object[] results = this.Invoke("GetOrganizationLandmarksXMLByOrganizationName", new object[] {
                        userId,
                        SID,
                        organizationName,
                        xml});
            xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetOrganizationLandmarksXMLByOrganizationNameAsync(int userId, string SID, string organizationName, string xml) {
            this.GetOrganizationLandmarksXMLByOrganizationNameAsync(userId, SID, organizationName, xml, null);
        }
        
        /// <remarks/>
        public void GetOrganizationLandmarksXMLByOrganizationNameAsync(int userId, string SID, string organizationName, string xml, object userState) {
            if ((this.GetOrganizationLandmarksXMLByOrganizationNameOperationCompleted == null)) {
                this.GetOrganizationLandmarksXMLByOrganizationNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOrganizationLandmarksXMLByOrganizationNameOperationCompleted);
            }
            this.InvokeAsync("GetOrganizationLandmarksXMLByOrganizationName", new object[] {
                        userId,
                        SID,
                        organizationName,
                        xml}, this.GetOrganizationLandmarksXMLByOrganizationNameOperationCompleted, userState);
        }
        
        private void OnGetOrganizationLandmarksXMLByOrganizationNameOperationCompleted(object arg) {
            if ((this.GetOrganizationLandmarksXMLByOrganizationNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOrganizationLandmarksXMLByOrganizationNameCompleted(this, new GetOrganizationLandmarksXMLByOrganizationNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetLandmarkName", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetLandmarkName(int userId, string SID, int organizationId, double latitude, double longitude, ref string xml) {
            object[] results = this.Invoke("GetLandmarkName", new object[] {
                        userId,
                        SID,
                        organizationId,
                        latitude,
                        longitude,
                        xml});
            xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetLandmarkNameAsync(int userId, string SID, int organizationId, double latitude, double longitude, string xml) {
            this.GetLandmarkNameAsync(userId, SID, organizationId, latitude, longitude, xml, null);
        }
        
        /// <remarks/>
        public void GetLandmarkNameAsync(int userId, string SID, int organizationId, double latitude, double longitude, string xml, object userState) {
            if ((this.GetLandmarkNameOperationCompleted == null)) {
                this.GetLandmarkNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLandmarkNameOperationCompleted);
            }
            this.InvokeAsync("GetLandmarkName", new object[] {
                        userId,
                        SID,
                        organizationId,
                        latitude,
                        longitude,
                        xml}, this.GetLandmarkNameOperationCompleted, userState);
        }
        
        private void OnGetLandmarkNameOperationCompleted(object arg) {
            if ((this.GetLandmarkNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLandmarkNameCompleted(this, new GetLandmarkNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetLandmarkLocation", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetLandmarkLocation(int userId, string SID, int organizationId, string landmarkName, ref double latitude, ref double longitude) {
            object[] results = this.Invoke("GetLandmarkLocation", new object[] {
                        userId,
                        SID,
                        organizationId,
                        landmarkName,
                        latitude,
                        longitude});
            latitude = ((double)(results[1]));
            longitude = ((double)(results[2]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetLandmarkLocationAsync(int userId, string SID, int organizationId, string landmarkName, double latitude, double longitude) {
            this.GetLandmarkLocationAsync(userId, SID, organizationId, landmarkName, latitude, longitude, null);
        }
        
        /// <remarks/>
        public void GetLandmarkLocationAsync(int userId, string SID, int organizationId, string landmarkName, double latitude, double longitude, object userState) {
            if ((this.GetLandmarkLocationOperationCompleted == null)) {
                this.GetLandmarkLocationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLandmarkLocationOperationCompleted);
            }
            this.InvokeAsync("GetLandmarkLocation", new object[] {
                        userId,
                        SID,
                        organizationId,
                        landmarkName,
                        latitude,
                        longitude}, this.GetLandmarkLocationOperationCompleted, userState);
        }
        
        private void OnGetLandmarkLocationOperationCompleted(object arg) {
            if ((this.GetLandmarkLocationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLandmarkLocationCompleted(this, new GetLandmarkLocationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/AddOrganizationLandmark", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AddOrganizationLandmark(
                    int userId, 
                    string SID, 
                    int organizationId, 
                    double latitude, 
                    double longitude, 
                    string name, 
                    string description, 
                    string contactPersonName, 
                    string contactPhoneNum, 
                    int radius, 
                    string email, 
                    string phoneSMS, 
                    short timeZone, 
                    bool dayLightSaving, 
                    bool autoAdjustDayLightSaving, 
                    string streetAddress, 
                    bool publicLandmark) {
            object[] results = this.Invoke("AddOrganizationLandmark", new object[] {
                        userId,
                        SID,
                        organizationId,
                        latitude,
                        longitude,
                        name,
                        description,
                        contactPersonName,
                        contactPhoneNum,
                        radius,
                        email,
                        phoneSMS,
                        timeZone,
                        dayLightSaving,
                        autoAdjustDayLightSaving,
                        streetAddress,
                        publicLandmark});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AddOrganizationLandmarkAsync(
                    int userId, 
                    string SID, 
                    int organizationId, 
                    double latitude, 
                    double longitude, 
                    string name, 
                    string description, 
                    string contactPersonName, 
                    string contactPhoneNum, 
                    int radius, 
                    string email, 
                    string phoneSMS, 
                    short timeZone, 
                    bool dayLightSaving, 
                    bool autoAdjustDayLightSaving, 
                    string streetAddress, 
                    bool publicLandmark) {
            this.AddOrganizationLandmarkAsync(userId, SID, organizationId, latitude, longitude, name, description, contactPersonName, contactPhoneNum, radius, email, phoneSMS, timeZone, dayLightSaving, autoAdjustDayLightSaving, streetAddress, publicLandmark, null);
        }
        
        /// <remarks/>
        public void AddOrganizationLandmarkAsync(
                    int userId, 
                    string SID, 
                    int organizationId, 
                    double latitude, 
                    double longitude, 
                    string name, 
                    string description, 
                    string contactPersonName, 
                    string contactPhoneNum, 
                    int radius, 
                    string email, 
                    string phoneSMS, 
                    short timeZone, 
                    bool dayLightSaving, 
                    bool autoAdjustDayLightSaving, 
                    string streetAddress, 
                    bool publicLandmark, 
                    object userState) {
            if ((this.AddOrganizationLandmarkOperationCompleted == null)) {
                this.AddOrganizationLandmarkOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddOrganizationLandmarkOperationCompleted);
            }
            this.InvokeAsync("AddOrganizationLandmark", new object[] {
                        userId,
                        SID,
                        organizationId,
                        latitude,
                        longitude,
                        name,
                        description,
                        contactPersonName,
                        contactPhoneNum,
                        radius,
                        email,
                        phoneSMS,
                        timeZone,
                        dayLightSaving,
                        autoAdjustDayLightSaving,
                        streetAddress,
                        publicLandmark}, this.AddOrganizationLandmarkOperationCompleted, userState);
        }
        
        private void OnAddOrganizationLandmarkOperationCompleted(object arg) {
            if ((this.AddOrganizationLandmarkCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddOrganizationLandmarkCompleted(this, new AddOrganizationLandmarkCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/AddOrganizationLandmarks", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AddOrganizationLandmarks(int userId, string SID, int organizationId, System.Data.DataSet dsLandmarks, ref string result) {
            object[] results = this.Invoke("AddOrganizationLandmarks", new object[] {
                        userId,
                        SID,
                        organizationId,
                        dsLandmarks,
                        result});
            result = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AddOrganizationLandmarksAsync(int userId, string SID, int organizationId, System.Data.DataSet dsLandmarks, string result) {
            this.AddOrganizationLandmarksAsync(userId, SID, organizationId, dsLandmarks, result, null);
        }
        
        /// <remarks/>
        public void AddOrganizationLandmarksAsync(int userId, string SID, int organizationId, System.Data.DataSet dsLandmarks, string result, object userState) {
            if ((this.AddOrganizationLandmarksOperationCompleted == null)) {
                this.AddOrganizationLandmarksOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddOrganizationLandmarksOperationCompleted);
            }
            this.InvokeAsync("AddOrganizationLandmarks", new object[] {
                        userId,
                        SID,
                        organizationId,
                        dsLandmarks,
                        result}, this.AddOrganizationLandmarksOperationCompleted, userState);
        }
        
        private void OnAddOrganizationLandmarksOperationCompleted(object arg) {
            if ((this.AddOrganizationLandmarksCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddOrganizationLandmarksCompleted(this, new AddOrganizationLandmarksCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/UpdateLandmark", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateLandmark(
                    int userId, 
                    string SID, 
                    int organizationId, 
                    string currLandmarkName, 
                    string newLandmarkName, 
                    double newLatitude, 
                    double newLongitude, 
                    string newDescription, 
                    string newContactPersonName, 
                    string newContactPhoneNum, 
                    int radius, 
                    string email, 
                    string phoneSMS, 
                    short timeZone, 
                    bool dayLightSaving, 
                    bool autoAdjustDayLightSaving, 
                    string streetAddress, 
                    bool publicLandmark) {
            object[] results = this.Invoke("UpdateLandmark", new object[] {
                        userId,
                        SID,
                        organizationId,
                        currLandmarkName,
                        newLandmarkName,
                        newLatitude,
                        newLongitude,
                        newDescription,
                        newContactPersonName,
                        newContactPhoneNum,
                        radius,
                        email,
                        phoneSMS,
                        timeZone,
                        dayLightSaving,
                        autoAdjustDayLightSaving,
                        streetAddress,
                        publicLandmark});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateLandmarkAsync(
                    int userId, 
                    string SID, 
                    int organizationId, 
                    string currLandmarkName, 
                    string newLandmarkName, 
                    double newLatitude, 
                    double newLongitude, 
                    string newDescription, 
                    string newContactPersonName, 
                    string newContactPhoneNum, 
                    int radius, 
                    string email, 
                    string phoneSMS, 
                    short timeZone, 
                    bool dayLightSaving, 
                    bool autoAdjustDayLightSaving, 
                    string streetAddress, 
                    bool publicLandmark) {
            this.UpdateLandmarkAsync(userId, SID, organizationId, currLandmarkName, newLandmarkName, newLatitude, newLongitude, newDescription, newContactPersonName, newContactPhoneNum, radius, email, phoneSMS, timeZone, dayLightSaving, autoAdjustDayLightSaving, streetAddress, publicLandmark, null);
        }
        
        /// <remarks/>
        public void UpdateLandmarkAsync(
                    int userId, 
                    string SID, 
                    int organizationId, 
                    string currLandmarkName, 
                    string newLandmarkName, 
                    double newLatitude, 
                    double newLongitude, 
                    string newDescription, 
                    string newContactPersonName, 
                    string newContactPhoneNum, 
                    int radius, 
                    string email, 
                    string phoneSMS, 
                    short timeZone, 
                    bool dayLightSaving, 
                    bool autoAdjustDayLightSaving, 
                    string streetAddress, 
                    bool publicLandmark, 
                    object userState) {
            if ((this.UpdateLandmarkOperationCompleted == null)) {
                this.UpdateLandmarkOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateLandmarkOperationCompleted);
            }
            this.InvokeAsync("UpdateLandmark", new object[] {
                        userId,
                        SID,
                        organizationId,
                        currLandmarkName,
                        newLandmarkName,
                        newLatitude,
                        newLongitude,
                        newDescription,
                        newContactPersonName,
                        newContactPhoneNum,
                        radius,
                        email,
                        phoneSMS,
                        timeZone,
                        dayLightSaving,
                        autoAdjustDayLightSaving,
                        streetAddress,
                        publicLandmark}, this.UpdateLandmarkOperationCompleted, userState);
        }
        
        private void OnUpdateLandmarkOperationCompleted(object arg) {
            if ((this.UpdateLandmarkCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateLandmarkCompleted(this, new UpdateLandmarkCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/DeleteOrganizationLandmark", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int DeleteOrganizationLandmark(int userId, string SID, int organizationId, string name) {
            object[] results = this.Invoke("DeleteOrganizationLandmark", new object[] {
                        userId,
                        SID,
                        organizationId,
                        name});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteOrganizationLandmarkAsync(int userId, string SID, int organizationId, string name) {
            this.DeleteOrganizationLandmarkAsync(userId, SID, organizationId, name, null);
        }
        
        /// <remarks/>
        public void DeleteOrganizationLandmarkAsync(int userId, string SID, int organizationId, string name, object userState) {
            if ((this.DeleteOrganizationLandmarkOperationCompleted == null)) {
                this.DeleteOrganizationLandmarkOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteOrganizationLandmarkOperationCompleted);
            }
            this.InvokeAsync("DeleteOrganizationLandmark", new object[] {
                        userId,
                        SID,
                        organizationId,
                        name}, this.DeleteOrganizationLandmarkOperationCompleted, userState);
        }
        
        private void OnDeleteOrganizationLandmarkOperationCompleted(object arg) {
            if ((this.DeleteOrganizationLandmarkCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteOrganizationLandmarkCompleted(this, new DeleteOrganizationLandmarkCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/DeleteOrganizationLandmarks", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int DeleteOrganizationLandmarks(int userId, string SID, int organizationId) {
            object[] results = this.Invoke("DeleteOrganizationLandmarks", new object[] {
                        userId,
                        SID,
                        organizationId});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteOrganizationLandmarksAsync(int userId, string SID, int organizationId) {
            this.DeleteOrganizationLandmarksAsync(userId, SID, organizationId, null);
        }
        
        /// <remarks/>
        public void DeleteOrganizationLandmarksAsync(int userId, string SID, int organizationId, object userState) {
            if ((this.DeleteOrganizationLandmarksOperationCompleted == null)) {
                this.DeleteOrganizationLandmarksOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteOrganizationLandmarksOperationCompleted);
            }
            this.InvokeAsync("DeleteOrganizationLandmarks", new object[] {
                        userId,
                        SID,
                        organizationId}, this.DeleteOrganizationLandmarksOperationCompleted, userState);
        }
        
        private void OnDeleteOrganizationLandmarksOperationCompleted(object arg) {
            if ((this.DeleteOrganizationLandmarksCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteOrganizationLandmarksCompleted(this, new DeleteOrganizationLandmarksCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/AddGeozone", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AddGeozone(
                    int userId, 
                    string SID, 
                    int organizationId, 
                    string geozoneName, 
                    short type, 
                    short geozoneType, 
                    string xmlGeozoneSet, 
                    short severityId, 
                    string description, 
                    string email, 
                    string phone, 
                    int timeZone, 
                    bool dayLightSaving, 
                    short formatType, 
                    bool notify, 
                    bool warning, 
                    bool critical, 
                    bool autoAdjustDayLightSaving, 
                    int speed, 
                    bool publicGeozone) {
            object[] results = this.Invoke("AddGeozone", new object[] {
                        userId,
                        SID,
                        organizationId,
                        geozoneName,
                        type,
                        geozoneType,
                        xmlGeozoneSet,
                        severityId,
                        description,
                        email,
                        phone,
                        timeZone,
                        dayLightSaving,
                        formatType,
                        notify,
                        warning,
                        critical,
                        autoAdjustDayLightSaving,
                        speed,
                        publicGeozone});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AddGeozoneAsync(
                    int userId, 
                    string SID, 
                    int organizationId, 
                    string geozoneName, 
                    short type, 
                    short geozoneType, 
                    string xmlGeozoneSet, 
                    short severityId, 
                    string description, 
                    string email, 
                    string phone, 
                    int timeZone, 
                    bool dayLightSaving, 
                    short formatType, 
                    bool notify, 
                    bool warning, 
                    bool critical, 
                    bool autoAdjustDayLightSaving, 
                    int speed, 
                    bool publicGeozone) {
            this.AddGeozoneAsync(userId, SID, organizationId, geozoneName, type, geozoneType, xmlGeozoneSet, severityId, description, email, phone, timeZone, dayLightSaving, formatType, notify, warning, critical, autoAdjustDayLightSaving, speed, publicGeozone, null);
        }
        
        /// <remarks/>
        public void AddGeozoneAsync(
                    int userId, 
                    string SID, 
                    int organizationId, 
                    string geozoneName, 
                    short type, 
                    short geozoneType, 
                    string xmlGeozoneSet, 
                    short severityId, 
                    string description, 
                    string email, 
                    string phone, 
                    int timeZone, 
                    bool dayLightSaving, 
                    short formatType, 
                    bool notify, 
                    bool warning, 
                    bool critical, 
                    bool autoAdjustDayLightSaving, 
                    int speed, 
                    bool publicGeozone, 
                    object userState) {
            if ((this.AddGeozoneOperationCompleted == null)) {
                this.AddGeozoneOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddGeozoneOperationCompleted);
            }
            this.InvokeAsync("AddGeozone", new object[] {
                        userId,
                        SID,
                        organizationId,
                        geozoneName,
                        type,
                        geozoneType,
                        xmlGeozoneSet,
                        severityId,
                        description,
                        email,
                        phone,
                        timeZone,
                        dayLightSaving,
                        formatType,
                        notify,
                        warning,
                        critical,
                        autoAdjustDayLightSaving,
                        speed,
                        publicGeozone}, this.AddGeozoneOperationCompleted, userState);
        }
        
        private void OnAddGeozoneOperationCompleted(object arg) {
            if ((this.AddGeozoneCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddGeozoneCompleted(this, new AddGeozoneCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/DeleteOrganizationAllGeozones", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int DeleteOrganizationAllGeozones(int userId, string SID, int organizationId) {
            object[] results = this.Invoke("DeleteOrganizationAllGeozones", new object[] {
                        userId,
                        SID,
                        organizationId});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteOrganizationAllGeozonesAsync(int userId, string SID, int organizationId) {
            this.DeleteOrganizationAllGeozonesAsync(userId, SID, organizationId, null);
        }
        
        /// <remarks/>
        public void DeleteOrganizationAllGeozonesAsync(int userId, string SID, int organizationId, object userState) {
            if ((this.DeleteOrganizationAllGeozonesOperationCompleted == null)) {
                this.DeleteOrganizationAllGeozonesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteOrganizationAllGeozonesOperationCompleted);
            }
            this.InvokeAsync("DeleteOrganizationAllGeozones", new object[] {
                        userId,
                        SID,
                        organizationId}, this.DeleteOrganizationAllGeozonesOperationCompleted, userState);
        }
        
        private void OnDeleteOrganizationAllGeozonesOperationCompleted(object arg) {
            if ((this.DeleteOrganizationAllGeozonesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteOrganizationAllGeozonesCompleted(this, new DeleteOrganizationAllGeozonesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/DeleteGeozoneFromOrganization", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int DeleteGeozoneFromOrganization(int userId, string SID, int organizationId, short geozoneId) {
            object[] results = this.Invoke("DeleteGeozoneFromOrganization", new object[] {
                        userId,
                        SID,
                        organizationId,
                        geozoneId});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteGeozoneFromOrganizationAsync(int userId, string SID, int organizationId, short geozoneId) {
            this.DeleteGeozoneFromOrganizationAsync(userId, SID, organizationId, geozoneId, null);
        }
        
        /// <remarks/>
        public void DeleteGeozoneFromOrganizationAsync(int userId, string SID, int organizationId, short geozoneId, object userState) {
            if ((this.DeleteGeozoneFromOrganizationOperationCompleted == null)) {
                this.DeleteGeozoneFromOrganizationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteGeozoneFromOrganizationOperationCompleted);
            }
            this.InvokeAsync("DeleteGeozoneFromOrganization", new object[] {
                        userId,
                        SID,
                        organizationId,
                        geozoneId}, this.DeleteGeozoneFromOrganizationOperationCompleted, userState);
        }
        
        private void OnDeleteGeozoneFromOrganizationOperationCompleted(object arg) {
            if ((this.DeleteGeozoneFromOrganizationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteGeozoneFromOrganizationCompleted(this, new DeleteGeozoneFromOrganizationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/UpdateGeozone", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateGeozone(
                    int userId, 
                    string SID, 
                    int organizationId, 
                    short geozoneId, 
                    string geozoneName, 
                    short type, 
                    short geozoneType, 
                    string xmlGeozoneSet, 
                    short severityId, 
                    string description, 
                    string email, 
                    string phone, 
                    int timeZone, 
                    bool dayLightSaving, 
                    short formatType, 
                    bool notify, 
                    bool warning, 
                    bool critical, 
                    bool autoAdjustDayLightSaving, 
                    bool publicGeozone) {
            object[] results = this.Invoke("UpdateGeozone", new object[] {
                        userId,
                        SID,
                        organizationId,
                        geozoneId,
                        geozoneName,
                        type,
                        geozoneType,
                        xmlGeozoneSet,
                        severityId,
                        description,
                        email,
                        phone,
                        timeZone,
                        dayLightSaving,
                        formatType,
                        notify,
                        warning,
                        critical,
                        autoAdjustDayLightSaving,
                        publicGeozone});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateGeozoneAsync(
                    int userId, 
                    string SID, 
                    int organizationId, 
                    short geozoneId, 
                    string geozoneName, 
                    short type, 
                    short geozoneType, 
                    string xmlGeozoneSet, 
                    short severityId, 
                    string description, 
                    string email, 
                    string phone, 
                    int timeZone, 
                    bool dayLightSaving, 
                    short formatType, 
                    bool notify, 
                    bool warning, 
                    bool critical, 
                    bool autoAdjustDayLightSaving, 
                    bool publicGeozone) {
            this.UpdateGeozoneAsync(userId, SID, organizationId, geozoneId, geozoneName, type, geozoneType, xmlGeozoneSet, severityId, description, email, phone, timeZone, dayLightSaving, formatType, notify, warning, critical, autoAdjustDayLightSaving, publicGeozone, null);
        }
        
        /// <remarks/>
        public void UpdateGeozoneAsync(
                    int userId, 
                    string SID, 
                    int organizationId, 
                    short geozoneId, 
                    string geozoneName, 
                    short type, 
                    short geozoneType, 
                    string xmlGeozoneSet, 
                    short severityId, 
                    string description, 
                    string email, 
                    string phone, 
                    int timeZone, 
                    bool dayLightSaving, 
                    short formatType, 
                    bool notify, 
                    bool warning, 
                    bool critical, 
                    bool autoAdjustDayLightSaving, 
                    bool publicGeozone, 
                    object userState) {
            if ((this.UpdateGeozoneOperationCompleted == null)) {
                this.UpdateGeozoneOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateGeozoneOperationCompleted);
            }
            this.InvokeAsync("UpdateGeozone", new object[] {
                        userId,
                        SID,
                        organizationId,
                        geozoneId,
                        geozoneName,
                        type,
                        geozoneType,
                        xmlGeozoneSet,
                        severityId,
                        description,
                        email,
                        phone,
                        timeZone,
                        dayLightSaving,
                        formatType,
                        notify,
                        warning,
                        critical,
                        autoAdjustDayLightSaving,
                        publicGeozone}, this.UpdateGeozoneOperationCompleted, userState);
        }
        
        private void OnUpdateGeozoneOperationCompleted(object arg) {
            if ((this.UpdateGeozoneCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateGeozoneCompleted(this, new UpdateGeozoneCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/IsGeozoneAssigned", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int IsGeozoneAssigned(int userId, string SID, int organizationId, short geozoneId, ref bool retResult) {
            object[] results = this.Invoke("IsGeozoneAssigned", new object[] {
                        userId,
                        SID,
                        organizationId,
                        geozoneId,
                        retResult});
            retResult = ((bool)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void IsGeozoneAssignedAsync(int userId, string SID, int organizationId, short geozoneId, bool retResult) {
            this.IsGeozoneAssignedAsync(userId, SID, organizationId, geozoneId, retResult, null);
        }
        
        /// <remarks/>
        public void IsGeozoneAssignedAsync(int userId, string SID, int organizationId, short geozoneId, bool retResult, object userState) {
            if ((this.IsGeozoneAssignedOperationCompleted == null)) {
                this.IsGeozoneAssignedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsGeozoneAssignedOperationCompleted);
            }
            this.InvokeAsync("IsGeozoneAssigned", new object[] {
                        userId,
                        SID,
                        organizationId,
                        geozoneId,
                        retResult}, this.IsGeozoneAssignedOperationCompleted, userState);
        }
        
        private void OnIsGeozoneAssignedOperationCompleted(object arg) {
            if ((this.IsGeozoneAssignedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsGeozoneAssignedCompleted(this, new IsGeozoneAssignedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/IsGeoZoneUpdatableByUser", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsGeoZoneUpdatableByUser(int userId, string SID, int organizationId, short geozoneId, ref bool retResult) {
            object[] results = this.Invoke("IsGeoZoneUpdatableByUser", new object[] {
                        userId,
                        SID,
                        organizationId,
                        geozoneId,
                        retResult});
            retResult = ((bool)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsGeoZoneUpdatableByUserAsync(int userId, string SID, int organizationId, short geozoneId, bool retResult) {
            this.IsGeoZoneUpdatableByUserAsync(userId, SID, organizationId, geozoneId, retResult, null);
        }
        
        /// <remarks/>
        public void IsGeoZoneUpdatableByUserAsync(int userId, string SID, int organizationId, short geozoneId, bool retResult, object userState) {
            if ((this.IsGeoZoneUpdatableByUserOperationCompleted == null)) {
                this.IsGeoZoneUpdatableByUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsGeoZoneUpdatableByUserOperationCompleted);
            }
            this.InvokeAsync("IsGeoZoneUpdatableByUser", new object[] {
                        userId,
                        SID,
                        organizationId,
                        geozoneId,
                        retResult}, this.IsGeoZoneUpdatableByUserOperationCompleted, userState);
        }
        
        private void OnIsGeoZoneUpdatableByUserOperationCompleted(object arg) {
            if ((this.IsGeoZoneUpdatableByUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsGeoZoneUpdatableByUserCompleted(this, new IsGeoZoneUpdatableByUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/IsLandmarkUpdatableByUser", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsLandmarkUpdatableByUser(int userId, string SID, int organizationId, long landmarkId, ref bool retResult) {
            object[] results = this.Invoke("IsLandmarkUpdatableByUser", new object[] {
                        userId,
                        SID,
                        organizationId,
                        landmarkId,
                        retResult});
            retResult = ((bool)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsLandmarkUpdatableByUserAsync(int userId, string SID, int organizationId, long landmarkId, bool retResult) {
            this.IsLandmarkUpdatableByUserAsync(userId, SID, organizationId, landmarkId, retResult, null);
        }
        
        /// <remarks/>
        public void IsLandmarkUpdatableByUserAsync(int userId, string SID, int organizationId, long landmarkId, bool retResult, object userState) {
            if ((this.IsLandmarkUpdatableByUserOperationCompleted == null)) {
                this.IsLandmarkUpdatableByUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsLandmarkUpdatableByUserOperationCompleted);
            }
            this.InvokeAsync("IsLandmarkUpdatableByUser", new object[] {
                        userId,
                        SID,
                        organizationId,
                        landmarkId,
                        retResult}, this.IsLandmarkUpdatableByUserOperationCompleted, userState);
        }
        
        private void OnIsLandmarkUpdatableByUserOperationCompleted(object arg) {
            if ((this.IsLandmarkUpdatableByUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsLandmarkUpdatableByUserCompleted(this, new IsLandmarkUpdatableByUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetGeozoneTypes", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetGeozoneTypes(int userId, string SID, ref string xml) {
            object[] results = this.Invoke("GetGeozoneTypes", new object[] {
                        userId,
                        SID,
                        xml});
            xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetGeozoneTypesAsync(int userId, string SID, string xml) {
            this.GetGeozoneTypesAsync(userId, SID, xml, null);
        }
        
        /// <remarks/>
        public void GetGeozoneTypesAsync(int userId, string SID, string xml, object userState) {
            if ((this.GetGeozoneTypesOperationCompleted == null)) {
                this.GetGeozoneTypesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetGeozoneTypesOperationCompleted);
            }
            this.InvokeAsync("GetGeozoneTypes", new object[] {
                        userId,
                        SID,
                        xml}, this.GetGeozoneTypesOperationCompleted, userState);
        }
        
        private void OnGetGeozoneTypesOperationCompleted(object arg) {
            if ((this.GetGeozoneTypesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetGeozoneTypesCompleted(this, new GetGeozoneTypesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetOrganizationGeozonesInfo", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetOrganizationGeozonesInfo(int userId, string SID, int organizationId, string geozonesList, ref string xml) {
            object[] results = this.Invoke("GetOrganizationGeozonesInfo", new object[] {
                        userId,
                        SID,
                        organizationId,
                        geozonesList,
                        xml});
            xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetOrganizationGeozonesInfoAsync(int userId, string SID, int organizationId, string geozonesList, string xml) {
            this.GetOrganizationGeozonesInfoAsync(userId, SID, organizationId, geozonesList, xml, null);
        }
        
        /// <remarks/>
        public void GetOrganizationGeozonesInfoAsync(int userId, string SID, int organizationId, string geozonesList, string xml, object userState) {
            if ((this.GetOrganizationGeozonesInfoOperationCompleted == null)) {
                this.GetOrganizationGeozonesInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOrganizationGeozonesInfoOperationCompleted);
            }
            this.InvokeAsync("GetOrganizationGeozonesInfo", new object[] {
                        userId,
                        SID,
                        organizationId,
                        geozonesList,
                        xml}, this.GetOrganizationGeozonesInfoOperationCompleted, userState);
        }
        
        private void OnGetOrganizationGeozonesInfoOperationCompleted(object arg) {
            if ((this.GetOrganizationGeozonesInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOrganizationGeozonesInfoCompleted(this, new GetOrganizationGeozonesInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetOrganizationGeozonesInfoByLang", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetOrganizationGeozonesInfoByLang(int userId, string SID, int organizationId, string geozonesList, string lang, ref string xml) {
            object[] results = this.Invoke("GetOrganizationGeozonesInfoByLang", new object[] {
                        userId,
                        SID,
                        organizationId,
                        geozonesList,
                        lang,
                        xml});
            xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetOrganizationGeozonesInfoByLangAsync(int userId, string SID, int organizationId, string geozonesList, string lang, string xml) {
            this.GetOrganizationGeozonesInfoByLangAsync(userId, SID, organizationId, geozonesList, lang, xml, null);
        }
        
        /// <remarks/>
        public void GetOrganizationGeozonesInfoByLangAsync(int userId, string SID, int organizationId, string geozonesList, string lang, string xml, object userState) {
            if ((this.GetOrganizationGeozonesInfoByLangOperationCompleted == null)) {
                this.GetOrganizationGeozonesInfoByLangOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOrganizationGeozonesInfoByLangOperationCompleted);
            }
            this.InvokeAsync("GetOrganizationGeozonesInfoByLang", new object[] {
                        userId,
                        SID,
                        organizationId,
                        geozonesList,
                        lang,
                        xml}, this.GetOrganizationGeozonesInfoByLangOperationCompleted, userState);
        }
        
        private void OnGetOrganizationGeozonesInfoByLangOperationCompleted(object arg) {
            if ((this.GetOrganizationGeozonesInfoByLangCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOrganizationGeozonesInfoByLangCompleted(this, new GetOrganizationGeozonesInfoByLangCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetOrganizationGeozoneInfo", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetOrganizationGeozoneInfo(int userId, string SID, int organizationId, short geozoneId, ref string xml) {
            object[] results = this.Invoke("GetOrganizationGeozoneInfo", new object[] {
                        userId,
                        SID,
                        organizationId,
                        geozoneId,
                        xml});
            xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetOrganizationGeozoneInfoAsync(int userId, string SID, int organizationId, short geozoneId, string xml) {
            this.GetOrganizationGeozoneInfoAsync(userId, SID, organizationId, geozoneId, xml, null);
        }
        
        /// <remarks/>
        public void GetOrganizationGeozoneInfoAsync(int userId, string SID, int organizationId, short geozoneId, string xml, object userState) {
            if ((this.GetOrganizationGeozoneInfoOperationCompleted == null)) {
                this.GetOrganizationGeozoneInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOrganizationGeozoneInfoOperationCompleted);
            }
            this.InvokeAsync("GetOrganizationGeozoneInfo", new object[] {
                        userId,
                        SID,
                        organizationId,
                        geozoneId,
                        xml}, this.GetOrganizationGeozoneInfoOperationCompleted, userState);
        }
        
        private void OnGetOrganizationGeozoneInfoOperationCompleted(object arg) {
            if ((this.GetOrganizationGeozoneInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOrganizationGeozoneInfoCompleted(this, new GetOrganizationGeozoneInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetAllAssignedVehiclesInfoToGeozone", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetAllAssignedVehiclesInfoToGeozone(int userId, string SID, int organizationId, short geozoneId, ref string xml) {
            object[] results = this.Invoke("GetAllAssignedVehiclesInfoToGeozone", new object[] {
                        userId,
                        SID,
                        organizationId,
                        geozoneId,
                        xml});
            xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllAssignedVehiclesInfoToGeozoneAsync(int userId, string SID, int organizationId, short geozoneId, string xml) {
            this.GetAllAssignedVehiclesInfoToGeozoneAsync(userId, SID, organizationId, geozoneId, xml, null);
        }
        
        /// <remarks/>
        public void GetAllAssignedVehiclesInfoToGeozoneAsync(int userId, string SID, int organizationId, short geozoneId, string xml, object userState) {
            if ((this.GetAllAssignedVehiclesInfoToGeozoneOperationCompleted == null)) {
                this.GetAllAssignedVehiclesInfoToGeozoneOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllAssignedVehiclesInfoToGeozoneOperationCompleted);
            }
            this.InvokeAsync("GetAllAssignedVehiclesInfoToGeozone", new object[] {
                        userId,
                        SID,
                        organizationId,
                        geozoneId,
                        xml}, this.GetAllAssignedVehiclesInfoToGeozoneOperationCompleted, userState);
        }
        
        private void OnGetAllAssignedVehiclesInfoToGeozoneOperationCompleted(object arg) {
            if ((this.GetAllAssignedVehiclesInfoToGeozoneCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllAssignedVehiclesInfoToGeozoneCompleted(this, new GetAllAssignedVehiclesInfoToGeozoneCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetAllUnasignedVehiclesInfoToGeozone", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetAllUnasignedVehiclesInfoToGeozone(int userId, string SID, int organizationId, short geozoneId, ref string xml) {
            object[] results = this.Invoke("GetAllUnasignedVehiclesInfoToGeozone", new object[] {
                        userId,
                        SID,
                        organizationId,
                        geozoneId,
                        xml});
            xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllUnasignedVehiclesInfoToGeozoneAsync(int userId, string SID, int organizationId, short geozoneId, string xml) {
            this.GetAllUnasignedVehiclesInfoToGeozoneAsync(userId, SID, organizationId, geozoneId, xml, null);
        }
        
        /// <remarks/>
        public void GetAllUnasignedVehiclesInfoToGeozoneAsync(int userId, string SID, int organizationId, short geozoneId, string xml, object userState) {
            if ((this.GetAllUnasignedVehiclesInfoToGeozoneOperationCompleted == null)) {
                this.GetAllUnasignedVehiclesInfoToGeozoneOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllUnasignedVehiclesInfoToGeozoneOperationCompleted);
            }
            this.InvokeAsync("GetAllUnasignedVehiclesInfoToGeozone", new object[] {
                        userId,
                        SID,
                        organizationId,
                        geozoneId,
                        xml}, this.GetAllUnasignedVehiclesInfoToGeozoneOperationCompleted, userState);
        }
        
        private void OnGetAllUnasignedVehiclesInfoToGeozoneOperationCompleted(object arg) {
            if ((this.GetAllUnasignedVehiclesInfoToGeozoneCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllUnasignedVehiclesInfoToGeozoneCompleted(this, new GetAllUnasignedVehiclesInfoToGeozoneCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/SetOrganizationGeozoneAutoAdjustDayLightSaving", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SetOrganizationGeozoneAutoAdjustDayLightSaving(int userId, string SID, int organizationId, short geozoneId, bool autoAdjustDayLightSaving, bool dayLightSaving) {
            object[] results = this.Invoke("SetOrganizationGeozoneAutoAdjustDayLightSaving", new object[] {
                        userId,
                        SID,
                        organizationId,
                        geozoneId,
                        autoAdjustDayLightSaving,
                        dayLightSaving});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SetOrganizationGeozoneAutoAdjustDayLightSavingAsync(int userId, string SID, int organizationId, short geozoneId, bool autoAdjustDayLightSaving, bool dayLightSaving) {
            this.SetOrganizationGeozoneAutoAdjustDayLightSavingAsync(userId, SID, organizationId, geozoneId, autoAdjustDayLightSaving, dayLightSaving, null);
        }
        
        /// <remarks/>
        public void SetOrganizationGeozoneAutoAdjustDayLightSavingAsync(int userId, string SID, int organizationId, short geozoneId, bool autoAdjustDayLightSaving, bool dayLightSaving, object userState) {
            if ((this.SetOrganizationGeozoneAutoAdjustDayLightSavingOperationCompleted == null)) {
                this.SetOrganizationGeozoneAutoAdjustDayLightSavingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetOrganizationGeozoneAutoAdjustDayLightSavingOperationCompleted);
            }
            this.InvokeAsync("SetOrganizationGeozoneAutoAdjustDayLightSaving", new object[] {
                        userId,
                        SID,
                        organizationId,
                        geozoneId,
                        autoAdjustDayLightSaving,
                        dayLightSaving}, this.SetOrganizationGeozoneAutoAdjustDayLightSavingOperationCompleted, userState);
        }
        
        private void OnSetOrganizationGeozoneAutoAdjustDayLightSavingOperationCompleted(object arg) {
            if ((this.SetOrganizationGeozoneAutoAdjustDayLightSavingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetOrganizationGeozoneAutoAdjustDayLightSavingCompleted(this, new SetOrganizationGeozoneAutoAdjustDayLightSavingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetOrganizationGeozones", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetOrganizationGeozones(int userId, string SID, int organizationId, ref string xml) {
            object[] results = this.Invoke("GetOrganizationGeozones", new object[] {
                        userId,
                        SID,
                        organizationId,
                        xml});
            xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetOrganizationGeozonesAsync(int userId, string SID, int organizationId, string xml) {
            this.GetOrganizationGeozonesAsync(userId, SID, organizationId, xml, null);
        }
        
        /// <remarks/>
        public void GetOrganizationGeozonesAsync(int userId, string SID, int organizationId, string xml, object userState) {
            if ((this.GetOrganizationGeozonesOperationCompleted == null)) {
                this.GetOrganizationGeozonesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOrganizationGeozonesOperationCompleted);
            }
            this.InvokeAsync("GetOrganizationGeozones", new object[] {
                        userId,
                        SID,
                        organizationId,
                        xml}, this.GetOrganizationGeozonesOperationCompleted, userState);
        }
        
        private void OnGetOrganizationGeozonesOperationCompleted(object arg) {
            if ((this.GetOrganizationGeozonesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOrganizationGeozonesCompleted(this, new GetOrganizationGeozonesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetOrganizationGeozonesWithStatus", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetOrganizationGeozonesWithStatus(int userId, string SID, int organizationId, ref string xml) {
            object[] results = this.Invoke("GetOrganizationGeozonesWithStatus", new object[] {
                        userId,
                        SID,
                        organizationId,
                        xml});
            xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetOrganizationGeozonesWithStatusAsync(int userId, string SID, int organizationId, string xml) {
            this.GetOrganizationGeozonesWithStatusAsync(userId, SID, organizationId, xml, null);
        }
        
        /// <remarks/>
        public void GetOrganizationGeozonesWithStatusAsync(int userId, string SID, int organizationId, string xml, object userState) {
            if ((this.GetOrganizationGeozonesWithStatusOperationCompleted == null)) {
                this.GetOrganizationGeozonesWithStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOrganizationGeozonesWithStatusOperationCompleted);
            }
            this.InvokeAsync("GetOrganizationGeozonesWithStatus", new object[] {
                        userId,
                        SID,
                        organizationId,
                        xml}, this.GetOrganizationGeozonesWithStatusOperationCompleted, userState);
        }
        
        private void OnGetOrganizationGeozonesWithStatusOperationCompleted(object arg) {
            if ((this.GetOrganizationGeozonesWithStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOrganizationGeozonesWithStatusCompleted(this, new GetOrganizationGeozonesWithStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetOrganizationUserLogins", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetOrganizationUserLogins(int userId, string SID, int organizationId, string from, string to, ref string xml) {
            object[] results = this.Invoke("GetOrganizationUserLogins", new object[] {
                        userId,
                        SID,
                        organizationId,
                        from,
                        to,
                        xml});
            xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetOrganizationUserLoginsAsync(int userId, string SID, int organizationId, string from, string to, string xml) {
            this.GetOrganizationUserLoginsAsync(userId, SID, organizationId, from, to, xml, null);
        }
        
        /// <remarks/>
        public void GetOrganizationUserLoginsAsync(int userId, string SID, int organizationId, string from, string to, string xml, object userState) {
            if ((this.GetOrganizationUserLoginsOperationCompleted == null)) {
                this.GetOrganizationUserLoginsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOrganizationUserLoginsOperationCompleted);
            }
            this.InvokeAsync("GetOrganizationUserLogins", new object[] {
                        userId,
                        SID,
                        organizationId,
                        from,
                        to,
                        xml}, this.GetOrganizationUserLoginsOperationCompleted, userState);
        }
        
        private void OnGetOrganizationUserLoginsOperationCompleted(object arg) {
            if ((this.GetOrganizationUserLoginsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOrganizationUserLoginsCompleted(this, new GetOrganizationUserLoginsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetVehiclesLastKnownPositionInfo", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetVehiclesLastKnownPositionInfo(int userId, string SID, int organizationId, string language, ref string xml) {
            object[] results = this.Invoke("GetVehiclesLastKnownPositionInfo", new object[] {
                        userId,
                        SID,
                        organizationId,
                        language,
                        xml});
            xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetVehiclesLastKnownPositionInfoAsync(int userId, string SID, int organizationId, string language, string xml) {
            this.GetVehiclesLastKnownPositionInfoAsync(userId, SID, organizationId, language, xml, null);
        }
        
        /// <remarks/>
        public void GetVehiclesLastKnownPositionInfoAsync(int userId, string SID, int organizationId, string language, string xml, object userState) {
            if ((this.GetVehiclesLastKnownPositionInfoOperationCompleted == null)) {
                this.GetVehiclesLastKnownPositionInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetVehiclesLastKnownPositionInfoOperationCompleted);
            }
            this.InvokeAsync("GetVehiclesLastKnownPositionInfo", new object[] {
                        userId,
                        SID,
                        organizationId,
                        language,
                        xml}, this.GetVehiclesLastKnownPositionInfoOperationCompleted, userState);
        }
        
        private void OnGetVehiclesLastKnownPositionInfoOperationCompleted(object arg) {
            if ((this.GetVehiclesLastKnownPositionInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetVehiclesLastKnownPositionInfoCompleted(this, new GetVehiclesLastKnownPositionInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetOrganizationAllActiveVehiclesXml", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetOrganizationAllActiveVehiclesXml(int userId, string SID, int organizationId, ref string xml) {
            object[] results = this.Invoke("GetOrganizationAllActiveVehiclesXml", new object[] {
                        userId,
                        SID,
                        organizationId,
                        xml});
            xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetOrganizationAllActiveVehiclesXmlAsync(int userId, string SID, int organizationId, string xml) {
            this.GetOrganizationAllActiveVehiclesXmlAsync(userId, SID, organizationId, xml, null);
        }
        
        /// <remarks/>
        public void GetOrganizationAllActiveVehiclesXmlAsync(int userId, string SID, int organizationId, string xml, object userState) {
            if ((this.GetOrganizationAllActiveVehiclesXmlOperationCompleted == null)) {
                this.GetOrganizationAllActiveVehiclesXmlOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOrganizationAllActiveVehiclesXmlOperationCompleted);
            }
            this.InvokeAsync("GetOrganizationAllActiveVehiclesXml", new object[] {
                        userId,
                        SID,
                        organizationId,
                        xml}, this.GetOrganizationAllActiveVehiclesXmlOperationCompleted, userState);
        }
        
        private void OnGetOrganizationAllActiveVehiclesXmlOperationCompleted(object arg) {
            if ((this.GetOrganizationAllActiveVehiclesXmlCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOrganizationAllActiveVehiclesXmlCompleted(this, new GetOrganizationAllActiveVehiclesXmlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetOrganizationAllActiveVehiclesXmlByLang", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetOrganizationAllActiveVehiclesXmlByLang(int userId, string SID, int organizationId, string lang, ref string xml) {
            object[] results = this.Invoke("GetOrganizationAllActiveVehiclesXmlByLang", new object[] {
                        userId,
                        SID,
                        organizationId,
                        lang,
                        xml});
            xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetOrganizationAllActiveVehiclesXmlByLangAsync(int userId, string SID, int organizationId, string lang, string xml) {
            this.GetOrganizationAllActiveVehiclesXmlByLangAsync(userId, SID, organizationId, lang, xml, null);
        }
        
        /// <remarks/>
        public void GetOrganizationAllActiveVehiclesXmlByLangAsync(int userId, string SID, int organizationId, string lang, string xml, object userState) {
            if ((this.GetOrganizationAllActiveVehiclesXmlByLangOperationCompleted == null)) {
                this.GetOrganizationAllActiveVehiclesXmlByLangOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOrganizationAllActiveVehiclesXmlByLangOperationCompleted);
            }
            this.InvokeAsync("GetOrganizationAllActiveVehiclesXmlByLang", new object[] {
                        userId,
                        SID,
                        organizationId,
                        lang,
                        xml}, this.GetOrganizationAllActiveVehiclesXmlByLangOperationCompleted, userState);
        }
        
        private void OnGetOrganizationAllActiveVehiclesXmlByLangOperationCompleted(object arg) {
            if ((this.GetOrganizationAllActiveVehiclesXmlByLangCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOrganizationAllActiveVehiclesXmlByLangCompleted(this, new GetOrganizationAllActiveVehiclesXmlByLangCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetOrganizationAllActiveVehiclesCfgInfo", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetOrganizationAllActiveVehiclesCfgInfo(int userId, string SID, int organizationId, ref string xml) {
            object[] results = this.Invoke("GetOrganizationAllActiveVehiclesCfgInfo", new object[] {
                        userId,
                        SID,
                        organizationId,
                        xml});
            xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetOrganizationAllActiveVehiclesCfgInfoAsync(int userId, string SID, int organizationId, string xml) {
            this.GetOrganizationAllActiveVehiclesCfgInfoAsync(userId, SID, organizationId, xml, null);
        }
        
        /// <remarks/>
        public void GetOrganizationAllActiveVehiclesCfgInfoAsync(int userId, string SID, int organizationId, string xml, object userState) {
            if ((this.GetOrganizationAllActiveVehiclesCfgInfoOperationCompleted == null)) {
                this.GetOrganizationAllActiveVehiclesCfgInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOrganizationAllActiveVehiclesCfgInfoOperationCompleted);
            }
            this.InvokeAsync("GetOrganizationAllActiveVehiclesCfgInfo", new object[] {
                        userId,
                        SID,
                        organizationId,
                        xml}, this.GetOrganizationAllActiveVehiclesCfgInfoOperationCompleted, userState);
        }
        
        private void OnGetOrganizationAllActiveVehiclesCfgInfoOperationCompleted(object arg) {
            if ((this.GetOrganizationAllActiveVehiclesCfgInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOrganizationAllActiveVehiclesCfgInfoCompleted(this, new GetOrganizationAllActiveVehiclesCfgInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetOrganizationAllUnassignedBoxIdsXml", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetOrganizationAllUnassignedBoxIdsXml(int userId, string SID, int organizationId, ref string xml) {
            object[] results = this.Invoke("GetOrganizationAllUnassignedBoxIdsXml", new object[] {
                        userId,
                        SID,
                        organizationId,
                        xml});
            xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetOrganizationAllUnassignedBoxIdsXmlAsync(int userId, string SID, int organizationId, string xml) {
            this.GetOrganizationAllUnassignedBoxIdsXmlAsync(userId, SID, organizationId, xml, null);
        }
        
        /// <remarks/>
        public void GetOrganizationAllUnassignedBoxIdsXmlAsync(int userId, string SID, int organizationId, string xml, object userState) {
            if ((this.GetOrganizationAllUnassignedBoxIdsXmlOperationCompleted == null)) {
                this.GetOrganizationAllUnassignedBoxIdsXmlOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOrganizationAllUnassignedBoxIdsXmlOperationCompleted);
            }
            this.InvokeAsync("GetOrganizationAllUnassignedBoxIdsXml", new object[] {
                        userId,
                        SID,
                        organizationId,
                        xml}, this.GetOrganizationAllUnassignedBoxIdsXmlOperationCompleted, userState);
        }
        
        private void OnGetOrganizationAllUnassignedBoxIdsXmlOperationCompleted(object arg) {
            if ((this.GetOrganizationAllUnassignedBoxIdsXmlCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOrganizationAllUnassignedBoxIdsXmlCompleted(this, new GetOrganizationAllUnassignedBoxIdsXmlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetUsersInfoByOrganization", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetUsersInfoByOrganization(int userId, string SID, int organizationId, ref string xml) {
            object[] results = this.Invoke("GetUsersInfoByOrganization", new object[] {
                        userId,
                        SID,
                        organizationId,
                        xml});
            xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetUsersInfoByOrganizationAsync(int userId, string SID, int organizationId, string xml) {
            this.GetUsersInfoByOrganizationAsync(userId, SID, organizationId, xml, null);
        }
        
        /// <remarks/>
        public void GetUsersInfoByOrganizationAsync(int userId, string SID, int organizationId, string xml, object userState) {
            if ((this.GetUsersInfoByOrganizationOperationCompleted == null)) {
                this.GetUsersInfoByOrganizationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUsersInfoByOrganizationOperationCompleted);
            }
            this.InvokeAsync("GetUsersInfoByOrganization", new object[] {
                        userId,
                        SID,
                        organizationId,
                        xml}, this.GetUsersInfoByOrganizationOperationCompleted, userState);
        }
        
        private void OnGetUsersInfoByOrganizationOperationCompleted(object arg) {
            if ((this.GetUsersInfoByOrganizationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUsersInfoByOrganizationCompleted(this, new GetUsersInfoByOrganizationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetUsersInfoByOrganizationByLang", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetUsersInfoByOrganizationByLang(int userId, string SID, int organizationId, string lang, ref string xml) {
            object[] results = this.Invoke("GetUsersInfoByOrganizationByLang", new object[] {
                        userId,
                        SID,
                        organizationId,
                        lang,
                        xml});
            xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetUsersInfoByOrganizationByLangAsync(int userId, string SID, int organizationId, string lang, string xml) {
            this.GetUsersInfoByOrganizationByLangAsync(userId, SID, organizationId, lang, xml, null);
        }
        
        /// <remarks/>
        public void GetUsersInfoByOrganizationByLangAsync(int userId, string SID, int organizationId, string lang, string xml, object userState) {
            if ((this.GetUsersInfoByOrganizationByLangOperationCompleted == null)) {
                this.GetUsersInfoByOrganizationByLangOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUsersInfoByOrganizationByLangOperationCompleted);
            }
            this.InvokeAsync("GetUsersInfoByOrganizationByLang", new object[] {
                        userId,
                        SID,
                        organizationId,
                        lang,
                        xml}, this.GetUsersInfoByOrganizationByLangOperationCompleted, userState);
        }
        
        private void OnGetUsersInfoByOrganizationByLangOperationCompleted(object arg) {
            if ((this.GetUsersInfoByOrganizationByLangCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUsersInfoByOrganizationByLangCompleted(this, new GetUsersInfoByOrganizationByLangCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetDclCommInfo", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetDclCommInfo(int userId, string SID, int orgId, string vehDesc, ref int boxId, ref short dclId) {
            object[] results = this.Invoke("GetDclCommInfo", new object[] {
                        userId,
                        SID,
                        orgId,
                        vehDesc,
                        boxId,
                        dclId});
            boxId = ((int)(results[1]));
            dclId = ((short)(results[2]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetDclCommInfoAsync(int userId, string SID, int orgId, string vehDesc, int boxId, short dclId) {
            this.GetDclCommInfoAsync(userId, SID, orgId, vehDesc, boxId, dclId, null);
        }
        
        /// <remarks/>
        public void GetDclCommInfoAsync(int userId, string SID, int orgId, string vehDesc, int boxId, short dclId, object userState) {
            if ((this.GetDclCommInfoOperationCompleted == null)) {
                this.GetDclCommInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDclCommInfoOperationCompleted);
            }
            this.InvokeAsync("GetDclCommInfo", new object[] {
                        userId,
                        SID,
                        orgId,
                        vehDesc,
                        boxId,
                        dclId}, this.GetDclCommInfoOperationCompleted, userState);
        }
        
        private void OnGetDclCommInfoOperationCompleted(object arg) {
            if ((this.GetDclCommInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDclCommInfoCompleted(this, new GetDclCommInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetOrganizationPreferences", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetOrganizationPreferences(int userId, string SID, int organizationId, ref string xmlString) {
            object[] results = this.Invoke("GetOrganizationPreferences", new object[] {
                        userId,
                        SID,
                        organizationId,
                        xmlString});
            xmlString = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetOrganizationPreferencesAsync(int userId, string SID, int organizationId, string xmlString) {
            this.GetOrganizationPreferencesAsync(userId, SID, organizationId, xmlString, null);
        }
        
        /// <remarks/>
        public void GetOrganizationPreferencesAsync(int userId, string SID, int organizationId, string xmlString, object userState) {
            if ((this.GetOrganizationPreferencesOperationCompleted == null)) {
                this.GetOrganizationPreferencesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOrganizationPreferencesOperationCompleted);
            }
            this.InvokeAsync("GetOrganizationPreferences", new object[] {
                        userId,
                        SID,
                        organizationId,
                        xmlString}, this.GetOrganizationPreferencesOperationCompleted, userState);
        }
        
        private void OnGetOrganizationPreferencesOperationCompleted(object arg) {
            if ((this.GetOrganizationPreferencesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOrganizationPreferencesCompleted(this, new GetOrganizationPreferencesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/UpdateOrganizationPreferences", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateOrganizationPreferences(int userId, string SID, int organizationId, string NotificationEmailAddress, int RadiusForGPS, int MaximumReportingInterval, int HistoryTimeRange, int WaitingPeriodToGetMessages, int Timezone) {
            object[] results = this.Invoke("UpdateOrganizationPreferences", new object[] {
                        userId,
                        SID,
                        organizationId,
                        NotificationEmailAddress,
                        RadiusForGPS,
                        MaximumReportingInterval,
                        HistoryTimeRange,
                        WaitingPeriodToGetMessages,
                        Timezone});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateOrganizationPreferencesAsync(int userId, string SID, int organizationId, string NotificationEmailAddress, int RadiusForGPS, int MaximumReportingInterval, int HistoryTimeRange, int WaitingPeriodToGetMessages, int Timezone) {
            this.UpdateOrganizationPreferencesAsync(userId, SID, organizationId, NotificationEmailAddress, RadiusForGPS, MaximumReportingInterval, HistoryTimeRange, WaitingPeriodToGetMessages, Timezone, null);
        }
        
        /// <remarks/>
        public void UpdateOrganizationPreferencesAsync(int userId, string SID, int organizationId, string NotificationEmailAddress, int RadiusForGPS, int MaximumReportingInterval, int HistoryTimeRange, int WaitingPeriodToGetMessages, int Timezone, object userState) {
            if ((this.UpdateOrganizationPreferencesOperationCompleted == null)) {
                this.UpdateOrganizationPreferencesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateOrganizationPreferencesOperationCompleted);
            }
            this.InvokeAsync("UpdateOrganizationPreferences", new object[] {
                        userId,
                        SID,
                        organizationId,
                        NotificationEmailAddress,
                        RadiusForGPS,
                        MaximumReportingInterval,
                        HistoryTimeRange,
                        WaitingPeriodToGetMessages,
                        Timezone}, this.UpdateOrganizationPreferencesOperationCompleted, userState);
        }
        
        private void OnUpdateOrganizationPreferencesOperationCompleted(object arg) {
            if ((this.UpdateOrganizationPreferencesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateOrganizationPreferencesCompleted(this, new UpdateOrganizationPreferencesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetOrganizationSettings", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetOrganizationSettings(int userId, string SID, int organizationId, ref string xmlString) {
            object[] results = this.Invoke("GetOrganizationSettings", new object[] {
                        userId,
                        SID,
                        organizationId,
                        xmlString});
            xmlString = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetOrganizationSettingsAsync(int userId, string SID, int organizationId, string xmlString) {
            this.GetOrganizationSettingsAsync(userId, SID, organizationId, xmlString, null);
        }
        
        /// <remarks/>
        public void GetOrganizationSettingsAsync(int userId, string SID, int organizationId, string xmlString, object userState) {
            if ((this.GetOrganizationSettingsOperationCompleted == null)) {
                this.GetOrganizationSettingsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOrganizationSettingsOperationCompleted);
            }
            this.InvokeAsync("GetOrganizationSettings", new object[] {
                        userId,
                        SID,
                        organizationId,
                        xmlString}, this.GetOrganizationSettingsOperationCompleted, userState);
        }
        
        private void OnGetOrganizationSettingsOperationCompleted(object arg) {
            if ((this.GetOrganizationSettingsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOrganizationSettingsCompleted(this, new GetOrganizationSettingsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/UpdateOrganizationSettings", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateOrganizationSettings(int userId, string SID, int organizationId, int preferenceId, string preferenceValue) {
            object[] results = this.Invoke("UpdateOrganizationSettings", new object[] {
                        userId,
                        SID,
                        organizationId,
                        preferenceId,
                        preferenceValue});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateOrganizationSettingsAsync(int userId, string SID, int organizationId, int preferenceId, string preferenceValue) {
            this.UpdateOrganizationSettingsAsync(userId, SID, organizationId, preferenceId, preferenceValue, null);
        }
        
        /// <remarks/>
        public void UpdateOrganizationSettingsAsync(int userId, string SID, int organizationId, int preferenceId, string preferenceValue, object userState) {
            if ((this.UpdateOrganizationSettingsOperationCompleted == null)) {
                this.UpdateOrganizationSettingsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateOrganizationSettingsOperationCompleted);
            }
            this.InvokeAsync("UpdateOrganizationSettings", new object[] {
                        userId,
                        SID,
                        organizationId,
                        preferenceId,
                        preferenceValue}, this.UpdateOrganizationSettingsOperationCompleted, userState);
        }
        
        private void OnUpdateOrganizationSettingsOperationCompleted(object arg) {
            if ((this.UpdateOrganizationSettingsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateOrganizationSettingsCompleted(this, new UpdateOrganizationSettingsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/DeleteOrganizationSettings", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int DeleteOrganizationSettings(int userId, string SID, int organizationId) {
            object[] results = this.Invoke("DeleteOrganizationSettings", new object[] {
                        userId,
                        SID,
                        organizationId});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteOrganizationSettingsAsync(int userId, string SID, int organizationId) {
            this.DeleteOrganizationSettingsAsync(userId, SID, organizationId, null);
        }
        
        /// <remarks/>
        public void DeleteOrganizationSettingsAsync(int userId, string SID, int organizationId, object userState) {
            if ((this.DeleteOrganizationSettingsOperationCompleted == null)) {
                this.DeleteOrganizationSettingsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteOrganizationSettingsOperationCompleted);
            }
            this.InvokeAsync("DeleteOrganizationSettings", new object[] {
                        userId,
                        SID,
                        organizationId}, this.DeleteOrganizationSettingsOperationCompleted, userState);
        }
        
        private void OnDeleteOrganizationSettingsOperationCompleted(object arg) {
            if ((this.DeleteOrganizationSettingsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteOrganizationSettingsCompleted(this, new DeleteOrganizationSettingsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetAllAssignedBoxesByOrganization", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetAllAssignedBoxesByOrganization(int userId, string SID, int organizationId, ref string xml) {
            object[] results = this.Invoke("GetAllAssignedBoxesByOrganization", new object[] {
                        userId,
                        SID,
                        organizationId,
                        xml});
            xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllAssignedBoxesByOrganizationAsync(int userId, string SID, int organizationId, string xml) {
            this.GetAllAssignedBoxesByOrganizationAsync(userId, SID, organizationId, xml, null);
        }
        
        /// <remarks/>
        public void GetAllAssignedBoxesByOrganizationAsync(int userId, string SID, int organizationId, string xml, object userState) {
            if ((this.GetAllAssignedBoxesByOrganizationOperationCompleted == null)) {
                this.GetAllAssignedBoxesByOrganizationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllAssignedBoxesByOrganizationOperationCompleted);
            }
            this.InvokeAsync("GetAllAssignedBoxesByOrganization", new object[] {
                        userId,
                        SID,
                        organizationId,
                        xml}, this.GetAllAssignedBoxesByOrganizationOperationCompleted, userState);
        }
        
        private void OnGetAllAssignedBoxesByOrganizationOperationCompleted(object arg) {
            if ((this.GetAllAssignedBoxesByOrganizationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllAssignedBoxesByOrganizationCompleted(this, new GetAllAssignedBoxesByOrganizationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetAllUnassignedBoxesByOrganization", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetAllUnassignedBoxesByOrganization(int userId, string SID, int organizationId, ref string xml) {
            object[] results = this.Invoke("GetAllUnassignedBoxesByOrganization", new object[] {
                        userId,
                        SID,
                        organizationId,
                        xml});
            xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllUnassignedBoxesByOrganizationAsync(int userId, string SID, int organizationId, string xml) {
            this.GetAllUnassignedBoxesByOrganizationAsync(userId, SID, organizationId, xml, null);
        }
        
        /// <remarks/>
        public void GetAllUnassignedBoxesByOrganizationAsync(int userId, string SID, int organizationId, string xml, object userState) {
            if ((this.GetAllUnassignedBoxesByOrganizationOperationCompleted == null)) {
                this.GetAllUnassignedBoxesByOrganizationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllUnassignedBoxesByOrganizationOperationCompleted);
            }
            this.InvokeAsync("GetAllUnassignedBoxesByOrganization", new object[] {
                        userId,
                        SID,
                        organizationId,
                        xml}, this.GetAllUnassignedBoxesByOrganizationOperationCompleted, userState);
        }
        
        private void OnGetAllUnassignedBoxesByOrganizationOperationCompleted(object arg) {
            if ((this.GetAllUnassignedBoxesByOrganizationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllUnassignedBoxesByOrganizationCompleted(this, new GetAllUnassignedBoxesByOrganizationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/AddProduct", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AddProduct(int userId, string SID, int organizationId, string productName, float upper, float lower) {
            object[] results = this.Invoke("AddProduct", new object[] {
                        userId,
                        SID,
                        organizationId,
                        productName,
                        upper,
                        lower});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AddProductAsync(int userId, string SID, int organizationId, string productName, float upper, float lower) {
            this.AddProductAsync(userId, SID, organizationId, productName, upper, lower, null);
        }
        
        /// <remarks/>
        public void AddProductAsync(int userId, string SID, int organizationId, string productName, float upper, float lower, object userState) {
            if ((this.AddProductOperationCompleted == null)) {
                this.AddProductOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddProductOperationCompleted);
            }
            this.InvokeAsync("AddProduct", new object[] {
                        userId,
                        SID,
                        organizationId,
                        productName,
                        upper,
                        lower}, this.AddProductOperationCompleted, userState);
        }
        
        private void OnAddProductOperationCompleted(object arg) {
            if ((this.AddProductCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddProductCompleted(this, new AddProductCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/UpdateProductById", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateProductById(int userId, string SID, int organizationId, int productId, string productName, float upper, float lower) {
            object[] results = this.Invoke("UpdateProductById", new object[] {
                        userId,
                        SID,
                        organizationId,
                        productId,
                        productName,
                        upper,
                        lower});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateProductByIdAsync(int userId, string SID, int organizationId, int productId, string productName, float upper, float lower) {
            this.UpdateProductByIdAsync(userId, SID, organizationId, productId, productName, upper, lower, null);
        }
        
        /// <remarks/>
        public void UpdateProductByIdAsync(int userId, string SID, int organizationId, int productId, string productName, float upper, float lower, object userState) {
            if ((this.UpdateProductByIdOperationCompleted == null)) {
                this.UpdateProductByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateProductByIdOperationCompleted);
            }
            this.InvokeAsync("UpdateProductById", new object[] {
                        userId,
                        SID,
                        organizationId,
                        productId,
                        productName,
                        upper,
                        lower}, this.UpdateProductByIdOperationCompleted, userState);
        }
        
        private void OnUpdateProductByIdOperationCompleted(object arg) {
            if ((this.UpdateProductByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateProductByIdCompleted(this, new UpdateProductByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/UpdateProductByName", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateProductByName(int userId, string SID, int organizationId, string productName, string newName, float upper, float lower) {
            object[] results = this.Invoke("UpdateProductByName", new object[] {
                        userId,
                        SID,
                        organizationId,
                        productName,
                        newName,
                        upper,
                        lower});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateProductByNameAsync(int userId, string SID, int organizationId, string productName, string newName, float upper, float lower) {
            this.UpdateProductByNameAsync(userId, SID, organizationId, productName, newName, upper, lower, null);
        }
        
        /// <remarks/>
        public void UpdateProductByNameAsync(int userId, string SID, int organizationId, string productName, string newName, float upper, float lower, object userState) {
            if ((this.UpdateProductByNameOperationCompleted == null)) {
                this.UpdateProductByNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateProductByNameOperationCompleted);
            }
            this.InvokeAsync("UpdateProductByName", new object[] {
                        userId,
                        SID,
                        organizationId,
                        productName,
                        newName,
                        upper,
                        lower}, this.UpdateProductByNameOperationCompleted, userState);
        }
        
        private void OnUpdateProductByNameOperationCompleted(object arg) {
            if ((this.UpdateProductByNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateProductByNameCompleted(this, new UpdateProductByNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/DeleteOrganizationProduct", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int DeleteOrganizationProduct(int userId, string SID, int organizationId, int productId) {
            object[] results = this.Invoke("DeleteOrganizationProduct", new object[] {
                        userId,
                        SID,
                        organizationId,
                        productId});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteOrganizationProductAsync(int userId, string SID, int organizationId, int productId) {
            this.DeleteOrganizationProductAsync(userId, SID, organizationId, productId, null);
        }
        
        /// <remarks/>
        public void DeleteOrganizationProductAsync(int userId, string SID, int organizationId, int productId, object userState) {
            if ((this.DeleteOrganizationProductOperationCompleted == null)) {
                this.DeleteOrganizationProductOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteOrganizationProductOperationCompleted);
            }
            this.InvokeAsync("DeleteOrganizationProduct", new object[] {
                        userId,
                        SID,
                        organizationId,
                        productId}, this.DeleteOrganizationProductOperationCompleted, userState);
        }
        
        private void OnDeleteOrganizationProductOperationCompleted(object arg) {
            if ((this.DeleteOrganizationProductCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteOrganizationProductCompleted(this, new DeleteOrganizationProductCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/DeleteOrganizationAllProducts", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int DeleteOrganizationAllProducts(int userId, string SID, int organizationId) {
            object[] results = this.Invoke("DeleteOrganizationAllProducts", new object[] {
                        userId,
                        SID,
                        organizationId});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteOrganizationAllProductsAsync(int userId, string SID, int organizationId) {
            this.DeleteOrganizationAllProductsAsync(userId, SID, organizationId, null);
        }
        
        /// <remarks/>
        public void DeleteOrganizationAllProductsAsync(int userId, string SID, int organizationId, object userState) {
            if ((this.DeleteOrganizationAllProductsOperationCompleted == null)) {
                this.DeleteOrganizationAllProductsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteOrganizationAllProductsOperationCompleted);
            }
            this.InvokeAsync("DeleteOrganizationAllProducts", new object[] {
                        userId,
                        SID,
                        organizationId}, this.DeleteOrganizationAllProductsOperationCompleted, userState);
        }
        
        private void OnDeleteOrganizationAllProductsOperationCompleted(object arg) {
            if ((this.DeleteOrganizationAllProductsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteOrganizationAllProductsCompleted(this, new DeleteOrganizationAllProductsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetOrganizationProductById", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetOrganizationProductById(int userId, string SID, int organizationId, int productId, ref string xml) {
            object[] results = this.Invoke("GetOrganizationProductById", new object[] {
                        userId,
                        SID,
                        organizationId,
                        productId,
                        xml});
            xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetOrganizationProductByIdAsync(int userId, string SID, int organizationId, int productId, string xml) {
            this.GetOrganizationProductByIdAsync(userId, SID, organizationId, productId, xml, null);
        }
        
        /// <remarks/>
        public void GetOrganizationProductByIdAsync(int userId, string SID, int organizationId, int productId, string xml, object userState) {
            if ((this.GetOrganizationProductByIdOperationCompleted == null)) {
                this.GetOrganizationProductByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOrganizationProductByIdOperationCompleted);
            }
            this.InvokeAsync("GetOrganizationProductById", new object[] {
                        userId,
                        SID,
                        organizationId,
                        productId,
                        xml}, this.GetOrganizationProductByIdOperationCompleted, userState);
        }
        
        private void OnGetOrganizationProductByIdOperationCompleted(object arg) {
            if ((this.GetOrganizationProductByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOrganizationProductByIdCompleted(this, new GetOrganizationProductByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetOrganizationProductByName", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetOrganizationProductByName(int userId, string SID, int organizationId, string productName, ref string xml) {
            object[] results = this.Invoke("GetOrganizationProductByName", new object[] {
                        userId,
                        SID,
                        organizationId,
                        productName,
                        xml});
            xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetOrganizationProductByNameAsync(int userId, string SID, int organizationId, string productName, string xml) {
            this.GetOrganizationProductByNameAsync(userId, SID, organizationId, productName, xml, null);
        }
        
        /// <remarks/>
        public void GetOrganizationProductByNameAsync(int userId, string SID, int organizationId, string productName, string xml, object userState) {
            if ((this.GetOrganizationProductByNameOperationCompleted == null)) {
                this.GetOrganizationProductByNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOrganizationProductByNameOperationCompleted);
            }
            this.InvokeAsync("GetOrganizationProductByName", new object[] {
                        userId,
                        SID,
                        organizationId,
                        productName,
                        xml}, this.GetOrganizationProductByNameOperationCompleted, userState);
        }
        
        private void OnGetOrganizationProductByNameOperationCompleted(object arg) {
            if ((this.GetOrganizationProductByNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOrganizationProductByNameCompleted(this, new GetOrganizationProductByNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetOrganizationAllProducts", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetOrganizationAllProducts(int userId, string SID, int organizationId, ref string xml) {
            object[] results = this.Invoke("GetOrganizationAllProducts", new object[] {
                        userId,
                        SID,
                        organizationId,
                        xml});
            xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetOrganizationAllProductsAsync(int userId, string SID, int organizationId, string xml) {
            this.GetOrganizationAllProductsAsync(userId, SID, organizationId, xml, null);
        }
        
        /// <remarks/>
        public void GetOrganizationAllProductsAsync(int userId, string SID, int organizationId, string xml, object userState) {
            if ((this.GetOrganizationAllProductsOperationCompleted == null)) {
                this.GetOrganizationAllProductsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOrganizationAllProductsOperationCompleted);
            }
            this.InvokeAsync("GetOrganizationAllProducts", new object[] {
                        userId,
                        SID,
                        organizationId,
                        xml}, this.GetOrganizationAllProductsOperationCompleted, userState);
        }
        
        private void OnGetOrganizationAllProductsOperationCompleted(object arg) {
            if ((this.GetOrganizationAllProductsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOrganizationAllProductsCompleted(this, new GetOrganizationAllProductsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/VehicleService_Add", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int VehicleService_Add(int userId, string SID, int organizationId, short operationType, string description, string code) {
            object[] results = this.Invoke("VehicleService_Add", new object[] {
                        userId,
                        SID,
                        organizationId,
                        operationType,
                        description,
                        code});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void VehicleService_AddAsync(int userId, string SID, int organizationId, short operationType, string description, string code) {
            this.VehicleService_AddAsync(userId, SID, organizationId, operationType, description, code, null);
        }
        
        /// <remarks/>
        public void VehicleService_AddAsync(int userId, string SID, int organizationId, short operationType, string description, string code, object userState) {
            if ((this.VehicleService_AddOperationCompleted == null)) {
                this.VehicleService_AddOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVehicleService_AddOperationCompleted);
            }
            this.InvokeAsync("VehicleService_Add", new object[] {
                        userId,
                        SID,
                        organizationId,
                        operationType,
                        description,
                        code}, this.VehicleService_AddOperationCompleted, userState);
        }
        
        private void OnVehicleService_AddOperationCompleted(object arg) {
            if ((this.VehicleService_AddCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VehicleService_AddCompleted(this, new VehicleService_AddCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/VehicleService_Update", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int VehicleService_Update(int userId, string SID, int organizationId, int serviceId, short operationType, string description, string code) {
            object[] results = this.Invoke("VehicleService_Update", new object[] {
                        userId,
                        SID,
                        organizationId,
                        serviceId,
                        operationType,
                        description,
                        code});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void VehicleService_UpdateAsync(int userId, string SID, int organizationId, int serviceId, short operationType, string description, string code) {
            this.VehicleService_UpdateAsync(userId, SID, organizationId, serviceId, operationType, description, code, null);
        }
        
        /// <remarks/>
        public void VehicleService_UpdateAsync(int userId, string SID, int organizationId, int serviceId, short operationType, string description, string code, object userState) {
            if ((this.VehicleService_UpdateOperationCompleted == null)) {
                this.VehicleService_UpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVehicleService_UpdateOperationCompleted);
            }
            this.InvokeAsync("VehicleService_Update", new object[] {
                        userId,
                        SID,
                        organizationId,
                        serviceId,
                        operationType,
                        description,
                        code}, this.VehicleService_UpdateOperationCompleted, userState);
        }
        
        private void OnVehicleService_UpdateOperationCompleted(object arg) {
            if ((this.VehicleService_UpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VehicleService_UpdateCompleted(this, new VehicleService_UpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/VehicleService_Delete", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int VehicleService_Delete(int userId, string SID, int organizationId, int serviceId) {
            object[] results = this.Invoke("VehicleService_Delete", new object[] {
                        userId,
                        SID,
                        organizationId,
                        serviceId});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void VehicleService_DeleteAsync(int userId, string SID, int organizationId, int serviceId) {
            this.VehicleService_DeleteAsync(userId, SID, organizationId, serviceId, null);
        }
        
        /// <remarks/>
        public void VehicleService_DeleteAsync(int userId, string SID, int organizationId, int serviceId, object userState) {
            if ((this.VehicleService_DeleteOperationCompleted == null)) {
                this.VehicleService_DeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVehicleService_DeleteOperationCompleted);
            }
            this.InvokeAsync("VehicleService_Delete", new object[] {
                        userId,
                        SID,
                        organizationId,
                        serviceId}, this.VehicleService_DeleteOperationCompleted, userState);
        }
        
        private void OnVehicleService_DeleteOperationCompleted(object arg) {
            if ((this.VehicleService_DeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VehicleService_DeleteCompleted(this, new VehicleService_DeleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/VehicleService_Get", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int VehicleService_Get(int userId, string SID, int organizationId, int serviceId, ref string xmlString) {
            object[] results = this.Invoke("VehicleService_Get", new object[] {
                        userId,
                        SID,
                        organizationId,
                        serviceId,
                        xmlString});
            xmlString = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void VehicleService_GetAsync(int userId, string SID, int organizationId, int serviceId, string xmlString) {
            this.VehicleService_GetAsync(userId, SID, organizationId, serviceId, xmlString, null);
        }
        
        /// <remarks/>
        public void VehicleService_GetAsync(int userId, string SID, int organizationId, int serviceId, string xmlString, object userState) {
            if ((this.VehicleService_GetOperationCompleted == null)) {
                this.VehicleService_GetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVehicleService_GetOperationCompleted);
            }
            this.InvokeAsync("VehicleService_Get", new object[] {
                        userId,
                        SID,
                        organizationId,
                        serviceId,
                        xmlString}, this.VehicleService_GetOperationCompleted, userState);
        }
        
        private void OnVehicleService_GetOperationCompleted(object arg) {
            if ((this.VehicleService_GetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VehicleService_GetCompleted(this, new VehicleService_GetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/VehicleService_GetAll", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int VehicleService_GetAll(int userId, string SID, int organizationId, ref string xmlString) {
            object[] results = this.Invoke("VehicleService_GetAll", new object[] {
                        userId,
                        SID,
                        organizationId,
                        xmlString});
            xmlString = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void VehicleService_GetAllAsync(int userId, string SID, int organizationId, string xmlString) {
            this.VehicleService_GetAllAsync(userId, SID, organizationId, xmlString, null);
        }
        
        /// <remarks/>
        public void VehicleService_GetAllAsync(int userId, string SID, int organizationId, string xmlString, object userState) {
            if ((this.VehicleService_GetAllOperationCompleted == null)) {
                this.VehicleService_GetAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVehicleService_GetAllOperationCompleted);
            }
            this.InvokeAsync("VehicleService_GetAll", new object[] {
                        userId,
                        SID,
                        organizationId,
                        xmlString}, this.VehicleService_GetAllOperationCompleted, userState);
        }
        
        private void OnVehicleService_GetAllOperationCompleted(object arg) {
            if ((this.VehicleService_GetAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VehicleService_GetAllCompleted(this, new VehicleService_GetAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/VehicleService_GetAllByLang", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int VehicleService_GetAllByLang(int userId, string SID, int organizationId, string lang, ref string xmlString) {
            object[] results = this.Invoke("VehicleService_GetAllByLang", new object[] {
                        userId,
                        SID,
                        organizationId,
                        lang,
                        xmlString});
            xmlString = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void VehicleService_GetAllByLangAsync(int userId, string SID, int organizationId, string lang, string xmlString) {
            this.VehicleService_GetAllByLangAsync(userId, SID, organizationId, lang, xmlString, null);
        }
        
        /// <remarks/>
        public void VehicleService_GetAllByLangAsync(int userId, string SID, int organizationId, string lang, string xmlString, object userState) {
            if ((this.VehicleService_GetAllByLangOperationCompleted == null)) {
                this.VehicleService_GetAllByLangOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVehicleService_GetAllByLangOperationCompleted);
            }
            this.InvokeAsync("VehicleService_GetAllByLang", new object[] {
                        userId,
                        SID,
                        organizationId,
                        lang,
                        xmlString}, this.VehicleService_GetAllByLangOperationCompleted, userState);
        }
        
        private void OnVehicleService_GetAllByLangOperationCompleted(object arg) {
            if ((this.VehicleService_GetAllByLangCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VehicleService_GetAllByLangCompleted(this, new VehicleService_GetAllByLangCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/VehicleService_GetByType", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int VehicleService_GetByType(int userId, string SID, int organizationId, short operationType, ref string xmlString) {
            object[] results = this.Invoke("VehicleService_GetByType", new object[] {
                        userId,
                        SID,
                        organizationId,
                        operationType,
                        xmlString});
            xmlString = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void VehicleService_GetByTypeAsync(int userId, string SID, int organizationId, short operationType, string xmlString) {
            this.VehicleService_GetByTypeAsync(userId, SID, organizationId, operationType, xmlString, null);
        }
        
        /// <remarks/>
        public void VehicleService_GetByTypeAsync(int userId, string SID, int organizationId, short operationType, string xmlString, object userState) {
            if ((this.VehicleService_GetByTypeOperationCompleted == null)) {
                this.VehicleService_GetByTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVehicleService_GetByTypeOperationCompleted);
            }
            this.InvokeAsync("VehicleService_GetByType", new object[] {
                        userId,
                        SID,
                        organizationId,
                        operationType,
                        xmlString}, this.VehicleService_GetByTypeOperationCompleted, userState);
        }
        
        private void OnVehicleService_GetByTypeOperationCompleted(object arg) {
            if ((this.VehicleService_GetByTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VehicleService_GetByTypeCompleted(this, new VehicleService_GetByTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/Notification_Add", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int Notification_Add(int userId, string SID, int organizationId, short operationType, short notification1, short notification2, short notification3, string description) {
            object[] results = this.Invoke("Notification_Add", new object[] {
                        userId,
                        SID,
                        organizationId,
                        operationType,
                        notification1,
                        notification2,
                        notification3,
                        description});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void Notification_AddAsync(int userId, string SID, int organizationId, short operationType, short notification1, short notification2, short notification3, string description) {
            this.Notification_AddAsync(userId, SID, organizationId, operationType, notification1, notification2, notification3, description, null);
        }
        
        /// <remarks/>
        public void Notification_AddAsync(int userId, string SID, int organizationId, short operationType, short notification1, short notification2, short notification3, string description, object userState) {
            if ((this.Notification_AddOperationCompleted == null)) {
                this.Notification_AddOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNotification_AddOperationCompleted);
            }
            this.InvokeAsync("Notification_Add", new object[] {
                        userId,
                        SID,
                        organizationId,
                        operationType,
                        notification1,
                        notification2,
                        notification3,
                        description}, this.Notification_AddOperationCompleted, userState);
        }
        
        private void OnNotification_AddOperationCompleted(object arg) {
            if ((this.Notification_AddCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Notification_AddCompleted(this, new Notification_AddCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/Notification_Update", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int Notification_Update(int userId, string SID, int organizationId, int notificationId, short operationType, short notification1, short notification2, short notification3, string description) {
            object[] results = this.Invoke("Notification_Update", new object[] {
                        userId,
                        SID,
                        organizationId,
                        notificationId,
                        operationType,
                        notification1,
                        notification2,
                        notification3,
                        description});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void Notification_UpdateAsync(int userId, string SID, int organizationId, int notificationId, short operationType, short notification1, short notification2, short notification3, string description) {
            this.Notification_UpdateAsync(userId, SID, organizationId, notificationId, operationType, notification1, notification2, notification3, description, null);
        }
        
        /// <remarks/>
        public void Notification_UpdateAsync(int userId, string SID, int organizationId, int notificationId, short operationType, short notification1, short notification2, short notification3, string description, object userState) {
            if ((this.Notification_UpdateOperationCompleted == null)) {
                this.Notification_UpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNotification_UpdateOperationCompleted);
            }
            this.InvokeAsync("Notification_Update", new object[] {
                        userId,
                        SID,
                        organizationId,
                        notificationId,
                        operationType,
                        notification1,
                        notification2,
                        notification3,
                        description}, this.Notification_UpdateOperationCompleted, userState);
        }
        
        private void OnNotification_UpdateOperationCompleted(object arg) {
            if ((this.Notification_UpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Notification_UpdateCompleted(this, new Notification_UpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/Notification_Delete", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int Notification_Delete(int userId, string SID, int organizationId, int notificationId) {
            object[] results = this.Invoke("Notification_Delete", new object[] {
                        userId,
                        SID,
                        organizationId,
                        notificationId});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void Notification_DeleteAsync(int userId, string SID, int organizationId, int notificationId) {
            this.Notification_DeleteAsync(userId, SID, organizationId, notificationId, null);
        }
        
        /// <remarks/>
        public void Notification_DeleteAsync(int userId, string SID, int organizationId, int notificationId, object userState) {
            if ((this.Notification_DeleteOperationCompleted == null)) {
                this.Notification_DeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNotification_DeleteOperationCompleted);
            }
            this.InvokeAsync("Notification_Delete", new object[] {
                        userId,
                        SID,
                        organizationId,
                        notificationId}, this.Notification_DeleteOperationCompleted, userState);
        }
        
        private void OnNotification_DeleteOperationCompleted(object arg) {
            if ((this.Notification_DeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Notification_DeleteCompleted(this, new Notification_DeleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/Notification_Get", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int Notification_Get(int userId, string SID, int organizationId, int notificationId, ref string xmlString) {
            object[] results = this.Invoke("Notification_Get", new object[] {
                        userId,
                        SID,
                        organizationId,
                        notificationId,
                        xmlString});
            xmlString = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void Notification_GetAsync(int userId, string SID, int organizationId, int notificationId, string xmlString) {
            this.Notification_GetAsync(userId, SID, organizationId, notificationId, xmlString, null);
        }
        
        /// <remarks/>
        public void Notification_GetAsync(int userId, string SID, int organizationId, int notificationId, string xmlString, object userState) {
            if ((this.Notification_GetOperationCompleted == null)) {
                this.Notification_GetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNotification_GetOperationCompleted);
            }
            this.InvokeAsync("Notification_Get", new object[] {
                        userId,
                        SID,
                        organizationId,
                        notificationId,
                        xmlString}, this.Notification_GetOperationCompleted, userState);
        }
        
        private void OnNotification_GetOperationCompleted(object arg) {
            if ((this.Notification_GetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Notification_GetCompleted(this, new Notification_GetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/Notification_GetAll", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int Notification_GetAll(int userId, string SID, int organizationId, ref string xmlString) {
            object[] results = this.Invoke("Notification_GetAll", new object[] {
                        userId,
                        SID,
                        organizationId,
                        xmlString});
            xmlString = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void Notification_GetAllAsync(int userId, string SID, int organizationId, string xmlString) {
            this.Notification_GetAllAsync(userId, SID, organizationId, xmlString, null);
        }
        
        /// <remarks/>
        public void Notification_GetAllAsync(int userId, string SID, int organizationId, string xmlString, object userState) {
            if ((this.Notification_GetAllOperationCompleted == null)) {
                this.Notification_GetAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNotification_GetAllOperationCompleted);
            }
            this.InvokeAsync("Notification_GetAll", new object[] {
                        userId,
                        SID,
                        organizationId,
                        xmlString}, this.Notification_GetAllOperationCompleted, userState);
        }
        
        private void OnNotification_GetAllOperationCompleted(object arg) {
            if ((this.Notification_GetAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Notification_GetAllCompleted(this, new Notification_GetAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/Notification_GetAllByLang", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int Notification_GetAllByLang(int userId, string SID, int organizationId, string lang, ref string xmlString) {
            object[] results = this.Invoke("Notification_GetAllByLang", new object[] {
                        userId,
                        SID,
                        organizationId,
                        lang,
                        xmlString});
            xmlString = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void Notification_GetAllByLangAsync(int userId, string SID, int organizationId, string lang, string xmlString) {
            this.Notification_GetAllByLangAsync(userId, SID, organizationId, lang, xmlString, null);
        }
        
        /// <remarks/>
        public void Notification_GetAllByLangAsync(int userId, string SID, int organizationId, string lang, string xmlString, object userState) {
            if ((this.Notification_GetAllByLangOperationCompleted == null)) {
                this.Notification_GetAllByLangOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNotification_GetAllByLangOperationCompleted);
            }
            this.InvokeAsync("Notification_GetAllByLang", new object[] {
                        userId,
                        SID,
                        organizationId,
                        lang,
                        xmlString}, this.Notification_GetAllByLangOperationCompleted, userState);
        }
        
        private void OnNotification_GetAllByLangOperationCompleted(object arg) {
            if ((this.Notification_GetAllByLangCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Notification_GetAllByLangCompleted(this, new Notification_GetAllByLangCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/Notification_GetByType", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int Notification_GetByType(int userId, string SID, int organizationId, short operationType, ref string xmlString) {
            object[] results = this.Invoke("Notification_GetByType", new object[] {
                        userId,
                        SID,
                        organizationId,
                        operationType,
                        xmlString});
            xmlString = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void Notification_GetByTypeAsync(int userId, string SID, int organizationId, short operationType, string xmlString) {
            this.Notification_GetByTypeAsync(userId, SID, organizationId, operationType, xmlString, null);
        }
        
        /// <remarks/>
        public void Notification_GetByTypeAsync(int userId, string SID, int organizationId, short operationType, string xmlString, object userState) {
            if ((this.Notification_GetByTypeOperationCompleted == null)) {
                this.Notification_GetByTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNotification_GetByTypeOperationCompleted);
            }
            this.InvokeAsync("Notification_GetByType", new object[] {
                        userId,
                        SID,
                        organizationId,
                        operationType,
                        xmlString}, this.Notification_GetByTypeOperationCompleted, userState);
        }
        
        private void OnNotification_GetByTypeOperationCompleted(object arg) {
            if ((this.Notification_GetByTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Notification_GetByTypeCompleted(this, new Notification_GetByTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetActivitySummaryPerOrganization", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetActivitySummaryPerOrganization(int UserID, string SID, int OrgId, string FromDate, string ToDate, short sensorNum, ref string xml) {
            object[] results = this.Invoke("GetActivitySummaryPerOrganization", new object[] {
                        UserID,
                        SID,
                        OrgId,
                        FromDate,
                        ToDate,
                        sensorNum,
                        xml});
            xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetActivitySummaryPerOrganizationAsync(int UserID, string SID, int OrgId, string FromDate, string ToDate, short sensorNum, string xml) {
            this.GetActivitySummaryPerOrganizationAsync(UserID, SID, OrgId, FromDate, ToDate, sensorNum, xml, null);
        }
        
        /// <remarks/>
        public void GetActivitySummaryPerOrganizationAsync(int UserID, string SID, int OrgId, string FromDate, string ToDate, short sensorNum, string xml, object userState) {
            if ((this.GetActivitySummaryPerOrganizationOperationCompleted == null)) {
                this.GetActivitySummaryPerOrganizationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetActivitySummaryPerOrganizationOperationCompleted);
            }
            this.InvokeAsync("GetActivitySummaryPerOrganization", new object[] {
                        UserID,
                        SID,
                        OrgId,
                        FromDate,
                        ToDate,
                        sensorNum,
                        xml}, this.GetActivitySummaryPerOrganizationOperationCompleted, userState);
        }
        
        private void OnGetActivitySummaryPerOrganizationOperationCompleted(object arg) {
            if ((this.GetActivitySummaryPerOrganizationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetActivitySummaryPerOrganizationCompleted(this, new GetActivitySummaryPerOrganizationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetOrganizationsMonitoredBy", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetOrganizationsMonitoredBy(int userId, string SID, int organizationId, ref string xml) {
            object[] results = this.Invoke("GetOrganizationsMonitoredBy", new object[] {
                        userId,
                        SID,
                        organizationId,
                        xml});
            xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetOrganizationsMonitoredByAsync(int userId, string SID, int organizationId, string xml) {
            this.GetOrganizationsMonitoredByAsync(userId, SID, organizationId, xml, null);
        }
        
        /// <remarks/>
        public void GetOrganizationsMonitoredByAsync(int userId, string SID, int organizationId, string xml, object userState) {
            if ((this.GetOrganizationsMonitoredByOperationCompleted == null)) {
                this.GetOrganizationsMonitoredByOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOrganizationsMonitoredByOperationCompleted);
            }
            this.InvokeAsync("GetOrganizationsMonitoredBy", new object[] {
                        userId,
                        SID,
                        organizationId,
                        xml}, this.GetOrganizationsMonitoredByOperationCompleted, userState);
        }
        
        private void OnGetOrganizationsMonitoredByOperationCompleted(object arg) {
            if ((this.GetOrganizationsMonitoredByCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOrganizationsMonitoredByCompleted(this, new GetOrganizationsMonitoredByCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetLoginCredentialsWithinSameGroup", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetLoginCredentialsWithinSameGroup(int userId, string SID, int organizationId, ref string username, ref string password) {
            object[] results = this.Invoke("GetLoginCredentialsWithinSameGroup", new object[] {
                        userId,
                        SID,
                        organizationId,
                        username,
                        password});
            username = ((string)(results[1]));
            password = ((string)(results[2]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetLoginCredentialsWithinSameGroupAsync(int userId, string SID, int organizationId, string username, string password) {
            this.GetLoginCredentialsWithinSameGroupAsync(userId, SID, organizationId, username, password, null);
        }
        
        /// <remarks/>
        public void GetLoginCredentialsWithinSameGroupAsync(int userId, string SID, int organizationId, string username, string password, object userState) {
            if ((this.GetLoginCredentialsWithinSameGroupOperationCompleted == null)) {
                this.GetLoginCredentialsWithinSameGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLoginCredentialsWithinSameGroupOperationCompleted);
            }
            this.InvokeAsync("GetLoginCredentialsWithinSameGroup", new object[] {
                        userId,
                        SID,
                        organizationId,
                        username,
                        password}, this.GetLoginCredentialsWithinSameGroupOperationCompleted, userState);
        }
        
        private void OnGetLoginCredentialsWithinSameGroupOperationCompleted(object arg) {
            if ((this.GetLoginCredentialsWithinSameGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLoginCredentialsWithinSameGroupCompleted(this, new GetLoginCredentialsWithinSameGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/AddFuelTransaction", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AddFuelTransaction(int userId, string SID, string vinNum, System.DateTime dtWhen, double latitude, double longitude, string xmlData, ref long transactionId) {
            object[] results = this.Invoke("AddFuelTransaction", new object[] {
                        userId,
                        SID,
                        vinNum,
                        dtWhen,
                        latitude,
                        longitude,
                        xmlData,
                        transactionId});
            transactionId = ((long)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AddFuelTransactionAsync(int userId, string SID, string vinNum, System.DateTime dtWhen, double latitude, double longitude, string xmlData, long transactionId) {
            this.AddFuelTransactionAsync(userId, SID, vinNum, dtWhen, latitude, longitude, xmlData, transactionId, null);
        }
        
        /// <remarks/>
        public void AddFuelTransactionAsync(int userId, string SID, string vinNum, System.DateTime dtWhen, double latitude, double longitude, string xmlData, long transactionId, object userState) {
            if ((this.AddFuelTransactionOperationCompleted == null)) {
                this.AddFuelTransactionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddFuelTransactionOperationCompleted);
            }
            this.InvokeAsync("AddFuelTransaction", new object[] {
                        userId,
                        SID,
                        vinNum,
                        dtWhen,
                        latitude,
                        longitude,
                        xmlData,
                        transactionId}, this.AddFuelTransactionOperationCompleted, userState);
        }
        
        private void OnAddFuelTransactionOperationCompleted(object arg) {
            if ((this.AddFuelTransactionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddFuelTransactionCompleted(this, new AddFuelTransactionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void AddFuelTransactionByAddressCompletedEventHandler(object sender, AddFuelTransactionByAddressCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddFuelTransactionByAddressCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddFuelTransactionByAddressCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public long transactionId {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void AddFuelCardTransactionCompletedEventHandler(object sender, AddFuelCardTransactionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddFuelCardTransactionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddFuelCardTransactionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public long transactionId {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void UpdateFuelTransactionCompletedEventHandler(object sender, UpdateFuelTransactionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateFuelTransactionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateFuelTransactionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool status {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetFuelTransactionCompletedEventHandler(object sender, GetFuelTransactionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFuelTransactionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFuelTransactionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void AddPushCompletedEventHandler(object sender, AddPushCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddPushCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddPushCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void DeletePushCompletedEventHandler(object sender, DeletePushCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeletePushCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeletePushCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void UpdatePushConfigurationCompletedEventHandler(object sender, UpdatePushConfigurationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdatePushConfigurationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdatePushConfigurationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetPushConfigurationByOrgCompletedEventHandler(object sender, GetPushConfigurationByOrgCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPushConfigurationByOrgCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPushConfigurationByOrgCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetUnassignedPushTypesByOrgCompletedEventHandler(object sender, GetUnassignedPushTypesByOrgCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUnassignedPushTypesByOrgCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUnassignedPushTypesByOrgCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void Waypoint_Add_UpdateCompletedEventHandler(object sender, Waypoint_Add_UpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Waypoint_Add_UpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Waypoint_Add_UpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetWaypointTypeCompletedEventHandler(object sender, GetWaypointTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWaypointTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWaypointTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetOrganizationWaypointsCompletedEventHandler(object sender, GetOrganizationWaypointsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOrganizationWaypointsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOrganizationWaypointsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetOrganizationServicesCompletedEventHandler(object sender, GetOrganizationServicesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOrganizationServicesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOrganizationServicesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetOrganizationServicesForAddCompletedEventHandler(object sender, GetOrganizationServicesForAddCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOrganizationServicesForAddCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOrganizationServicesForAddCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void AddOrganizationServiceCompletedEventHandler(object sender, AddOrganizationServiceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddOrganizationServiceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddOrganizationServiceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void DeleteOrganizationServiceCompletedEventHandler(object sender, DeleteOrganizationServiceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteOrganizationServiceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteOrganizationServiceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void AddUserGroupsDefaultCompletedEventHandler(object sender, AddUserGroupsDefaultCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddUserGroupsDefaultCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddUserGroupsDefaultCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetUsersNameInfoByOrganizationByLangCompletedEventHandler(object sender, GetUsersNameInfoByOrganizationByLangCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUsersNameInfoByOrganizationByLangCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUsersNameInfoByOrganizationByLangCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetOrganizationColumnsPreferencesCompletedEventHandler(object sender, GetOrganizationColumnsPreferencesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOrganizationColumnsPreferencesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOrganizationColumnsPreferencesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xmlString {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetOrganizationSensorPreferencesCompletedEventHandler(object sender, GetOrganizationSensorPreferencesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOrganizationSensorPreferencesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOrganizationSensorPreferencesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xmlString {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetOrganizationSensorCompletedEventHandler(object sender, GetOrganizationSensorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOrganizationSensorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOrganizationSensorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xmlString {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetOrganizationPreferenceByOrganizationIdAndUserIdCompletedEventHandler(object sender, GetOrganizationPreferenceByOrganizationIdAndUserIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOrganizationPreferenceByOrganizationIdAndUserIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOrganizationPreferenceByOrganizationIdAndUserIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xmlString {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void AddOrganizationSensorPrefereneCompletedEventHandler(object sender, AddOrganizationSensorPrefereneCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddOrganizationSensorPrefereneCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddOrganizationSensorPrefereneCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void DeleteOrganizationSensorPrefereneCompletedEventHandler(object sender, DeleteOrganizationSensorPrefereneCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteOrganizationSensorPrefereneCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteOrganizationSensorPrefereneCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetAllSensorByOrganizationIdCompletedEventHandler(object sender, GetAllSensorByOrganizationIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllSensorByOrganizationIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllSensorByOrganizationIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xmlString {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetAllOrganizationsInfoXMLCompletedEventHandler(object sender, GetAllOrganizationsInfoXMLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllOrganizationsInfoXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllOrganizationsInfoXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetOrganizationInfoXMLByOrganizationIdCompletedEventHandler(object sender, GetOrganizationInfoXMLByOrganizationIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOrganizationInfoXMLByOrganizationIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOrganizationInfoXMLByOrganizationIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetOrganizationInfoXMLByOrganizationNameCompletedEventHandler(object sender, GetOrganizationInfoXMLByOrganizationNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOrganizationInfoXMLByOrganizationNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOrganizationInfoXMLByOrganizationNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetOrganizationInfoXMLByUserIdCompletedEventHandler(object sender, GetOrganizationInfoXMLByUserIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOrganizationInfoXMLByUserIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOrganizationInfoXMLByUserIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetOrganizationCommPhonesInfoCompletedEventHandler(object sender, GetOrganizationCommPhonesInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOrganizationCommPhonesInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOrganizationCommPhonesInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetFleetsInfoByOrganizationIdCompletedEventHandler(object sender, GetFleetsInfoByOrganizationIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFleetsInfoByOrganizationIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFleetsInfoByOrganizationIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetFleetsInfoByOrganizationIdAndTypeCompletedEventHandler(object sender, GetFleetsInfoByOrganizationIdAndTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFleetsInfoByOrganizationIdAndTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFleetsInfoByOrganizationIdAndTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetOrganizationLandmarksWithBoundaryCompletedEventHandler(object sender, GetOrganizationLandmarksWithBoundaryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOrganizationLandmarksWithBoundaryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOrganizationLandmarksWithBoundaryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetOrganizationLandmarksXMLByOrganizationIdCompletedEventHandler(object sender, GetOrganizationLandmarksXMLByOrganizationIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOrganizationLandmarksXMLByOrganizationIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOrganizationLandmarksXMLByOrganizationIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetOrganizationLandmark_PublicCompletedEventHandler(object sender, GetOrganizationLandmark_PublicCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOrganizationLandmark_PublicCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOrganizationLandmark_PublicCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetOrganizationGeozones_PublicCompletedEventHandler(object sender, GetOrganizationGeozones_PublicCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOrganizationGeozones_PublicCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOrganizationGeozones_PublicCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetOrganizationLandmarksXMLByOrganizationNameCompletedEventHandler(object sender, GetOrganizationLandmarksXMLByOrganizationNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOrganizationLandmarksXMLByOrganizationNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOrganizationLandmarksXMLByOrganizationNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetLandmarkNameCompletedEventHandler(object sender, GetLandmarkNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLandmarkNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLandmarkNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetLandmarkLocationCompletedEventHandler(object sender, GetLandmarkLocationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLandmarkLocationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLandmarkLocationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public double latitude {
            get {
                this.RaiseExceptionIfNecessary();
                return ((double)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public double longitude {
            get {
                this.RaiseExceptionIfNecessary();
                return ((double)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void AddOrganizationLandmarkCompletedEventHandler(object sender, AddOrganizationLandmarkCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddOrganizationLandmarkCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddOrganizationLandmarkCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void AddOrganizationLandmarksCompletedEventHandler(object sender, AddOrganizationLandmarksCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddOrganizationLandmarksCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddOrganizationLandmarksCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void UpdateLandmarkCompletedEventHandler(object sender, UpdateLandmarkCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateLandmarkCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateLandmarkCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void DeleteOrganizationLandmarkCompletedEventHandler(object sender, DeleteOrganizationLandmarkCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteOrganizationLandmarkCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteOrganizationLandmarkCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void DeleteOrganizationLandmarksCompletedEventHandler(object sender, DeleteOrganizationLandmarksCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteOrganizationLandmarksCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteOrganizationLandmarksCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void AddGeozoneCompletedEventHandler(object sender, AddGeozoneCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddGeozoneCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddGeozoneCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void DeleteOrganizationAllGeozonesCompletedEventHandler(object sender, DeleteOrganizationAllGeozonesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteOrganizationAllGeozonesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteOrganizationAllGeozonesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void DeleteGeozoneFromOrganizationCompletedEventHandler(object sender, DeleteGeozoneFromOrganizationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteGeozoneFromOrganizationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteGeozoneFromOrganizationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void UpdateGeozoneCompletedEventHandler(object sender, UpdateGeozoneCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateGeozoneCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateGeozoneCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void IsGeozoneAssignedCompletedEventHandler(object sender, IsGeozoneAssignedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsGeozoneAssignedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsGeozoneAssignedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool retResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void IsGeoZoneUpdatableByUserCompletedEventHandler(object sender, IsGeoZoneUpdatableByUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsGeoZoneUpdatableByUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsGeoZoneUpdatableByUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool retResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void IsLandmarkUpdatableByUserCompletedEventHandler(object sender, IsLandmarkUpdatableByUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsLandmarkUpdatableByUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsLandmarkUpdatableByUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool retResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetGeozoneTypesCompletedEventHandler(object sender, GetGeozoneTypesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetGeozoneTypesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetGeozoneTypesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetOrganizationGeozonesInfoCompletedEventHandler(object sender, GetOrganizationGeozonesInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOrganizationGeozonesInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOrganizationGeozonesInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetOrganizationGeozonesInfoByLangCompletedEventHandler(object sender, GetOrganizationGeozonesInfoByLangCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOrganizationGeozonesInfoByLangCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOrganizationGeozonesInfoByLangCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetOrganizationGeozoneInfoCompletedEventHandler(object sender, GetOrganizationGeozoneInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOrganizationGeozoneInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOrganizationGeozoneInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetAllAssignedVehiclesInfoToGeozoneCompletedEventHandler(object sender, GetAllAssignedVehiclesInfoToGeozoneCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllAssignedVehiclesInfoToGeozoneCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllAssignedVehiclesInfoToGeozoneCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetAllUnasignedVehiclesInfoToGeozoneCompletedEventHandler(object sender, GetAllUnasignedVehiclesInfoToGeozoneCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllUnasignedVehiclesInfoToGeozoneCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllUnasignedVehiclesInfoToGeozoneCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void SetOrganizationGeozoneAutoAdjustDayLightSavingCompletedEventHandler(object sender, SetOrganizationGeozoneAutoAdjustDayLightSavingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetOrganizationGeozoneAutoAdjustDayLightSavingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetOrganizationGeozoneAutoAdjustDayLightSavingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetOrganizationGeozonesCompletedEventHandler(object sender, GetOrganizationGeozonesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOrganizationGeozonesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOrganizationGeozonesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetOrganizationGeozonesWithStatusCompletedEventHandler(object sender, GetOrganizationGeozonesWithStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOrganizationGeozonesWithStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOrganizationGeozonesWithStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetOrganizationUserLoginsCompletedEventHandler(object sender, GetOrganizationUserLoginsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOrganizationUserLoginsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOrganizationUserLoginsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetVehiclesLastKnownPositionInfoCompletedEventHandler(object sender, GetVehiclesLastKnownPositionInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetVehiclesLastKnownPositionInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetVehiclesLastKnownPositionInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetOrganizationAllActiveVehiclesXmlCompletedEventHandler(object sender, GetOrganizationAllActiveVehiclesXmlCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOrganizationAllActiveVehiclesXmlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOrganizationAllActiveVehiclesXmlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetOrganizationAllActiveVehiclesXmlByLangCompletedEventHandler(object sender, GetOrganizationAllActiveVehiclesXmlByLangCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOrganizationAllActiveVehiclesXmlByLangCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOrganizationAllActiveVehiclesXmlByLangCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetOrganizationAllActiveVehiclesCfgInfoCompletedEventHandler(object sender, GetOrganizationAllActiveVehiclesCfgInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOrganizationAllActiveVehiclesCfgInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOrganizationAllActiveVehiclesCfgInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetOrganizationAllUnassignedBoxIdsXmlCompletedEventHandler(object sender, GetOrganizationAllUnassignedBoxIdsXmlCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOrganizationAllUnassignedBoxIdsXmlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOrganizationAllUnassignedBoxIdsXmlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetUsersInfoByOrganizationCompletedEventHandler(object sender, GetUsersInfoByOrganizationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUsersInfoByOrganizationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUsersInfoByOrganizationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetUsersInfoByOrganizationByLangCompletedEventHandler(object sender, GetUsersInfoByOrganizationByLangCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUsersInfoByOrganizationByLangCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUsersInfoByOrganizationByLangCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetDclCommInfoCompletedEventHandler(object sender, GetDclCommInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDclCommInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDclCommInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int boxId {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public short dclId {
            get {
                this.RaiseExceptionIfNecessary();
                return ((short)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetOrganizationPreferencesCompletedEventHandler(object sender, GetOrganizationPreferencesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOrganizationPreferencesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOrganizationPreferencesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xmlString {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void UpdateOrganizationPreferencesCompletedEventHandler(object sender, UpdateOrganizationPreferencesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateOrganizationPreferencesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateOrganizationPreferencesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetOrganizationSettingsCompletedEventHandler(object sender, GetOrganizationSettingsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOrganizationSettingsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOrganizationSettingsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xmlString {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void UpdateOrganizationSettingsCompletedEventHandler(object sender, UpdateOrganizationSettingsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateOrganizationSettingsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateOrganizationSettingsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void DeleteOrganizationSettingsCompletedEventHandler(object sender, DeleteOrganizationSettingsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteOrganizationSettingsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteOrganizationSettingsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetAllAssignedBoxesByOrganizationCompletedEventHandler(object sender, GetAllAssignedBoxesByOrganizationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllAssignedBoxesByOrganizationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllAssignedBoxesByOrganizationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetAllUnassignedBoxesByOrganizationCompletedEventHandler(object sender, GetAllUnassignedBoxesByOrganizationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllUnassignedBoxesByOrganizationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllUnassignedBoxesByOrganizationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void AddProductCompletedEventHandler(object sender, AddProductCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddProductCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddProductCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void UpdateProductByIdCompletedEventHandler(object sender, UpdateProductByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateProductByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateProductByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void UpdateProductByNameCompletedEventHandler(object sender, UpdateProductByNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateProductByNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateProductByNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void DeleteOrganizationProductCompletedEventHandler(object sender, DeleteOrganizationProductCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteOrganizationProductCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteOrganizationProductCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void DeleteOrganizationAllProductsCompletedEventHandler(object sender, DeleteOrganizationAllProductsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteOrganizationAllProductsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteOrganizationAllProductsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetOrganizationProductByIdCompletedEventHandler(object sender, GetOrganizationProductByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOrganizationProductByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOrganizationProductByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetOrganizationProductByNameCompletedEventHandler(object sender, GetOrganizationProductByNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOrganizationProductByNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOrganizationProductByNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetOrganizationAllProductsCompletedEventHandler(object sender, GetOrganizationAllProductsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOrganizationAllProductsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOrganizationAllProductsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void VehicleService_AddCompletedEventHandler(object sender, VehicleService_AddCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VehicleService_AddCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VehicleService_AddCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void VehicleService_UpdateCompletedEventHandler(object sender, VehicleService_UpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VehicleService_UpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VehicleService_UpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void VehicleService_DeleteCompletedEventHandler(object sender, VehicleService_DeleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VehicleService_DeleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VehicleService_DeleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void VehicleService_GetCompletedEventHandler(object sender, VehicleService_GetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VehicleService_GetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VehicleService_GetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xmlString {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void VehicleService_GetAllCompletedEventHandler(object sender, VehicleService_GetAllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VehicleService_GetAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VehicleService_GetAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xmlString {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void VehicleService_GetAllByLangCompletedEventHandler(object sender, VehicleService_GetAllByLangCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VehicleService_GetAllByLangCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VehicleService_GetAllByLangCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xmlString {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void VehicleService_GetByTypeCompletedEventHandler(object sender, VehicleService_GetByTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VehicleService_GetByTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VehicleService_GetByTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xmlString {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void Notification_AddCompletedEventHandler(object sender, Notification_AddCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Notification_AddCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Notification_AddCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void Notification_UpdateCompletedEventHandler(object sender, Notification_UpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Notification_UpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Notification_UpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void Notification_DeleteCompletedEventHandler(object sender, Notification_DeleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Notification_DeleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Notification_DeleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void Notification_GetCompletedEventHandler(object sender, Notification_GetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Notification_GetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Notification_GetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xmlString {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void Notification_GetAllCompletedEventHandler(object sender, Notification_GetAllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Notification_GetAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Notification_GetAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xmlString {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void Notification_GetAllByLangCompletedEventHandler(object sender, Notification_GetAllByLangCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Notification_GetAllByLangCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Notification_GetAllByLangCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xmlString {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void Notification_GetByTypeCompletedEventHandler(object sender, Notification_GetByTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Notification_GetByTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Notification_GetByTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xmlString {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetActivitySummaryPerOrganizationCompletedEventHandler(object sender, GetActivitySummaryPerOrganizationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetActivitySummaryPerOrganizationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetActivitySummaryPerOrganizationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetOrganizationsMonitoredByCompletedEventHandler(object sender, GetOrganizationsMonitoredByCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOrganizationsMonitoredByCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOrganizationsMonitoredByCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetLoginCredentialsWithinSameGroupCompletedEventHandler(object sender, GetLoginCredentialsWithinSameGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLoginCredentialsWithinSameGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLoginCredentialsWithinSameGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string username {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string password {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void AddFuelTransactionCompletedEventHandler(object sender, AddFuelTransactionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddFuelTransactionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddFuelTransactionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public long transactionId {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[1]));
            }
        }
    }
}

#pragma warning restore 1591