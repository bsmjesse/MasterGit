//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.18444.
// 
#pragma warning disable 1591

namespace SentinelMobile.ServerDBHistory {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="DBHistorySoap", Namespace="http://www.sentinelfm.com")]
    public partial class DBHistory : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetVehicleStatusHistoryByVehicleIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetVehicleStatusHistoryByVehicleIdByLangOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetVehicleStatusHistoryByVehicleIdByLangExtendedOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetVehicleStatusHistoryByVehicleIdByLangExtendedSearchOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetVehicleStatusHistoryByFleetIdByLangExtendedSearchOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetVehicleOffHoursInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFleetOffHoursInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDetailedMessageInFromHistoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLastMessagesFromHistoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLastMessagesFromHistoryByOriginDateTimeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLastMessagesFromHistoryByOrganizationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLastMessagesOutFromHistoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLastMessagesOutFromHistoryByOrganizationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDetailedMessageOutFromHistoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTextMessagesFullInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTextMessageFullInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserTextMessagesFullInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFleetTextMessagesFullInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFleetAllTextMessagesFullInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFleetAllDestinationsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetVehicleAllTextMessagesFullInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetVehicleAllDestinationsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserTextMessagesShortInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserIncomingTextMessagesShortInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserIncomingTextMessagesFullInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMsgsShortInfoCheckSumOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetMsgUserIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetMsgUserIdExtendedOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateCustomPropInHistoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetVehiclesInHistoryByLocationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetVehiclesInHistoryByAddressOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCmdSendOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCmdRecOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetInvalidGPSStatisticOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBoxesWithoutIpUpdatesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBoxesReportedFrequencyOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBoxMissingMessagesOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public DBHistory() {
            this.Url = global::SentinelMobile.Properties.Settings.Default.SentinelMobile_ServerDBHistory_DBHistory;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetVehicleStatusHistoryByVehicleIdCompletedEventHandler GetVehicleStatusHistoryByVehicleIdCompleted;
        
        /// <remarks/>
        public event GetVehicleStatusHistoryByVehicleIdByLangCompletedEventHandler GetVehicleStatusHistoryByVehicleIdByLangCompleted;
        
        /// <remarks/>
        public event GetVehicleStatusHistoryByVehicleIdByLangExtendedCompletedEventHandler GetVehicleStatusHistoryByVehicleIdByLangExtendedCompleted;
        
        /// <remarks/>
        public event GetVehicleStatusHistoryByVehicleIdByLangExtendedSearchCompletedEventHandler GetVehicleStatusHistoryByVehicleIdByLangExtendedSearchCompleted;
        
        /// <remarks/>
        public event GetVehicleStatusHistoryByFleetIdByLangExtendedSearchCompletedEventHandler GetVehicleStatusHistoryByFleetIdByLangExtendedSearchCompleted;
        
        /// <remarks/>
        public event GetVehicleOffHoursInfoCompletedEventHandler GetVehicleOffHoursInfoCompleted;
        
        /// <remarks/>
        public event GetFleetOffHoursInfoCompletedEventHandler GetFleetOffHoursInfoCompleted;
        
        /// <remarks/>
        public event GetDetailedMessageInFromHistoryCompletedEventHandler GetDetailedMessageInFromHistoryCompleted;
        
        /// <remarks/>
        public event GetLastMessagesFromHistoryCompletedEventHandler GetLastMessagesFromHistoryCompleted;
        
        /// <remarks/>
        public event GetLastMessagesFromHistoryByOriginDateTimeCompletedEventHandler GetLastMessagesFromHistoryByOriginDateTimeCompleted;
        
        /// <remarks/>
        public event GetLastMessagesFromHistoryByOrganizationCompletedEventHandler GetLastMessagesFromHistoryByOrganizationCompleted;
        
        /// <remarks/>
        public event GetLastMessagesOutFromHistoryCompletedEventHandler GetLastMessagesOutFromHistoryCompleted;
        
        /// <remarks/>
        public event GetLastMessagesOutFromHistoryByOrganizationCompletedEventHandler GetLastMessagesOutFromHistoryByOrganizationCompleted;
        
        /// <remarks/>
        public event GetDetailedMessageOutFromHistoryCompletedEventHandler GetDetailedMessageOutFromHistoryCompleted;
        
        /// <remarks/>
        public event GetTextMessagesFullInfoCompletedEventHandler GetTextMessagesFullInfoCompleted;
        
        /// <remarks/>
        public event GetTextMessageFullInfoCompletedEventHandler GetTextMessageFullInfoCompleted;
        
        /// <remarks/>
        public event GetUserTextMessagesFullInfoCompletedEventHandler GetUserTextMessagesFullInfoCompleted;
        
        /// <remarks/>
        public event GetFleetTextMessagesFullInfoCompletedEventHandler GetFleetTextMessagesFullInfoCompleted;
        
        /// <remarks/>
        public event GetFleetAllTextMessagesFullInfoCompletedEventHandler GetFleetAllTextMessagesFullInfoCompleted;
        
        /// <remarks/>
        public event GetFleetAllDestinationsCompletedEventHandler GetFleetAllDestinationsCompleted;
        
        /// <remarks/>
        public event GetVehicleAllTextMessagesFullInfoCompletedEventHandler GetVehicleAllTextMessagesFullInfoCompleted;
        
        /// <remarks/>
        public event GetVehicleAllDestinationsCompletedEventHandler GetVehicleAllDestinationsCompleted;
        
        /// <remarks/>
        public event GetUserTextMessagesShortInfoCompletedEventHandler GetUserTextMessagesShortInfoCompleted;
        
        /// <remarks/>
        public event GetUserIncomingTextMessagesShortInfoCompletedEventHandler GetUserIncomingTextMessagesShortInfoCompleted;
        
        /// <remarks/>
        public event GetUserIncomingTextMessagesFullInfoCompletedEventHandler GetUserIncomingTextMessagesFullInfoCompleted;
        
        /// <remarks/>
        public event GetMsgsShortInfoCheckSumCompletedEventHandler GetMsgsShortInfoCheckSumCompleted;
        
        /// <remarks/>
        public event SetMsgUserIdCompletedEventHandler SetMsgUserIdCompleted;
        
        /// <remarks/>
        public event SetMsgUserIdExtendedCompletedEventHandler SetMsgUserIdExtendedCompleted;
        
        /// <remarks/>
        public event UpdateCustomPropInHistoryCompletedEventHandler UpdateCustomPropInHistoryCompleted;
        
        /// <remarks/>
        public event GetVehiclesInHistoryByLocationCompletedEventHandler GetVehiclesInHistoryByLocationCompleted;
        
        /// <remarks/>
        public event GetVehiclesInHistoryByAddressCompletedEventHandler GetVehiclesInHistoryByAddressCompleted;
        
        /// <remarks/>
        public event GetCmdSendCompletedEventHandler GetCmdSendCompleted;
        
        /// <remarks/>
        public event GetCmdRecCompletedEventHandler GetCmdRecCompleted;
        
        /// <remarks/>
        public event GetInvalidGPSStatisticCompletedEventHandler GetInvalidGPSStatisticCompleted;
        
        /// <remarks/>
        public event GetBoxesWithoutIpUpdatesCompletedEventHandler GetBoxesWithoutIpUpdatesCompleted;
        
        /// <remarks/>
        public event GetBoxesReportedFrequencyCompletedEventHandler GetBoxesReportedFrequencyCompleted;
        
        /// <remarks/>
        public event GetBoxMissingMessagesCompletedEventHandler GetBoxMissingMessagesCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetVehicleStatusHistoryByVehicleId", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetVehicleStatusHistoryByVehicleId(int userId, string SID, long vehicleId, string dateTimeFrom, string dateTimeTo, bool includeCoordinate, bool includeSensor, bool includePositionUpdate, bool includeInvalidGps, short DclId, ref string xml, ref bool requestOverflowed) {
            object[] results = this.Invoke("GetVehicleStatusHistoryByVehicleId", new object[] {
                        userId,
                        SID,
                        vehicleId,
                        dateTimeFrom,
                        dateTimeTo,
                        includeCoordinate,
                        includeSensor,
                        includePositionUpdate,
                        includeInvalidGps,
                        DclId,
                        xml,
                        requestOverflowed});
            xml = ((string)(results[1]));
            requestOverflowed = ((bool)(results[2]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetVehicleStatusHistoryByVehicleIdAsync(int userId, string SID, long vehicleId, string dateTimeFrom, string dateTimeTo, bool includeCoordinate, bool includeSensor, bool includePositionUpdate, bool includeInvalidGps, short DclId, string xml, bool requestOverflowed) {
            this.GetVehicleStatusHistoryByVehicleIdAsync(userId, SID, vehicleId, dateTimeFrom, dateTimeTo, includeCoordinate, includeSensor, includePositionUpdate, includeInvalidGps, DclId, xml, requestOverflowed, null);
        }
        
        /// <remarks/>
        public void GetVehicleStatusHistoryByVehicleIdAsync(int userId, string SID, long vehicleId, string dateTimeFrom, string dateTimeTo, bool includeCoordinate, bool includeSensor, bool includePositionUpdate, bool includeInvalidGps, short DclId, string xml, bool requestOverflowed, object userState) {
            if ((this.GetVehicleStatusHistoryByVehicleIdOperationCompleted == null)) {
                this.GetVehicleStatusHistoryByVehicleIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetVehicleStatusHistoryByVehicleIdOperationCompleted);
            }
            this.InvokeAsync("GetVehicleStatusHistoryByVehicleId", new object[] {
                        userId,
                        SID,
                        vehicleId,
                        dateTimeFrom,
                        dateTimeTo,
                        includeCoordinate,
                        includeSensor,
                        includePositionUpdate,
                        includeInvalidGps,
                        DclId,
                        xml,
                        requestOverflowed}, this.GetVehicleStatusHistoryByVehicleIdOperationCompleted, userState);
        }
        
        private void OnGetVehicleStatusHistoryByVehicleIdOperationCompleted(object arg) {
            if ((this.GetVehicleStatusHistoryByVehicleIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetVehicleStatusHistoryByVehicleIdCompleted(this, new GetVehicleStatusHistoryByVehicleIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetVehicleStatusHistoryByVehicleIdByLang", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetVehicleStatusHistoryByVehicleIdByLang(int userId, string SID, long vehicleId, string dateTimeFrom, string dateTimeTo, bool includeCoordinate, bool includeSensor, bool includePositionUpdate, bool includeInvalidGps, short DclId, string lang, ref string xml, ref bool requestOverflowed) {
            object[] results = this.Invoke("GetVehicleStatusHistoryByVehicleIdByLang", new object[] {
                        userId,
                        SID,
                        vehicleId,
                        dateTimeFrom,
                        dateTimeTo,
                        includeCoordinate,
                        includeSensor,
                        includePositionUpdate,
                        includeInvalidGps,
                        DclId,
                        lang,
                        xml,
                        requestOverflowed});
            xml = ((string)(results[1]));
            requestOverflowed = ((bool)(results[2]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetVehicleStatusHistoryByVehicleIdByLangAsync(int userId, string SID, long vehicleId, string dateTimeFrom, string dateTimeTo, bool includeCoordinate, bool includeSensor, bool includePositionUpdate, bool includeInvalidGps, short DclId, string lang, string xml, bool requestOverflowed) {
            this.GetVehicleStatusHistoryByVehicleIdByLangAsync(userId, SID, vehicleId, dateTimeFrom, dateTimeTo, includeCoordinate, includeSensor, includePositionUpdate, includeInvalidGps, DclId, lang, xml, requestOverflowed, null);
        }
        
        /// <remarks/>
        public void GetVehicleStatusHistoryByVehicleIdByLangAsync(int userId, string SID, long vehicleId, string dateTimeFrom, string dateTimeTo, bool includeCoordinate, bool includeSensor, bool includePositionUpdate, bool includeInvalidGps, short DclId, string lang, string xml, bool requestOverflowed, object userState) {
            if ((this.GetVehicleStatusHistoryByVehicleIdByLangOperationCompleted == null)) {
                this.GetVehicleStatusHistoryByVehicleIdByLangOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetVehicleStatusHistoryByVehicleIdByLangOperationCompleted);
            }
            this.InvokeAsync("GetVehicleStatusHistoryByVehicleIdByLang", new object[] {
                        userId,
                        SID,
                        vehicleId,
                        dateTimeFrom,
                        dateTimeTo,
                        includeCoordinate,
                        includeSensor,
                        includePositionUpdate,
                        includeInvalidGps,
                        DclId,
                        lang,
                        xml,
                        requestOverflowed}, this.GetVehicleStatusHistoryByVehicleIdByLangOperationCompleted, userState);
        }
        
        private void OnGetVehicleStatusHistoryByVehicleIdByLangOperationCompleted(object arg) {
            if ((this.GetVehicleStatusHistoryByVehicleIdByLangCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetVehicleStatusHistoryByVehicleIdByLangCompleted(this, new GetVehicleStatusHistoryByVehicleIdByLangCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetVehicleStatusHistoryByVehicleIdByLangExtended", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetVehicleStatusHistoryByVehicleIdByLangExtended(int userId, string SID, long vehicleId, string dateTimeFrom, string dateTimeTo, bool includeCoordinate, bool includeSensor, bool includePositionUpdate, bool includeInvalidGps, short DclId, string lang, string msgList, string sqlTopRecords, ref string xml, ref bool requestOverflowed) {
            object[] results = this.Invoke("GetVehicleStatusHistoryByVehicleIdByLangExtended", new object[] {
                        userId,
                        SID,
                        vehicleId,
                        dateTimeFrom,
                        dateTimeTo,
                        includeCoordinate,
                        includeSensor,
                        includePositionUpdate,
                        includeInvalidGps,
                        DclId,
                        lang,
                        msgList,
                        sqlTopRecords,
                        xml,
                        requestOverflowed});
            xml = ((string)(results[1]));
            requestOverflowed = ((bool)(results[2]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetVehicleStatusHistoryByVehicleIdByLangExtendedAsync(int userId, string SID, long vehicleId, string dateTimeFrom, string dateTimeTo, bool includeCoordinate, bool includeSensor, bool includePositionUpdate, bool includeInvalidGps, short DclId, string lang, string msgList, string sqlTopRecords, string xml, bool requestOverflowed) {
            this.GetVehicleStatusHistoryByVehicleIdByLangExtendedAsync(userId, SID, vehicleId, dateTimeFrom, dateTimeTo, includeCoordinate, includeSensor, includePositionUpdate, includeInvalidGps, DclId, lang, msgList, sqlTopRecords, xml, requestOverflowed, null);
        }
        
        /// <remarks/>
        public void GetVehicleStatusHistoryByVehicleIdByLangExtendedAsync(
                    int userId, 
                    string SID, 
                    long vehicleId, 
                    string dateTimeFrom, 
                    string dateTimeTo, 
                    bool includeCoordinate, 
                    bool includeSensor, 
                    bool includePositionUpdate, 
                    bool includeInvalidGps, 
                    short DclId, 
                    string lang, 
                    string msgList, 
                    string sqlTopRecords, 
                    string xml, 
                    bool requestOverflowed, 
                    object userState) {
            if ((this.GetVehicleStatusHistoryByVehicleIdByLangExtendedOperationCompleted == null)) {
                this.GetVehicleStatusHistoryByVehicleIdByLangExtendedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetVehicleStatusHistoryByVehicleIdByLangExtendedOperationCompleted);
            }
            this.InvokeAsync("GetVehicleStatusHistoryByVehicleIdByLangExtended", new object[] {
                        userId,
                        SID,
                        vehicleId,
                        dateTimeFrom,
                        dateTimeTo,
                        includeCoordinate,
                        includeSensor,
                        includePositionUpdate,
                        includeInvalidGps,
                        DclId,
                        lang,
                        msgList,
                        sqlTopRecords,
                        xml,
                        requestOverflowed}, this.GetVehicleStatusHistoryByVehicleIdByLangExtendedOperationCompleted, userState);
        }
        
        private void OnGetVehicleStatusHistoryByVehicleIdByLangExtendedOperationCompleted(object arg) {
            if ((this.GetVehicleStatusHistoryByVehicleIdByLangExtendedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetVehicleStatusHistoryByVehicleIdByLangExtendedCompleted(this, new GetVehicleStatusHistoryByVehicleIdByLangExtendedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetVehicleStatusHistoryByVehicleIdByLangExtendedSearch", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetVehicleStatusHistoryByVehicleIdByLangExtendedSearch(
                    int userId, 
                    string SID, 
                    long vehicleId, 
                    string dateTimeFrom, 
                    string dateTimeTo, 
                    bool includeCoordinate, 
                    bool includeSensor, 
                    bool includePositionUpdate, 
                    bool includeInvalidGps, 
                    short DclId, 
                    string lang, 
                    string msgList, 
                    string sqlTopRecords, 
                    string address, 
                    ref string xml, 
                    ref bool requestOverflowed) {
            object[] results = this.Invoke("GetVehicleStatusHistoryByVehicleIdByLangExtendedSearch", new object[] {
                        userId,
                        SID,
                        vehicleId,
                        dateTimeFrom,
                        dateTimeTo,
                        includeCoordinate,
                        includeSensor,
                        includePositionUpdate,
                        includeInvalidGps,
                        DclId,
                        lang,
                        msgList,
                        sqlTopRecords,
                        address,
                        xml,
                        requestOverflowed});
            xml = ((string)(results[1]));
            requestOverflowed = ((bool)(results[2]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetVehicleStatusHistoryByVehicleIdByLangExtendedSearchAsync(
                    int userId, 
                    string SID, 
                    long vehicleId, 
                    string dateTimeFrom, 
                    string dateTimeTo, 
                    bool includeCoordinate, 
                    bool includeSensor, 
                    bool includePositionUpdate, 
                    bool includeInvalidGps, 
                    short DclId, 
                    string lang, 
                    string msgList, 
                    string sqlTopRecords, 
                    string address, 
                    string xml, 
                    bool requestOverflowed) {
            this.GetVehicleStatusHistoryByVehicleIdByLangExtendedSearchAsync(userId, SID, vehicleId, dateTimeFrom, dateTimeTo, includeCoordinate, includeSensor, includePositionUpdate, includeInvalidGps, DclId, lang, msgList, sqlTopRecords, address, xml, requestOverflowed, null);
        }
        
        /// <remarks/>
        public void GetVehicleStatusHistoryByVehicleIdByLangExtendedSearchAsync(
                    int userId, 
                    string SID, 
                    long vehicleId, 
                    string dateTimeFrom, 
                    string dateTimeTo, 
                    bool includeCoordinate, 
                    bool includeSensor, 
                    bool includePositionUpdate, 
                    bool includeInvalidGps, 
                    short DclId, 
                    string lang, 
                    string msgList, 
                    string sqlTopRecords, 
                    string address, 
                    string xml, 
                    bool requestOverflowed, 
                    object userState) {
            if ((this.GetVehicleStatusHistoryByVehicleIdByLangExtendedSearchOperationCompleted == null)) {
                this.GetVehicleStatusHistoryByVehicleIdByLangExtendedSearchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetVehicleStatusHistoryByVehicleIdByLangExtendedSearchOperationCompleted);
            }
            this.InvokeAsync("GetVehicleStatusHistoryByVehicleIdByLangExtendedSearch", new object[] {
                        userId,
                        SID,
                        vehicleId,
                        dateTimeFrom,
                        dateTimeTo,
                        includeCoordinate,
                        includeSensor,
                        includePositionUpdate,
                        includeInvalidGps,
                        DclId,
                        lang,
                        msgList,
                        sqlTopRecords,
                        address,
                        xml,
                        requestOverflowed}, this.GetVehicleStatusHistoryByVehicleIdByLangExtendedSearchOperationCompleted, userState);
        }
        
        private void OnGetVehicleStatusHistoryByVehicleIdByLangExtendedSearchOperationCompleted(object arg) {
            if ((this.GetVehicleStatusHistoryByVehicleIdByLangExtendedSearchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetVehicleStatusHistoryByVehicleIdByLangExtendedSearchCompleted(this, new GetVehicleStatusHistoryByVehicleIdByLangExtendedSearchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetVehicleStatusHistoryByFleetIdByLangExtendedSearch", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetVehicleStatusHistoryByFleetIdByLangExtendedSearch(
                    int userId, 
                    string SID, 
                    int fleetId, 
                    string dateTimeFrom, 
                    string dateTimeTo, 
                    bool includeCoordinate, 
                    bool includeSensor, 
                    bool includePositionUpdate, 
                    bool includeInvalidGps, 
                    short DclId, 
                    string lang, 
                    string msgList, 
                    string sqlTopRecords, 
                    string address, 
                    ref string xml, 
                    ref bool requestOverflowed) {
            object[] results = this.Invoke("GetVehicleStatusHistoryByFleetIdByLangExtendedSearch", new object[] {
                        userId,
                        SID,
                        fleetId,
                        dateTimeFrom,
                        dateTimeTo,
                        includeCoordinate,
                        includeSensor,
                        includePositionUpdate,
                        includeInvalidGps,
                        DclId,
                        lang,
                        msgList,
                        sqlTopRecords,
                        address,
                        xml,
                        requestOverflowed});
            xml = ((string)(results[1]));
            requestOverflowed = ((bool)(results[2]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetVehicleStatusHistoryByFleetIdByLangExtendedSearchAsync(
                    int userId, 
                    string SID, 
                    int fleetId, 
                    string dateTimeFrom, 
                    string dateTimeTo, 
                    bool includeCoordinate, 
                    bool includeSensor, 
                    bool includePositionUpdate, 
                    bool includeInvalidGps, 
                    short DclId, 
                    string lang, 
                    string msgList, 
                    string sqlTopRecords, 
                    string address, 
                    string xml, 
                    bool requestOverflowed) {
            this.GetVehicleStatusHistoryByFleetIdByLangExtendedSearchAsync(userId, SID, fleetId, dateTimeFrom, dateTimeTo, includeCoordinate, includeSensor, includePositionUpdate, includeInvalidGps, DclId, lang, msgList, sqlTopRecords, address, xml, requestOverflowed, null);
        }
        
        /// <remarks/>
        public void GetVehicleStatusHistoryByFleetIdByLangExtendedSearchAsync(
                    int userId, 
                    string SID, 
                    int fleetId, 
                    string dateTimeFrom, 
                    string dateTimeTo, 
                    bool includeCoordinate, 
                    bool includeSensor, 
                    bool includePositionUpdate, 
                    bool includeInvalidGps, 
                    short DclId, 
                    string lang, 
                    string msgList, 
                    string sqlTopRecords, 
                    string address, 
                    string xml, 
                    bool requestOverflowed, 
                    object userState) {
            if ((this.GetVehicleStatusHistoryByFleetIdByLangExtendedSearchOperationCompleted == null)) {
                this.GetVehicleStatusHistoryByFleetIdByLangExtendedSearchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetVehicleStatusHistoryByFleetIdByLangExtendedSearchOperationCompleted);
            }
            this.InvokeAsync("GetVehicleStatusHistoryByFleetIdByLangExtendedSearch", new object[] {
                        userId,
                        SID,
                        fleetId,
                        dateTimeFrom,
                        dateTimeTo,
                        includeCoordinate,
                        includeSensor,
                        includePositionUpdate,
                        includeInvalidGps,
                        DclId,
                        lang,
                        msgList,
                        sqlTopRecords,
                        address,
                        xml,
                        requestOverflowed}, this.GetVehicleStatusHistoryByFleetIdByLangExtendedSearchOperationCompleted, userState);
        }
        
        private void OnGetVehicleStatusHistoryByFleetIdByLangExtendedSearchOperationCompleted(object arg) {
            if ((this.GetVehicleStatusHistoryByFleetIdByLangExtendedSearchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetVehicleStatusHistoryByFleetIdByLangExtendedSearchCompleted(this, new GetVehicleStatusHistoryByFleetIdByLangExtendedSearchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetVehicleOffHoursInfo", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetVehicleOffHoursInfo(
                    int userId, 
                    string SID, 
                    long vehicleId, 
                    string dateTimeFrom, 
                    string dateTimeTo, 
                    short dayFromHour, 
                    short dayFromMin, 
                    short dayToHour, 
                    short dayToMin, 
                    short weekendFromHour, 
                    short weekendFromMin, 
                    short weekendToHour, 
                    short weekendToMin, 
                    bool includeCoordinate, 
                    bool includeSensor, 
                    bool includePositionUpdate, 
                    bool includeInvalidGps, 
                    ref string xml, 
                    ref bool requestOverflowed) {
            object[] results = this.Invoke("GetVehicleOffHoursInfo", new object[] {
                        userId,
                        SID,
                        vehicleId,
                        dateTimeFrom,
                        dateTimeTo,
                        dayFromHour,
                        dayFromMin,
                        dayToHour,
                        dayToMin,
                        weekendFromHour,
                        weekendFromMin,
                        weekendToHour,
                        weekendToMin,
                        includeCoordinate,
                        includeSensor,
                        includePositionUpdate,
                        includeInvalidGps,
                        xml,
                        requestOverflowed});
            xml = ((string)(results[1]));
            requestOverflowed = ((bool)(results[2]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetVehicleOffHoursInfoAsync(
                    int userId, 
                    string SID, 
                    long vehicleId, 
                    string dateTimeFrom, 
                    string dateTimeTo, 
                    short dayFromHour, 
                    short dayFromMin, 
                    short dayToHour, 
                    short dayToMin, 
                    short weekendFromHour, 
                    short weekendFromMin, 
                    short weekendToHour, 
                    short weekendToMin, 
                    bool includeCoordinate, 
                    bool includeSensor, 
                    bool includePositionUpdate, 
                    bool includeInvalidGps, 
                    string xml, 
                    bool requestOverflowed) {
            this.GetVehicleOffHoursInfoAsync(userId, SID, vehicleId, dateTimeFrom, dateTimeTo, dayFromHour, dayFromMin, dayToHour, dayToMin, weekendFromHour, weekendFromMin, weekendToHour, weekendToMin, includeCoordinate, includeSensor, includePositionUpdate, includeInvalidGps, xml, requestOverflowed, null);
        }
        
        /// <remarks/>
        public void GetVehicleOffHoursInfoAsync(
                    int userId, 
                    string SID, 
                    long vehicleId, 
                    string dateTimeFrom, 
                    string dateTimeTo, 
                    short dayFromHour, 
                    short dayFromMin, 
                    short dayToHour, 
                    short dayToMin, 
                    short weekendFromHour, 
                    short weekendFromMin, 
                    short weekendToHour, 
                    short weekendToMin, 
                    bool includeCoordinate, 
                    bool includeSensor, 
                    bool includePositionUpdate, 
                    bool includeInvalidGps, 
                    string xml, 
                    bool requestOverflowed, 
                    object userState) {
            if ((this.GetVehicleOffHoursInfoOperationCompleted == null)) {
                this.GetVehicleOffHoursInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetVehicleOffHoursInfoOperationCompleted);
            }
            this.InvokeAsync("GetVehicleOffHoursInfo", new object[] {
                        userId,
                        SID,
                        vehicleId,
                        dateTimeFrom,
                        dateTimeTo,
                        dayFromHour,
                        dayFromMin,
                        dayToHour,
                        dayToMin,
                        weekendFromHour,
                        weekendFromMin,
                        weekendToHour,
                        weekendToMin,
                        includeCoordinate,
                        includeSensor,
                        includePositionUpdate,
                        includeInvalidGps,
                        xml,
                        requestOverflowed}, this.GetVehicleOffHoursInfoOperationCompleted, userState);
        }
        
        private void OnGetVehicleOffHoursInfoOperationCompleted(object arg) {
            if ((this.GetVehicleOffHoursInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetVehicleOffHoursInfoCompleted(this, new GetVehicleOffHoursInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetFleetOffHoursInfo", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetFleetOffHoursInfo(
                    int userId, 
                    string SID, 
                    int fleetId, 
                    string dateTimeFrom, 
                    string dateTimeTo, 
                    short dayFromHour, 
                    short dayFromMin, 
                    short dayToHour, 
                    short dayToMin, 
                    short weekendFromHour, 
                    short weekendFromMin, 
                    short weekendToHour, 
                    short weekendToMin, 
                    bool includeCoordinate, 
                    bool includeSensor, 
                    bool includePositionUpdate, 
                    bool includeInvalidGps, 
                    ref string xml, 
                    ref bool requestOverflowed) {
            object[] results = this.Invoke("GetFleetOffHoursInfo", new object[] {
                        userId,
                        SID,
                        fleetId,
                        dateTimeFrom,
                        dateTimeTo,
                        dayFromHour,
                        dayFromMin,
                        dayToHour,
                        dayToMin,
                        weekendFromHour,
                        weekendFromMin,
                        weekendToHour,
                        weekendToMin,
                        includeCoordinate,
                        includeSensor,
                        includePositionUpdate,
                        includeInvalidGps,
                        xml,
                        requestOverflowed});
            xml = ((string)(results[1]));
            requestOverflowed = ((bool)(results[2]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetFleetOffHoursInfoAsync(
                    int userId, 
                    string SID, 
                    int fleetId, 
                    string dateTimeFrom, 
                    string dateTimeTo, 
                    short dayFromHour, 
                    short dayFromMin, 
                    short dayToHour, 
                    short dayToMin, 
                    short weekendFromHour, 
                    short weekendFromMin, 
                    short weekendToHour, 
                    short weekendToMin, 
                    bool includeCoordinate, 
                    bool includeSensor, 
                    bool includePositionUpdate, 
                    bool includeInvalidGps, 
                    string xml, 
                    bool requestOverflowed) {
            this.GetFleetOffHoursInfoAsync(userId, SID, fleetId, dateTimeFrom, dateTimeTo, dayFromHour, dayFromMin, dayToHour, dayToMin, weekendFromHour, weekendFromMin, weekendToHour, weekendToMin, includeCoordinate, includeSensor, includePositionUpdate, includeInvalidGps, xml, requestOverflowed, null);
        }
        
        /// <remarks/>
        public void GetFleetOffHoursInfoAsync(
                    int userId, 
                    string SID, 
                    int fleetId, 
                    string dateTimeFrom, 
                    string dateTimeTo, 
                    short dayFromHour, 
                    short dayFromMin, 
                    short dayToHour, 
                    short dayToMin, 
                    short weekendFromHour, 
                    short weekendFromMin, 
                    short weekendToHour, 
                    short weekendToMin, 
                    bool includeCoordinate, 
                    bool includeSensor, 
                    bool includePositionUpdate, 
                    bool includeInvalidGps, 
                    string xml, 
                    bool requestOverflowed, 
                    object userState) {
            if ((this.GetFleetOffHoursInfoOperationCompleted == null)) {
                this.GetFleetOffHoursInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFleetOffHoursInfoOperationCompleted);
            }
            this.InvokeAsync("GetFleetOffHoursInfo", new object[] {
                        userId,
                        SID,
                        fleetId,
                        dateTimeFrom,
                        dateTimeTo,
                        dayFromHour,
                        dayFromMin,
                        dayToHour,
                        dayToMin,
                        weekendFromHour,
                        weekendFromMin,
                        weekendToHour,
                        weekendToMin,
                        includeCoordinate,
                        includeSensor,
                        includePositionUpdate,
                        includeInvalidGps,
                        xml,
                        requestOverflowed}, this.GetFleetOffHoursInfoOperationCompleted, userState);
        }
        
        private void OnGetFleetOffHoursInfoOperationCompleted(object arg) {
            if ((this.GetFleetOffHoursInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFleetOffHoursInfoCompleted(this, new GetFleetOffHoursInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetDetailedMessageInFromHistory", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetDetailedMessageInFromHistory(int userId, string SID, int boxId, System.DateTime msgDateTime, ref string xml) {
            object[] results = this.Invoke("GetDetailedMessageInFromHistory", new object[] {
                        userId,
                        SID,
                        boxId,
                        msgDateTime,
                        xml});
            xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetDetailedMessageInFromHistoryAsync(int userId, string SID, int boxId, System.DateTime msgDateTime, string xml) {
            this.GetDetailedMessageInFromHistoryAsync(userId, SID, boxId, msgDateTime, xml, null);
        }
        
        /// <remarks/>
        public void GetDetailedMessageInFromHistoryAsync(int userId, string SID, int boxId, System.DateTime msgDateTime, string xml, object userState) {
            if ((this.GetDetailedMessageInFromHistoryOperationCompleted == null)) {
                this.GetDetailedMessageInFromHistoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDetailedMessageInFromHistoryOperationCompleted);
            }
            this.InvokeAsync("GetDetailedMessageInFromHistory", new object[] {
                        userId,
                        SID,
                        boxId,
                        msgDateTime,
                        xml}, this.GetDetailedMessageInFromHistoryOperationCompleted, userState);
        }
        
        private void OnGetDetailedMessageInFromHistoryOperationCompleted(object arg) {
            if ((this.GetDetailedMessageInFromHistoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDetailedMessageInFromHistoryCompleted(this, new GetDetailedMessageInFromHistoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetLastMessagesFromHistory", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetLastMessagesFromHistory(int userId, string SID, short numOfRecords, int boxId, short msgType, System.DateTime from, System.DateTime to, ref string xml) {
            object[] results = this.Invoke("GetLastMessagesFromHistory", new object[] {
                        userId,
                        SID,
                        numOfRecords,
                        boxId,
                        msgType,
                        from,
                        to,
                        xml});
            xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetLastMessagesFromHistoryAsync(int userId, string SID, short numOfRecords, int boxId, short msgType, System.DateTime from, System.DateTime to, string xml) {
            this.GetLastMessagesFromHistoryAsync(userId, SID, numOfRecords, boxId, msgType, from, to, xml, null);
        }
        
        /// <remarks/>
        public void GetLastMessagesFromHistoryAsync(int userId, string SID, short numOfRecords, int boxId, short msgType, System.DateTime from, System.DateTime to, string xml, object userState) {
            if ((this.GetLastMessagesFromHistoryOperationCompleted == null)) {
                this.GetLastMessagesFromHistoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLastMessagesFromHistoryOperationCompleted);
            }
            this.InvokeAsync("GetLastMessagesFromHistory", new object[] {
                        userId,
                        SID,
                        numOfRecords,
                        boxId,
                        msgType,
                        from,
                        to,
                        xml}, this.GetLastMessagesFromHistoryOperationCompleted, userState);
        }
        
        private void OnGetLastMessagesFromHistoryOperationCompleted(object arg) {
            if ((this.GetLastMessagesFromHistoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLastMessagesFromHistoryCompleted(this, new GetLastMessagesFromHistoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetLastMessagesFromHistoryByOriginDateTime", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetLastMessagesFromHistoryByOriginDateTime(int userId, string SID, short numOfRecords, int boxId, short msgType, System.DateTime from, System.DateTime to, ref string xml) {
            object[] results = this.Invoke("GetLastMessagesFromHistoryByOriginDateTime", new object[] {
                        userId,
                        SID,
                        numOfRecords,
                        boxId,
                        msgType,
                        from,
                        to,
                        xml});
            xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetLastMessagesFromHistoryByOriginDateTimeAsync(int userId, string SID, short numOfRecords, int boxId, short msgType, System.DateTime from, System.DateTime to, string xml) {
            this.GetLastMessagesFromHistoryByOriginDateTimeAsync(userId, SID, numOfRecords, boxId, msgType, from, to, xml, null);
        }
        
        /// <remarks/>
        public void GetLastMessagesFromHistoryByOriginDateTimeAsync(int userId, string SID, short numOfRecords, int boxId, short msgType, System.DateTime from, System.DateTime to, string xml, object userState) {
            if ((this.GetLastMessagesFromHistoryByOriginDateTimeOperationCompleted == null)) {
                this.GetLastMessagesFromHistoryByOriginDateTimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLastMessagesFromHistoryByOriginDateTimeOperationCompleted);
            }
            this.InvokeAsync("GetLastMessagesFromHistoryByOriginDateTime", new object[] {
                        userId,
                        SID,
                        numOfRecords,
                        boxId,
                        msgType,
                        from,
                        to,
                        xml}, this.GetLastMessagesFromHistoryByOriginDateTimeOperationCompleted, userState);
        }
        
        private void OnGetLastMessagesFromHistoryByOriginDateTimeOperationCompleted(object arg) {
            if ((this.GetLastMessagesFromHistoryByOriginDateTimeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLastMessagesFromHistoryByOriginDateTimeCompleted(this, new GetLastMessagesFromHistoryByOriginDateTimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetLastMessagesFromHistoryByOrganization", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetLastMessagesFromHistoryByOrganization(int userId, string SID, short numOfRecords, int orgId, int fleetId, int boxId, short msgType, System.DateTime from, System.DateTime to, ref string xml) {
            object[] results = this.Invoke("GetLastMessagesFromHistoryByOrganization", new object[] {
                        userId,
                        SID,
                        numOfRecords,
                        orgId,
                        fleetId,
                        boxId,
                        msgType,
                        from,
                        to,
                        xml});
            xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetLastMessagesFromHistoryByOrganizationAsync(int userId, string SID, short numOfRecords, int orgId, int fleetId, int boxId, short msgType, System.DateTime from, System.DateTime to, string xml) {
            this.GetLastMessagesFromHistoryByOrganizationAsync(userId, SID, numOfRecords, orgId, fleetId, boxId, msgType, from, to, xml, null);
        }
        
        /// <remarks/>
        public void GetLastMessagesFromHistoryByOrganizationAsync(int userId, string SID, short numOfRecords, int orgId, int fleetId, int boxId, short msgType, System.DateTime from, System.DateTime to, string xml, object userState) {
            if ((this.GetLastMessagesFromHistoryByOrganizationOperationCompleted == null)) {
                this.GetLastMessagesFromHistoryByOrganizationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLastMessagesFromHistoryByOrganizationOperationCompleted);
            }
            this.InvokeAsync("GetLastMessagesFromHistoryByOrganization", new object[] {
                        userId,
                        SID,
                        numOfRecords,
                        orgId,
                        fleetId,
                        boxId,
                        msgType,
                        from,
                        to,
                        xml}, this.GetLastMessagesFromHistoryByOrganizationOperationCompleted, userState);
        }
        
        private void OnGetLastMessagesFromHistoryByOrganizationOperationCompleted(object arg) {
            if ((this.GetLastMessagesFromHistoryByOrganizationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLastMessagesFromHistoryByOrganizationCompleted(this, new GetLastMessagesFromHistoryByOrganizationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetLastMessagesOutFromHistory", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetLastMessagesOutFromHistory(int userId, string SID, short numOfRecords, int boxId, short cmdType, System.DateTime from, System.DateTime to, ref string xml) {
            object[] results = this.Invoke("GetLastMessagesOutFromHistory", new object[] {
                        userId,
                        SID,
                        numOfRecords,
                        boxId,
                        cmdType,
                        from,
                        to,
                        xml});
            xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetLastMessagesOutFromHistoryAsync(int userId, string SID, short numOfRecords, int boxId, short cmdType, System.DateTime from, System.DateTime to, string xml) {
            this.GetLastMessagesOutFromHistoryAsync(userId, SID, numOfRecords, boxId, cmdType, from, to, xml, null);
        }
        
        /// <remarks/>
        public void GetLastMessagesOutFromHistoryAsync(int userId, string SID, short numOfRecords, int boxId, short cmdType, System.DateTime from, System.DateTime to, string xml, object userState) {
            if ((this.GetLastMessagesOutFromHistoryOperationCompleted == null)) {
                this.GetLastMessagesOutFromHistoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLastMessagesOutFromHistoryOperationCompleted);
            }
            this.InvokeAsync("GetLastMessagesOutFromHistory", new object[] {
                        userId,
                        SID,
                        numOfRecords,
                        boxId,
                        cmdType,
                        from,
                        to,
                        xml}, this.GetLastMessagesOutFromHistoryOperationCompleted, userState);
        }
        
        private void OnGetLastMessagesOutFromHistoryOperationCompleted(object arg) {
            if ((this.GetLastMessagesOutFromHistoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLastMessagesOutFromHistoryCompleted(this, new GetLastMessagesOutFromHistoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetLastMessagesOutFromHistoryByOrganization", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetLastMessagesOutFromHistoryByOrganization(int userId, string SID, short numOfRecords, int orgId, int fleetId, int boxId, short cmdType, System.DateTime from, System.DateTime to, ref string xml) {
            object[] results = this.Invoke("GetLastMessagesOutFromHistoryByOrganization", new object[] {
                        userId,
                        SID,
                        numOfRecords,
                        orgId,
                        fleetId,
                        boxId,
                        cmdType,
                        from,
                        to,
                        xml});
            xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetLastMessagesOutFromHistoryByOrganizationAsync(int userId, string SID, short numOfRecords, int orgId, int fleetId, int boxId, short cmdType, System.DateTime from, System.DateTime to, string xml) {
            this.GetLastMessagesOutFromHistoryByOrganizationAsync(userId, SID, numOfRecords, orgId, fleetId, boxId, cmdType, from, to, xml, null);
        }
        
        /// <remarks/>
        public void GetLastMessagesOutFromHistoryByOrganizationAsync(int userId, string SID, short numOfRecords, int orgId, int fleetId, int boxId, short cmdType, System.DateTime from, System.DateTime to, string xml, object userState) {
            if ((this.GetLastMessagesOutFromHistoryByOrganizationOperationCompleted == null)) {
                this.GetLastMessagesOutFromHistoryByOrganizationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLastMessagesOutFromHistoryByOrganizationOperationCompleted);
            }
            this.InvokeAsync("GetLastMessagesOutFromHistoryByOrganization", new object[] {
                        userId,
                        SID,
                        numOfRecords,
                        orgId,
                        fleetId,
                        boxId,
                        cmdType,
                        from,
                        to,
                        xml}, this.GetLastMessagesOutFromHistoryByOrganizationOperationCompleted, userState);
        }
        
        private void OnGetLastMessagesOutFromHistoryByOrganizationOperationCompleted(object arg) {
            if ((this.GetLastMessagesOutFromHistoryByOrganizationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLastMessagesOutFromHistoryByOrganizationCompleted(this, new GetLastMessagesOutFromHistoryByOrganizationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetDetailedMessageOutFromHistory", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetDetailedMessageOutFromHistory(int userId, string SID, int boxId, System.DateTime msgDateTime, ref string xml) {
            object[] results = this.Invoke("GetDetailedMessageOutFromHistory", new object[] {
                        userId,
                        SID,
                        boxId,
                        msgDateTime,
                        xml});
            xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetDetailedMessageOutFromHistoryAsync(int userId, string SID, int boxId, System.DateTime msgDateTime, string xml) {
            this.GetDetailedMessageOutFromHistoryAsync(userId, SID, boxId, msgDateTime, xml, null);
        }
        
        /// <remarks/>
        public void GetDetailedMessageOutFromHistoryAsync(int userId, string SID, int boxId, System.DateTime msgDateTime, string xml, object userState) {
            if ((this.GetDetailedMessageOutFromHistoryOperationCompleted == null)) {
                this.GetDetailedMessageOutFromHistoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDetailedMessageOutFromHistoryOperationCompleted);
            }
            this.InvokeAsync("GetDetailedMessageOutFromHistory", new object[] {
                        userId,
                        SID,
                        boxId,
                        msgDateTime,
                        xml}, this.GetDetailedMessageOutFromHistoryOperationCompleted, userState);
        }
        
        private void OnGetDetailedMessageOutFromHistoryOperationCompleted(object arg) {
            if ((this.GetDetailedMessageOutFromHistoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDetailedMessageOutFromHistoryCompleted(this, new GetDetailedMessageOutFromHistoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetTextMessagesFullInfo", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetTextMessagesFullInfo(int userId, string SID, int boxId, string from, string to, short msgDirection, ref string xml) {
            object[] results = this.Invoke("GetTextMessagesFullInfo", new object[] {
                        userId,
                        SID,
                        boxId,
                        from,
                        to,
                        msgDirection,
                        xml});
            xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetTextMessagesFullInfoAsync(int userId, string SID, int boxId, string from, string to, short msgDirection, string xml) {
            this.GetTextMessagesFullInfoAsync(userId, SID, boxId, from, to, msgDirection, xml, null);
        }
        
        /// <remarks/>
        public void GetTextMessagesFullInfoAsync(int userId, string SID, int boxId, string from, string to, short msgDirection, string xml, object userState) {
            if ((this.GetTextMessagesFullInfoOperationCompleted == null)) {
                this.GetTextMessagesFullInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTextMessagesFullInfoOperationCompleted);
            }
            this.InvokeAsync("GetTextMessagesFullInfo", new object[] {
                        userId,
                        SID,
                        boxId,
                        from,
                        to,
                        msgDirection,
                        xml}, this.GetTextMessagesFullInfoOperationCompleted, userState);
        }
        
        private void OnGetTextMessagesFullInfoOperationCompleted(object arg) {
            if ((this.GetTextMessagesFullInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTextMessagesFullInfoCompleted(this, new GetTextMessagesFullInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetTextMessageFullInfo", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetTextMessageFullInfo(int userId, string SID, int msgId, long vehicleId, ref string xml) {
            object[] results = this.Invoke("GetTextMessageFullInfo", new object[] {
                        userId,
                        SID,
                        msgId,
                        vehicleId,
                        xml});
            xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetTextMessageFullInfoAsync(int userId, string SID, int msgId, long vehicleId, string xml) {
            this.GetTextMessageFullInfoAsync(userId, SID, msgId, vehicleId, xml, null);
        }
        
        /// <remarks/>
        public void GetTextMessageFullInfoAsync(int userId, string SID, int msgId, long vehicleId, string xml, object userState) {
            if ((this.GetTextMessageFullInfoOperationCompleted == null)) {
                this.GetTextMessageFullInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTextMessageFullInfoOperationCompleted);
            }
            this.InvokeAsync("GetTextMessageFullInfo", new object[] {
                        userId,
                        SID,
                        msgId,
                        vehicleId,
                        xml}, this.GetTextMessageFullInfoOperationCompleted, userState);
        }
        
        private void OnGetTextMessageFullInfoOperationCompleted(object arg) {
            if ((this.GetTextMessageFullInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTextMessageFullInfoCompleted(this, new GetTextMessageFullInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetUserTextMessagesFullInfo", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetUserTextMessagesFullInfo(int userId, string SID, string from, string to, short msgDirection, ref string xml) {
            object[] results = this.Invoke("GetUserTextMessagesFullInfo", new object[] {
                        userId,
                        SID,
                        from,
                        to,
                        msgDirection,
                        xml});
            xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserTextMessagesFullInfoAsync(int userId, string SID, string from, string to, short msgDirection, string xml) {
            this.GetUserTextMessagesFullInfoAsync(userId, SID, from, to, msgDirection, xml, null);
        }
        
        /// <remarks/>
        public void GetUserTextMessagesFullInfoAsync(int userId, string SID, string from, string to, short msgDirection, string xml, object userState) {
            if ((this.GetUserTextMessagesFullInfoOperationCompleted == null)) {
                this.GetUserTextMessagesFullInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserTextMessagesFullInfoOperationCompleted);
            }
            this.InvokeAsync("GetUserTextMessagesFullInfo", new object[] {
                        userId,
                        SID,
                        from,
                        to,
                        msgDirection,
                        xml}, this.GetUserTextMessagesFullInfoOperationCompleted, userState);
        }
        
        private void OnGetUserTextMessagesFullInfoOperationCompleted(object arg) {
            if ((this.GetUserTextMessagesFullInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserTextMessagesFullInfoCompleted(this, new GetUserTextMessagesFullInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetFleetTextMessagesFullInfo", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetFleetTextMessagesFullInfo(int userId, string SID, int fleetId, string from, string to, short msgDirection, ref string xml) {
            object[] results = this.Invoke("GetFleetTextMessagesFullInfo", new object[] {
                        userId,
                        SID,
                        fleetId,
                        from,
                        to,
                        msgDirection,
                        xml});
            xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetFleetTextMessagesFullInfoAsync(int userId, string SID, int fleetId, string from, string to, short msgDirection, string xml) {
            this.GetFleetTextMessagesFullInfoAsync(userId, SID, fleetId, from, to, msgDirection, xml, null);
        }
        
        /// <remarks/>
        public void GetFleetTextMessagesFullInfoAsync(int userId, string SID, int fleetId, string from, string to, short msgDirection, string xml, object userState) {
            if ((this.GetFleetTextMessagesFullInfoOperationCompleted == null)) {
                this.GetFleetTextMessagesFullInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFleetTextMessagesFullInfoOperationCompleted);
            }
            this.InvokeAsync("GetFleetTextMessagesFullInfo", new object[] {
                        userId,
                        SID,
                        fleetId,
                        from,
                        to,
                        msgDirection,
                        xml}, this.GetFleetTextMessagesFullInfoOperationCompleted, userState);
        }
        
        private void OnGetFleetTextMessagesFullInfoOperationCompleted(object arg) {
            if ((this.GetFleetTextMessagesFullInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFleetTextMessagesFullInfoCompleted(this, new GetFleetTextMessagesFullInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetFleetAllTextMessagesFullInfo", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetFleetAllTextMessagesFullInfo(int userId, string SID, int fleetId, string from, string to, short msgDirection, ref string xml) {
            object[] results = this.Invoke("GetFleetAllTextMessagesFullInfo", new object[] {
                        userId,
                        SID,
                        fleetId,
                        from,
                        to,
                        msgDirection,
                        xml});
            xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetFleetAllTextMessagesFullInfoAsync(int userId, string SID, int fleetId, string from, string to, short msgDirection, string xml) {
            this.GetFleetAllTextMessagesFullInfoAsync(userId, SID, fleetId, from, to, msgDirection, xml, null);
        }
        
        /// <remarks/>
        public void GetFleetAllTextMessagesFullInfoAsync(int userId, string SID, int fleetId, string from, string to, short msgDirection, string xml, object userState) {
            if ((this.GetFleetAllTextMessagesFullInfoOperationCompleted == null)) {
                this.GetFleetAllTextMessagesFullInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFleetAllTextMessagesFullInfoOperationCompleted);
            }
            this.InvokeAsync("GetFleetAllTextMessagesFullInfo", new object[] {
                        userId,
                        SID,
                        fleetId,
                        from,
                        to,
                        msgDirection,
                        xml}, this.GetFleetAllTextMessagesFullInfoOperationCompleted, userState);
        }
        
        private void OnGetFleetAllTextMessagesFullInfoOperationCompleted(object arg) {
            if ((this.GetFleetAllTextMessagesFullInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFleetAllTextMessagesFullInfoCompleted(this, new GetFleetAllTextMessagesFullInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetFleetAllDestinations", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetFleetAllDestinations(int userId, string SID, int fleetId, string from, string to, short msgDirection, ref string xml) {
            object[] results = this.Invoke("GetFleetAllDestinations", new object[] {
                        userId,
                        SID,
                        fleetId,
                        from,
                        to,
                        msgDirection,
                        xml});
            xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetFleetAllDestinationsAsync(int userId, string SID, int fleetId, string from, string to, short msgDirection, string xml) {
            this.GetFleetAllDestinationsAsync(userId, SID, fleetId, from, to, msgDirection, xml, null);
        }
        
        /// <remarks/>
        public void GetFleetAllDestinationsAsync(int userId, string SID, int fleetId, string from, string to, short msgDirection, string xml, object userState) {
            if ((this.GetFleetAllDestinationsOperationCompleted == null)) {
                this.GetFleetAllDestinationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFleetAllDestinationsOperationCompleted);
            }
            this.InvokeAsync("GetFleetAllDestinations", new object[] {
                        userId,
                        SID,
                        fleetId,
                        from,
                        to,
                        msgDirection,
                        xml}, this.GetFleetAllDestinationsOperationCompleted, userState);
        }
        
        private void OnGetFleetAllDestinationsOperationCompleted(object arg) {
            if ((this.GetFleetAllDestinationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFleetAllDestinationsCompleted(this, new GetFleetAllDestinationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetVehicleAllTextMessagesFullInfo", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetVehicleAllTextMessagesFullInfo(int userId, string SID, int boxId, string from, string to, short msgDirection, ref string xml) {
            object[] results = this.Invoke("GetVehicleAllTextMessagesFullInfo", new object[] {
                        userId,
                        SID,
                        boxId,
                        from,
                        to,
                        msgDirection,
                        xml});
            xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetVehicleAllTextMessagesFullInfoAsync(int userId, string SID, int boxId, string from, string to, short msgDirection, string xml) {
            this.GetVehicleAllTextMessagesFullInfoAsync(userId, SID, boxId, from, to, msgDirection, xml, null);
        }
        
        /// <remarks/>
        public void GetVehicleAllTextMessagesFullInfoAsync(int userId, string SID, int boxId, string from, string to, short msgDirection, string xml, object userState) {
            if ((this.GetVehicleAllTextMessagesFullInfoOperationCompleted == null)) {
                this.GetVehicleAllTextMessagesFullInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetVehicleAllTextMessagesFullInfoOperationCompleted);
            }
            this.InvokeAsync("GetVehicleAllTextMessagesFullInfo", new object[] {
                        userId,
                        SID,
                        boxId,
                        from,
                        to,
                        msgDirection,
                        xml}, this.GetVehicleAllTextMessagesFullInfoOperationCompleted, userState);
        }
        
        private void OnGetVehicleAllTextMessagesFullInfoOperationCompleted(object arg) {
            if ((this.GetVehicleAllTextMessagesFullInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetVehicleAllTextMessagesFullInfoCompleted(this, new GetVehicleAllTextMessagesFullInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetVehicleAllDestinations", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetVehicleAllDestinations(int userId, string SID, int boxId, string from, string to, short msgDirection, ref string xml) {
            object[] results = this.Invoke("GetVehicleAllDestinations", new object[] {
                        userId,
                        SID,
                        boxId,
                        from,
                        to,
                        msgDirection,
                        xml});
            xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetVehicleAllDestinationsAsync(int userId, string SID, int boxId, string from, string to, short msgDirection, string xml) {
            this.GetVehicleAllDestinationsAsync(userId, SID, boxId, from, to, msgDirection, xml, null);
        }
        
        /// <remarks/>
        public void GetVehicleAllDestinationsAsync(int userId, string SID, int boxId, string from, string to, short msgDirection, string xml, object userState) {
            if ((this.GetVehicleAllDestinationsOperationCompleted == null)) {
                this.GetVehicleAllDestinationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetVehicleAllDestinationsOperationCompleted);
            }
            this.InvokeAsync("GetVehicleAllDestinations", new object[] {
                        userId,
                        SID,
                        boxId,
                        from,
                        to,
                        msgDirection,
                        xml}, this.GetVehicleAllDestinationsOperationCompleted, userState);
        }
        
        private void OnGetVehicleAllDestinationsOperationCompleted(object arg) {
            if ((this.GetVehicleAllDestinationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetVehicleAllDestinationsCompleted(this, new GetVehicleAllDestinationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetUserTextMessagesShortInfo", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetUserTextMessagesShortInfo(int userId, string SID, string from, string to, short msgDirection, ref string xml) {
            object[] results = this.Invoke("GetUserTextMessagesShortInfo", new object[] {
                        userId,
                        SID,
                        from,
                        to,
                        msgDirection,
                        xml});
            xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserTextMessagesShortInfoAsync(int userId, string SID, string from, string to, short msgDirection, string xml) {
            this.GetUserTextMessagesShortInfoAsync(userId, SID, from, to, msgDirection, xml, null);
        }
        
        /// <remarks/>
        public void GetUserTextMessagesShortInfoAsync(int userId, string SID, string from, string to, short msgDirection, string xml, object userState) {
            if ((this.GetUserTextMessagesShortInfoOperationCompleted == null)) {
                this.GetUserTextMessagesShortInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserTextMessagesShortInfoOperationCompleted);
            }
            this.InvokeAsync("GetUserTextMessagesShortInfo", new object[] {
                        userId,
                        SID,
                        from,
                        to,
                        msgDirection,
                        xml}, this.GetUserTextMessagesShortInfoOperationCompleted, userState);
        }
        
        private void OnGetUserTextMessagesShortInfoOperationCompleted(object arg) {
            if ((this.GetUserTextMessagesShortInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserTextMessagesShortInfoCompleted(this, new GetUserTextMessagesShortInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetUserIncomingTextMessagesShortInfo", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetUserIncomingTextMessagesShortInfo(int userId, string SID, string from, string to, ref string xml) {
            object[] results = this.Invoke("GetUserIncomingTextMessagesShortInfo", new object[] {
                        userId,
                        SID,
                        from,
                        to,
                        xml});
            xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserIncomingTextMessagesShortInfoAsync(int userId, string SID, string from, string to, string xml) {
            this.GetUserIncomingTextMessagesShortInfoAsync(userId, SID, from, to, xml, null);
        }
        
        /// <remarks/>
        public void GetUserIncomingTextMessagesShortInfoAsync(int userId, string SID, string from, string to, string xml, object userState) {
            if ((this.GetUserIncomingTextMessagesShortInfoOperationCompleted == null)) {
                this.GetUserIncomingTextMessagesShortInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserIncomingTextMessagesShortInfoOperationCompleted);
            }
            this.InvokeAsync("GetUserIncomingTextMessagesShortInfo", new object[] {
                        userId,
                        SID,
                        from,
                        to,
                        xml}, this.GetUserIncomingTextMessagesShortInfoOperationCompleted, userState);
        }
        
        private void OnGetUserIncomingTextMessagesShortInfoOperationCompleted(object arg) {
            if ((this.GetUserIncomingTextMessagesShortInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserIncomingTextMessagesShortInfoCompleted(this, new GetUserIncomingTextMessagesShortInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetUserIncomingTextMessagesFullInfo", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetUserIncomingTextMessagesFullInfo(int userId, string SID, int msgId, int peripheralId, int msgTypeId, System.DateTime msgDateTime, int vehicleId, ref string xml) {
            object[] results = this.Invoke("GetUserIncomingTextMessagesFullInfo", new object[] {
                        userId,
                        SID,
                        msgId,
                        peripheralId,
                        msgTypeId,
                        msgDateTime,
                        vehicleId,
                        xml});
            xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserIncomingTextMessagesFullInfoAsync(int userId, string SID, int msgId, int peripheralId, int msgTypeId, System.DateTime msgDateTime, int vehicleId, string xml) {
            this.GetUserIncomingTextMessagesFullInfoAsync(userId, SID, msgId, peripheralId, msgTypeId, msgDateTime, vehicleId, xml, null);
        }
        
        /// <remarks/>
        public void GetUserIncomingTextMessagesFullInfoAsync(int userId, string SID, int msgId, int peripheralId, int msgTypeId, System.DateTime msgDateTime, int vehicleId, string xml, object userState) {
            if ((this.GetUserIncomingTextMessagesFullInfoOperationCompleted == null)) {
                this.GetUserIncomingTextMessagesFullInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserIncomingTextMessagesFullInfoOperationCompleted);
            }
            this.InvokeAsync("GetUserIncomingTextMessagesFullInfo", new object[] {
                        userId,
                        SID,
                        msgId,
                        peripheralId,
                        msgTypeId,
                        msgDateTime,
                        vehicleId,
                        xml}, this.GetUserIncomingTextMessagesFullInfoOperationCompleted, userState);
        }
        
        private void OnGetUserIncomingTextMessagesFullInfoOperationCompleted(object arg) {
            if ((this.GetUserIncomingTextMessagesFullInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserIncomingTextMessagesFullInfoCompleted(this, new GetUserIncomingTextMessagesFullInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetMsgsShortInfoCheckSum", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetMsgsShortInfoCheckSum(int userId, string SID, short userTimeZone, ref string checksum) {
            object[] results = this.Invoke("GetMsgsShortInfoCheckSum", new object[] {
                        userId,
                        SID,
                        userTimeZone,
                        checksum});
            checksum = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetMsgsShortInfoCheckSumAsync(int userId, string SID, short userTimeZone, string checksum) {
            this.GetMsgsShortInfoCheckSumAsync(userId, SID, userTimeZone, checksum, null);
        }
        
        /// <remarks/>
        public void GetMsgsShortInfoCheckSumAsync(int userId, string SID, short userTimeZone, string checksum, object userState) {
            if ((this.GetMsgsShortInfoCheckSumOperationCompleted == null)) {
                this.GetMsgsShortInfoCheckSumOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMsgsShortInfoCheckSumOperationCompleted);
            }
            this.InvokeAsync("GetMsgsShortInfoCheckSum", new object[] {
                        userId,
                        SID,
                        userTimeZone,
                        checksum}, this.GetMsgsShortInfoCheckSumOperationCompleted, userState);
        }
        
        private void OnGetMsgsShortInfoCheckSumOperationCompleted(object arg) {
            if ((this.GetMsgsShortInfoCheckSumCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMsgsShortInfoCheckSumCompleted(this, new GetMsgsShortInfoCheckSumCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/SetMsgUserId", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SetMsgUserId(int userId, string SID, int msgId) {
            object[] results = this.Invoke("SetMsgUserId", new object[] {
                        userId,
                        SID,
                        msgId});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SetMsgUserIdAsync(int userId, string SID, int msgId) {
            this.SetMsgUserIdAsync(userId, SID, msgId, null);
        }
        
        /// <remarks/>
        public void SetMsgUserIdAsync(int userId, string SID, int msgId, object userState) {
            if ((this.SetMsgUserIdOperationCompleted == null)) {
                this.SetMsgUserIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetMsgUserIdOperationCompleted);
            }
            this.InvokeAsync("SetMsgUserId", new object[] {
                        userId,
                        SID,
                        msgId}, this.SetMsgUserIdOperationCompleted, userState);
        }
        
        private void OnSetMsgUserIdOperationCompleted(object arg) {
            if ((this.SetMsgUserIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetMsgUserIdCompleted(this, new SetMsgUserIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/SetMsgUserIdExtended", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SetMsgUserIdExtended(int userId, string SID, int msgId, int msgTypeId, System.DateTime originDateTime, System.DateTime touchDateTime, int peripheralId, long checksumId) {
            object[] results = this.Invoke("SetMsgUserIdExtended", new object[] {
                        userId,
                        SID,
                        msgId,
                        msgTypeId,
                        originDateTime,
                        touchDateTime,
                        peripheralId,
                        checksumId});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SetMsgUserIdExtendedAsync(int userId, string SID, int msgId, int msgTypeId, System.DateTime originDateTime, System.DateTime touchDateTime, int peripheralId, long checksumId) {
            this.SetMsgUserIdExtendedAsync(userId, SID, msgId, msgTypeId, originDateTime, touchDateTime, peripheralId, checksumId, null);
        }
        
        /// <remarks/>
        public void SetMsgUserIdExtendedAsync(int userId, string SID, int msgId, int msgTypeId, System.DateTime originDateTime, System.DateTime touchDateTime, int peripheralId, long checksumId, object userState) {
            if ((this.SetMsgUserIdExtendedOperationCompleted == null)) {
                this.SetMsgUserIdExtendedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetMsgUserIdExtendedOperationCompleted);
            }
            this.InvokeAsync("SetMsgUserIdExtended", new object[] {
                        userId,
                        SID,
                        msgId,
                        msgTypeId,
                        originDateTime,
                        touchDateTime,
                        peripheralId,
                        checksumId}, this.SetMsgUserIdExtendedOperationCompleted, userState);
        }
        
        private void OnSetMsgUserIdExtendedOperationCompleted(object arg) {
            if ((this.SetMsgUserIdExtendedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetMsgUserIdExtendedCompleted(this, new SetMsgUserIdExtendedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/UpdateCustomPropInHistory", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateCustomPropInHistory(int userId, string SID, int boxId, System.DateTime origin, short boxMsgInTypeId, string customPropertyAddons) {
            object[] results = this.Invoke("UpdateCustomPropInHistory", new object[] {
                        userId,
                        SID,
                        boxId,
                        origin,
                        boxMsgInTypeId,
                        customPropertyAddons});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateCustomPropInHistoryAsync(int userId, string SID, int boxId, System.DateTime origin, short boxMsgInTypeId, string customPropertyAddons) {
            this.UpdateCustomPropInHistoryAsync(userId, SID, boxId, origin, boxMsgInTypeId, customPropertyAddons, null);
        }
        
        /// <remarks/>
        public void UpdateCustomPropInHistoryAsync(int userId, string SID, int boxId, System.DateTime origin, short boxMsgInTypeId, string customPropertyAddons, object userState) {
            if ((this.UpdateCustomPropInHistoryOperationCompleted == null)) {
                this.UpdateCustomPropInHistoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateCustomPropInHistoryOperationCompleted);
            }
            this.InvokeAsync("UpdateCustomPropInHistory", new object[] {
                        userId,
                        SID,
                        boxId,
                        origin,
                        boxMsgInTypeId,
                        customPropertyAddons}, this.UpdateCustomPropInHistoryOperationCompleted, userState);
        }
        
        private void OnUpdateCustomPropInHistoryOperationCompleted(object arg) {
            if ((this.UpdateCustomPropInHistoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateCustomPropInHistoryCompleted(this, new UpdateCustomPropInHistoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetVehiclesInHistoryByLocation", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetVehiclesInHistoryByLocation(int userId, string SID, int fleetId, System.DateTime from, System.DateTime to, double latitude, double longitude, ref string xml) {
            object[] results = this.Invoke("GetVehiclesInHistoryByLocation", new object[] {
                        userId,
                        SID,
                        fleetId,
                        from,
                        to,
                        latitude,
                        longitude,
                        xml});
            xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetVehiclesInHistoryByLocationAsync(int userId, string SID, int fleetId, System.DateTime from, System.DateTime to, double latitude, double longitude, string xml) {
            this.GetVehiclesInHistoryByLocationAsync(userId, SID, fleetId, from, to, latitude, longitude, xml, null);
        }
        
        /// <remarks/>
        public void GetVehiclesInHistoryByLocationAsync(int userId, string SID, int fleetId, System.DateTime from, System.DateTime to, double latitude, double longitude, string xml, object userState) {
            if ((this.GetVehiclesInHistoryByLocationOperationCompleted == null)) {
                this.GetVehiclesInHistoryByLocationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetVehiclesInHistoryByLocationOperationCompleted);
            }
            this.InvokeAsync("GetVehiclesInHistoryByLocation", new object[] {
                        userId,
                        SID,
                        fleetId,
                        from,
                        to,
                        latitude,
                        longitude,
                        xml}, this.GetVehiclesInHistoryByLocationOperationCompleted, userState);
        }
        
        private void OnGetVehiclesInHistoryByLocationOperationCompleted(object arg) {
            if ((this.GetVehiclesInHistoryByLocationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetVehiclesInHistoryByLocationCompleted(this, new GetVehiclesInHistoryByLocationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetVehiclesInHistoryByAddress", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetVehiclesInHistoryByAddress(int userId, string SID, int fleetId, System.DateTime from, System.DateTime to, string address, ref string xml) {
            object[] results = this.Invoke("GetVehiclesInHistoryByAddress", new object[] {
                        userId,
                        SID,
                        fleetId,
                        from,
                        to,
                        address,
                        xml});
            xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetVehiclesInHistoryByAddressAsync(int userId, string SID, int fleetId, System.DateTime from, System.DateTime to, string address, string xml) {
            this.GetVehiclesInHistoryByAddressAsync(userId, SID, fleetId, from, to, address, xml, null);
        }
        
        /// <remarks/>
        public void GetVehiclesInHistoryByAddressAsync(int userId, string SID, int fleetId, System.DateTime from, System.DateTime to, string address, string xml, object userState) {
            if ((this.GetVehiclesInHistoryByAddressOperationCompleted == null)) {
                this.GetVehiclesInHistoryByAddressOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetVehiclesInHistoryByAddressOperationCompleted);
            }
            this.InvokeAsync("GetVehiclesInHistoryByAddress", new object[] {
                        userId,
                        SID,
                        fleetId,
                        from,
                        to,
                        address,
                        xml}, this.GetVehiclesInHistoryByAddressOperationCompleted, userState);
        }
        
        private void OnGetVehiclesInHistoryByAddressOperationCompleted(object arg) {
            if ((this.GetVehiclesInHistoryByAddressCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetVehiclesInHistoryByAddressCompleted(this, new GetVehiclesInHistoryByAddressCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetCmdSend", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetCmdSend(int userId, string SID, int fleetId, string cmdType, ref string xml) {
            object[] results = this.Invoke("GetCmdSend", new object[] {
                        userId,
                        SID,
                        fleetId,
                        cmdType,
                        xml});
            xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetCmdSendAsync(int userId, string SID, int fleetId, string cmdType, string xml) {
            this.GetCmdSendAsync(userId, SID, fleetId, cmdType, xml, null);
        }
        
        /// <remarks/>
        public void GetCmdSendAsync(int userId, string SID, int fleetId, string cmdType, string xml, object userState) {
            if ((this.GetCmdSendOperationCompleted == null)) {
                this.GetCmdSendOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCmdSendOperationCompleted);
            }
            this.InvokeAsync("GetCmdSend", new object[] {
                        userId,
                        SID,
                        fleetId,
                        cmdType,
                        xml}, this.GetCmdSendOperationCompleted, userState);
        }
        
        private void OnGetCmdSendOperationCompleted(object arg) {
            if ((this.GetCmdSendCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCmdSendCompleted(this, new GetCmdSendCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetCmdRec", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetCmdRec(int userId, string SID, int fleetId, int msgTypeId, ref string xml) {
            object[] results = this.Invoke("GetCmdRec", new object[] {
                        userId,
                        SID,
                        fleetId,
                        msgTypeId,
                        xml});
            xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetCmdRecAsync(int userId, string SID, int fleetId, int msgTypeId, string xml) {
            this.GetCmdRecAsync(userId, SID, fleetId, msgTypeId, xml, null);
        }
        
        /// <remarks/>
        public void GetCmdRecAsync(int userId, string SID, int fleetId, int msgTypeId, string xml, object userState) {
            if ((this.GetCmdRecOperationCompleted == null)) {
                this.GetCmdRecOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCmdRecOperationCompleted);
            }
            this.InvokeAsync("GetCmdRec", new object[] {
                        userId,
                        SID,
                        fleetId,
                        msgTypeId,
                        xml}, this.GetCmdRecOperationCompleted, userState);
        }
        
        private void OnGetCmdRecOperationCompleted(object arg) {
            if ((this.GetCmdRecCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCmdRecCompleted(this, new GetCmdRecCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetInvalidGPSStatistic", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetInvalidGPSStatistic(int userId, string SID, int InvalidGPSPercent, int Hours, ref string xml) {
            object[] results = this.Invoke("GetInvalidGPSStatistic", new object[] {
                        userId,
                        SID,
                        InvalidGPSPercent,
                        Hours,
                        xml});
            xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetInvalidGPSStatisticAsync(int userId, string SID, int InvalidGPSPercent, int Hours, string xml) {
            this.GetInvalidGPSStatisticAsync(userId, SID, InvalidGPSPercent, Hours, xml, null);
        }
        
        /// <remarks/>
        public void GetInvalidGPSStatisticAsync(int userId, string SID, int InvalidGPSPercent, int Hours, string xml, object userState) {
            if ((this.GetInvalidGPSStatisticOperationCompleted == null)) {
                this.GetInvalidGPSStatisticOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetInvalidGPSStatisticOperationCompleted);
            }
            this.InvokeAsync("GetInvalidGPSStatistic", new object[] {
                        userId,
                        SID,
                        InvalidGPSPercent,
                        Hours,
                        xml}, this.GetInvalidGPSStatisticOperationCompleted, userState);
        }
        
        private void OnGetInvalidGPSStatisticOperationCompleted(object arg) {
            if ((this.GetInvalidGPSStatisticCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetInvalidGPSStatisticCompleted(this, new GetInvalidGPSStatisticCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetBoxesWithoutIpUpdates", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetBoxesWithoutIpUpdates(int userId, string SID, int Hours, ref string xml) {
            object[] results = this.Invoke("GetBoxesWithoutIpUpdates", new object[] {
                        userId,
                        SID,
                        Hours,
                        xml});
            xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetBoxesWithoutIpUpdatesAsync(int userId, string SID, int Hours, string xml) {
            this.GetBoxesWithoutIpUpdatesAsync(userId, SID, Hours, xml, null);
        }
        
        /// <remarks/>
        public void GetBoxesWithoutIpUpdatesAsync(int userId, string SID, int Hours, string xml, object userState) {
            if ((this.GetBoxesWithoutIpUpdatesOperationCompleted == null)) {
                this.GetBoxesWithoutIpUpdatesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBoxesWithoutIpUpdatesOperationCompleted);
            }
            this.InvokeAsync("GetBoxesWithoutIpUpdates", new object[] {
                        userId,
                        SID,
                        Hours,
                        xml}, this.GetBoxesWithoutIpUpdatesOperationCompleted, userState);
        }
        
        private void OnGetBoxesWithoutIpUpdatesOperationCompleted(object arg) {
            if ((this.GetBoxesWithoutIpUpdatesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBoxesWithoutIpUpdatesCompleted(this, new GetBoxesWithoutIpUpdatesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetBoxesReportedFrequency", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetBoxesReportedFrequency(int userId, string SID, int Hours, int TotalMsg, short OrganizationId, ref string xml) {
            object[] results = this.Invoke("GetBoxesReportedFrequency", new object[] {
                        userId,
                        SID,
                        Hours,
                        TotalMsg,
                        OrganizationId,
                        xml});
            xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetBoxesReportedFrequencyAsync(int userId, string SID, int Hours, int TotalMsg, short OrganizationId, string xml) {
            this.GetBoxesReportedFrequencyAsync(userId, SID, Hours, TotalMsg, OrganizationId, xml, null);
        }
        
        /// <remarks/>
        public void GetBoxesReportedFrequencyAsync(int userId, string SID, int Hours, int TotalMsg, short OrganizationId, string xml, object userState) {
            if ((this.GetBoxesReportedFrequencyOperationCompleted == null)) {
                this.GetBoxesReportedFrequencyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBoxesReportedFrequencyOperationCompleted);
            }
            this.InvokeAsync("GetBoxesReportedFrequency", new object[] {
                        userId,
                        SID,
                        Hours,
                        TotalMsg,
                        OrganizationId,
                        xml}, this.GetBoxesReportedFrequencyOperationCompleted, userState);
        }
        
        private void OnGetBoxesReportedFrequencyOperationCompleted(object arg) {
            if ((this.GetBoxesReportedFrequencyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBoxesReportedFrequencyCompleted(this, new GetBoxesReportedFrequencyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetBoxMissingMessages", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetBoxMissingMessages(int userId, string SID, int boxId, System.DateTime dtFrom, System.DateTime dtTo, ref string result) {
            object[] results = this.Invoke("GetBoxMissingMessages", new object[] {
                        userId,
                        SID,
                        boxId,
                        dtFrom,
                        dtTo,
                        result});
            result = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetBoxMissingMessagesAsync(int userId, string SID, int boxId, System.DateTime dtFrom, System.DateTime dtTo, string result) {
            this.GetBoxMissingMessagesAsync(userId, SID, boxId, dtFrom, dtTo, result, null);
        }
        
        /// <remarks/>
        public void GetBoxMissingMessagesAsync(int userId, string SID, int boxId, System.DateTime dtFrom, System.DateTime dtTo, string result, object userState) {
            if ((this.GetBoxMissingMessagesOperationCompleted == null)) {
                this.GetBoxMissingMessagesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBoxMissingMessagesOperationCompleted);
            }
            this.InvokeAsync("GetBoxMissingMessages", new object[] {
                        userId,
                        SID,
                        boxId,
                        dtFrom,
                        dtTo,
                        result}, this.GetBoxMissingMessagesOperationCompleted, userState);
        }
        
        private void OnGetBoxMissingMessagesOperationCompleted(object arg) {
            if ((this.GetBoxMissingMessagesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBoxMissingMessagesCompleted(this, new GetBoxMissingMessagesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetVehicleStatusHistoryByVehicleIdCompletedEventHandler(object sender, GetVehicleStatusHistoryByVehicleIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetVehicleStatusHistoryByVehicleIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetVehicleStatusHistoryByVehicleIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public bool requestOverflowed {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetVehicleStatusHistoryByVehicleIdByLangCompletedEventHandler(object sender, GetVehicleStatusHistoryByVehicleIdByLangCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetVehicleStatusHistoryByVehicleIdByLangCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetVehicleStatusHistoryByVehicleIdByLangCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public bool requestOverflowed {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetVehicleStatusHistoryByVehicleIdByLangExtendedCompletedEventHandler(object sender, GetVehicleStatusHistoryByVehicleIdByLangExtendedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetVehicleStatusHistoryByVehicleIdByLangExtendedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetVehicleStatusHistoryByVehicleIdByLangExtendedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public bool requestOverflowed {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetVehicleStatusHistoryByVehicleIdByLangExtendedSearchCompletedEventHandler(object sender, GetVehicleStatusHistoryByVehicleIdByLangExtendedSearchCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetVehicleStatusHistoryByVehicleIdByLangExtendedSearchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetVehicleStatusHistoryByVehicleIdByLangExtendedSearchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public bool requestOverflowed {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetVehicleStatusHistoryByFleetIdByLangExtendedSearchCompletedEventHandler(object sender, GetVehicleStatusHistoryByFleetIdByLangExtendedSearchCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetVehicleStatusHistoryByFleetIdByLangExtendedSearchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetVehicleStatusHistoryByFleetIdByLangExtendedSearchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public bool requestOverflowed {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetVehicleOffHoursInfoCompletedEventHandler(object sender, GetVehicleOffHoursInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetVehicleOffHoursInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetVehicleOffHoursInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public bool requestOverflowed {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetFleetOffHoursInfoCompletedEventHandler(object sender, GetFleetOffHoursInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFleetOffHoursInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFleetOffHoursInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public bool requestOverflowed {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetDetailedMessageInFromHistoryCompletedEventHandler(object sender, GetDetailedMessageInFromHistoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDetailedMessageInFromHistoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDetailedMessageInFromHistoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetLastMessagesFromHistoryCompletedEventHandler(object sender, GetLastMessagesFromHistoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLastMessagesFromHistoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLastMessagesFromHistoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetLastMessagesFromHistoryByOriginDateTimeCompletedEventHandler(object sender, GetLastMessagesFromHistoryByOriginDateTimeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLastMessagesFromHistoryByOriginDateTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLastMessagesFromHistoryByOriginDateTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetLastMessagesFromHistoryByOrganizationCompletedEventHandler(object sender, GetLastMessagesFromHistoryByOrganizationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLastMessagesFromHistoryByOrganizationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLastMessagesFromHistoryByOrganizationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetLastMessagesOutFromHistoryCompletedEventHandler(object sender, GetLastMessagesOutFromHistoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLastMessagesOutFromHistoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLastMessagesOutFromHistoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetLastMessagesOutFromHistoryByOrganizationCompletedEventHandler(object sender, GetLastMessagesOutFromHistoryByOrganizationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLastMessagesOutFromHistoryByOrganizationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLastMessagesOutFromHistoryByOrganizationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetDetailedMessageOutFromHistoryCompletedEventHandler(object sender, GetDetailedMessageOutFromHistoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDetailedMessageOutFromHistoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDetailedMessageOutFromHistoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetTextMessagesFullInfoCompletedEventHandler(object sender, GetTextMessagesFullInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTextMessagesFullInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTextMessagesFullInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetTextMessageFullInfoCompletedEventHandler(object sender, GetTextMessageFullInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTextMessageFullInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTextMessageFullInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetUserTextMessagesFullInfoCompletedEventHandler(object sender, GetUserTextMessagesFullInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserTextMessagesFullInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserTextMessagesFullInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetFleetTextMessagesFullInfoCompletedEventHandler(object sender, GetFleetTextMessagesFullInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFleetTextMessagesFullInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFleetTextMessagesFullInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetFleetAllTextMessagesFullInfoCompletedEventHandler(object sender, GetFleetAllTextMessagesFullInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFleetAllTextMessagesFullInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFleetAllTextMessagesFullInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetFleetAllDestinationsCompletedEventHandler(object sender, GetFleetAllDestinationsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFleetAllDestinationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFleetAllDestinationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetVehicleAllTextMessagesFullInfoCompletedEventHandler(object sender, GetVehicleAllTextMessagesFullInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetVehicleAllTextMessagesFullInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetVehicleAllTextMessagesFullInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetVehicleAllDestinationsCompletedEventHandler(object sender, GetVehicleAllDestinationsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetVehicleAllDestinationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetVehicleAllDestinationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetUserTextMessagesShortInfoCompletedEventHandler(object sender, GetUserTextMessagesShortInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserTextMessagesShortInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserTextMessagesShortInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetUserIncomingTextMessagesShortInfoCompletedEventHandler(object sender, GetUserIncomingTextMessagesShortInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserIncomingTextMessagesShortInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserIncomingTextMessagesShortInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetUserIncomingTextMessagesFullInfoCompletedEventHandler(object sender, GetUserIncomingTextMessagesFullInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserIncomingTextMessagesFullInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserIncomingTextMessagesFullInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetMsgsShortInfoCheckSumCompletedEventHandler(object sender, GetMsgsShortInfoCheckSumCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMsgsShortInfoCheckSumCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMsgsShortInfoCheckSumCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string checksum {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void SetMsgUserIdCompletedEventHandler(object sender, SetMsgUserIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetMsgUserIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetMsgUserIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void SetMsgUserIdExtendedCompletedEventHandler(object sender, SetMsgUserIdExtendedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetMsgUserIdExtendedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetMsgUserIdExtendedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void UpdateCustomPropInHistoryCompletedEventHandler(object sender, UpdateCustomPropInHistoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateCustomPropInHistoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateCustomPropInHistoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetVehiclesInHistoryByLocationCompletedEventHandler(object sender, GetVehiclesInHistoryByLocationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetVehiclesInHistoryByLocationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetVehiclesInHistoryByLocationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetVehiclesInHistoryByAddressCompletedEventHandler(object sender, GetVehiclesInHistoryByAddressCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetVehiclesInHistoryByAddressCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetVehiclesInHistoryByAddressCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetCmdSendCompletedEventHandler(object sender, GetCmdSendCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCmdSendCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCmdSendCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetCmdRecCompletedEventHandler(object sender, GetCmdRecCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCmdRecCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCmdRecCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetInvalidGPSStatisticCompletedEventHandler(object sender, GetInvalidGPSStatisticCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetInvalidGPSStatisticCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetInvalidGPSStatisticCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetBoxesWithoutIpUpdatesCompletedEventHandler(object sender, GetBoxesWithoutIpUpdatesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBoxesWithoutIpUpdatesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBoxesWithoutIpUpdatesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetBoxesReportedFrequencyCompletedEventHandler(object sender, GetBoxesReportedFrequencyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBoxesReportedFrequencyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBoxesReportedFrequencyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetBoxMissingMessagesCompletedEventHandler(object sender, GetBoxMissingMessagesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBoxMissingMessagesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBoxMissingMessagesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
}

#pragma warning restore 1591