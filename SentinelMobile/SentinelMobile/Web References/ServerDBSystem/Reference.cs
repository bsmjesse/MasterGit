//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.17929.
// 
#pragma warning disable 1591

namespace SentinelMobile.ServerDBSystem {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="DBSystemSoap", Namespace="http://www.sentinelfm.com")]
    public partial class DBSystem : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetAllStateProvincesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllVehicleTypesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBoxMsgInTypesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBoxMsgInTypesByLangOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetIconsInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllMakesInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetModelsInfoByMakeIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSheduledTasksHistoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddSystemUpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateSystemUpdateTableOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSystemUpdatesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFullInfoSystemUpdatesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSystemUpdatesByLangOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteSystemUpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetConfigurationModuleTypesInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetConfigurationModuleTypeIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetConfigurationValueOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetComputerModulesInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateModuleStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteModuleOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCommModesInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllFirmwareInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserControlsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserReportsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserReportsByLangOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserReportsByCategoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetGroupSecurityFullInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllGroupSecurityFullInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAuditGroupInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddMapUserUsageOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOrganizationMapUsageInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMapTypesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBoxGeoCodeEngineInfoXMLOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBoxMapEngineInfoXMLOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserGeoCodeEngineInfoXMLOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserMapEngineInfoXMLOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLatitudeLongitudeByLSDOperationCompleted;
        
        private System.Threading.SendOrPostCallback AcknowledgeNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback LocalizationDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback InstallJob_AddOperationCompleted;
        
        private System.Threading.SendOrPostCallback InstallJob_UpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback InstallJob_DeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback InstallJobs_GetAllOperationCompleted;
        
        private System.Threading.SendOrPostCallback InstallJob_GetOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLogDataOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public DBSystem() {
            this.Url = global::SentinelMobile.Properties.Settings.Default.SentinelMobile_ServerDBSystem_DBSystem;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetAllStateProvincesCompletedEventHandler GetAllStateProvincesCompleted;
        
        /// <remarks/>
        public event GetAllVehicleTypesCompletedEventHandler GetAllVehicleTypesCompleted;
        
        /// <remarks/>
        public event GetBoxMsgInTypesCompletedEventHandler GetBoxMsgInTypesCompleted;
        
        /// <remarks/>
        public event GetBoxMsgInTypesByLangCompletedEventHandler GetBoxMsgInTypesByLangCompleted;
        
        /// <remarks/>
        public event GetIconsInfoCompletedEventHandler GetIconsInfoCompleted;
        
        /// <remarks/>
        public event GetAllMakesInfoCompletedEventHandler GetAllMakesInfoCompleted;
        
        /// <remarks/>
        public event GetModelsInfoByMakeIdCompletedEventHandler GetModelsInfoByMakeIdCompleted;
        
        /// <remarks/>
        public event GetSheduledTasksHistoryCompletedEventHandler GetSheduledTasksHistoryCompleted;
        
        /// <remarks/>
        public event AddSystemUpdateCompletedEventHandler AddSystemUpdateCompleted;
        
        /// <remarks/>
        public event UpdateSystemUpdateTableCompletedEventHandler UpdateSystemUpdateTableCompleted;
        
        /// <remarks/>
        public event GetSystemUpdatesCompletedEventHandler GetSystemUpdatesCompleted;
        
        /// <remarks/>
        public event GetFullInfoSystemUpdatesCompletedEventHandler GetFullInfoSystemUpdatesCompleted;
        
        /// <remarks/>
        public event GetSystemUpdatesByLangCompletedEventHandler GetSystemUpdatesByLangCompleted;
        
        /// <remarks/>
        public event DeleteSystemUpdateCompletedEventHandler DeleteSystemUpdateCompleted;
        
        /// <remarks/>
        public event GetConfigurationModuleTypesInfoCompletedEventHandler GetConfigurationModuleTypesInfoCompleted;
        
        /// <remarks/>
        public event GetConfigurationModuleTypeIdCompletedEventHandler GetConfigurationModuleTypeIdCompleted;
        
        /// <remarks/>
        public event GetConfigurationValueCompletedEventHandler GetConfigurationValueCompleted;
        
        /// <remarks/>
        public event GetComputerModulesInfoCompletedEventHandler GetComputerModulesInfoCompleted;
        
        /// <remarks/>
        public event UpdateModuleStatusCompletedEventHandler UpdateModuleStatusCompleted;
        
        /// <remarks/>
        public event DeleteModuleCompletedEventHandler DeleteModuleCompleted;
        
        /// <remarks/>
        public event GetCommModesInfoCompletedEventHandler GetCommModesInfoCompleted;
        
        /// <remarks/>
        public event GetAllFirmwareInfoCompletedEventHandler GetAllFirmwareInfoCompleted;
        
        /// <remarks/>
        public event GetUserControlsCompletedEventHandler GetUserControlsCompleted;
        
        /// <remarks/>
        public event GetUserReportsCompletedEventHandler GetUserReportsCompleted;
        
        /// <remarks/>
        public event GetUserReportsByLangCompletedEventHandler GetUserReportsByLangCompleted;
        
        /// <remarks/>
        public event GetUserReportsByCategoryCompletedEventHandler GetUserReportsByCategoryCompleted;
        
        /// <remarks/>
        public event GetGroupSecurityFullInfoCompletedEventHandler GetGroupSecurityFullInfoCompleted;
        
        /// <remarks/>
        public event GetAllGroupSecurityFullInfoCompletedEventHandler GetAllGroupSecurityFullInfoCompleted;
        
        /// <remarks/>
        public event GetAuditGroupInfoCompletedEventHandler GetAuditGroupInfoCompleted;
        
        /// <remarks/>
        public event AddMapUserUsageCompletedEventHandler AddMapUserUsageCompleted;
        
        /// <remarks/>
        public event GetOrganizationMapUsageInfoCompletedEventHandler GetOrganizationMapUsageInfoCompleted;
        
        /// <remarks/>
        public event GetMapTypesCompletedEventHandler GetMapTypesCompleted;
        
        /// <remarks/>
        public event GetBoxGeoCodeEngineInfoXMLCompletedEventHandler GetBoxGeoCodeEngineInfoXMLCompleted;
        
        /// <remarks/>
        public event GetBoxMapEngineInfoXMLCompletedEventHandler GetBoxMapEngineInfoXMLCompleted;
        
        /// <remarks/>
        public event GetUserGeoCodeEngineInfoXMLCompletedEventHandler GetUserGeoCodeEngineInfoXMLCompleted;
        
        /// <remarks/>
        public event GetUserMapEngineInfoXMLCompletedEventHandler GetUserMapEngineInfoXMLCompleted;
        
        /// <remarks/>
        public event GetLatitudeLongitudeByLSDCompletedEventHandler GetLatitudeLongitudeByLSDCompleted;
        
        /// <remarks/>
        public event AcknowledgeNotificationCompletedEventHandler AcknowledgeNotificationCompleted;
        
        /// <remarks/>
        public event LocalizationDataCompletedEventHandler LocalizationDataCompleted;
        
        /// <remarks/>
        public event InstallJob_AddCompletedEventHandler InstallJob_AddCompleted;
        
        /// <remarks/>
        public event InstallJob_UpdateCompletedEventHandler InstallJob_UpdateCompleted;
        
        /// <remarks/>
        public event InstallJob_DeleteCompletedEventHandler InstallJob_DeleteCompleted;
        
        /// <remarks/>
        public event InstallJobs_GetAllCompletedEventHandler InstallJobs_GetAllCompleted;
        
        /// <remarks/>
        public event InstallJob_GetCompletedEventHandler InstallJob_GetCompleted;
        
        /// <remarks/>
        public event GetLogDataCompletedEventHandler GetLogDataCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetAllStateProvinces", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetAllStateProvinces(int userId, string SID, ref string xml) {
            object[] results = this.Invoke("GetAllStateProvinces", new object[] {
                        userId,
                        SID,
                        xml});
            xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllStateProvincesAsync(int userId, string SID, string xml) {
            this.GetAllStateProvincesAsync(userId, SID, xml, null);
        }
        
        /// <remarks/>
        public void GetAllStateProvincesAsync(int userId, string SID, string xml, object userState) {
            if ((this.GetAllStateProvincesOperationCompleted == null)) {
                this.GetAllStateProvincesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllStateProvincesOperationCompleted);
            }
            this.InvokeAsync("GetAllStateProvinces", new object[] {
                        userId,
                        SID,
                        xml}, this.GetAllStateProvincesOperationCompleted, userState);
        }
        
        private void OnGetAllStateProvincesOperationCompleted(object arg) {
            if ((this.GetAllStateProvincesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllStateProvincesCompleted(this, new GetAllStateProvincesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetAllVehicleTypes", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetAllVehicleTypes(int userId, string SID, ref string xml) {
            object[] results = this.Invoke("GetAllVehicleTypes", new object[] {
                        userId,
                        SID,
                        xml});
            xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllVehicleTypesAsync(int userId, string SID, string xml) {
            this.GetAllVehicleTypesAsync(userId, SID, xml, null);
        }
        
        /// <remarks/>
        public void GetAllVehicleTypesAsync(int userId, string SID, string xml, object userState) {
            if ((this.GetAllVehicleTypesOperationCompleted == null)) {
                this.GetAllVehicleTypesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllVehicleTypesOperationCompleted);
            }
            this.InvokeAsync("GetAllVehicleTypes", new object[] {
                        userId,
                        SID,
                        xml}, this.GetAllVehicleTypesOperationCompleted, userState);
        }
        
        private void OnGetAllVehicleTypesOperationCompleted(object arg) {
            if ((this.GetAllVehicleTypesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllVehicleTypesCompleted(this, new GetAllVehicleTypesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetBoxMsgInTypes", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetBoxMsgInTypes(int userId, string SID, ref string xml) {
            object[] results = this.Invoke("GetBoxMsgInTypes", new object[] {
                        userId,
                        SID,
                        xml});
            xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetBoxMsgInTypesAsync(int userId, string SID, string xml) {
            this.GetBoxMsgInTypesAsync(userId, SID, xml, null);
        }
        
        /// <remarks/>
        public void GetBoxMsgInTypesAsync(int userId, string SID, string xml, object userState) {
            if ((this.GetBoxMsgInTypesOperationCompleted == null)) {
                this.GetBoxMsgInTypesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBoxMsgInTypesOperationCompleted);
            }
            this.InvokeAsync("GetBoxMsgInTypes", new object[] {
                        userId,
                        SID,
                        xml}, this.GetBoxMsgInTypesOperationCompleted, userState);
        }
        
        private void OnGetBoxMsgInTypesOperationCompleted(object arg) {
            if ((this.GetBoxMsgInTypesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBoxMsgInTypesCompleted(this, new GetBoxMsgInTypesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetBoxMsgInTypesByLang", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetBoxMsgInTypesByLang(int userId, string SID, string lang, ref string xml) {
            object[] results = this.Invoke("GetBoxMsgInTypesByLang", new object[] {
                        userId,
                        SID,
                        lang,
                        xml});
            xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetBoxMsgInTypesByLangAsync(int userId, string SID, string lang, string xml) {
            this.GetBoxMsgInTypesByLangAsync(userId, SID, lang, xml, null);
        }
        
        /// <remarks/>
        public void GetBoxMsgInTypesByLangAsync(int userId, string SID, string lang, string xml, object userState) {
            if ((this.GetBoxMsgInTypesByLangOperationCompleted == null)) {
                this.GetBoxMsgInTypesByLangOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBoxMsgInTypesByLangOperationCompleted);
            }
            this.InvokeAsync("GetBoxMsgInTypesByLang", new object[] {
                        userId,
                        SID,
                        lang,
                        xml}, this.GetBoxMsgInTypesByLangOperationCompleted, userState);
        }
        
        private void OnGetBoxMsgInTypesByLangOperationCompleted(object arg) {
            if ((this.GetBoxMsgInTypesByLangCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBoxMsgInTypesByLangCompleted(this, new GetBoxMsgInTypesByLangCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetIconsInfo", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetIconsInfo(int userId, string SID, ref string xml) {
            object[] results = this.Invoke("GetIconsInfo", new object[] {
                        userId,
                        SID,
                        xml});
            xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetIconsInfoAsync(int userId, string SID, string xml) {
            this.GetIconsInfoAsync(userId, SID, xml, null);
        }
        
        /// <remarks/>
        public void GetIconsInfoAsync(int userId, string SID, string xml, object userState) {
            if ((this.GetIconsInfoOperationCompleted == null)) {
                this.GetIconsInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetIconsInfoOperationCompleted);
            }
            this.InvokeAsync("GetIconsInfo", new object[] {
                        userId,
                        SID,
                        xml}, this.GetIconsInfoOperationCompleted, userState);
        }
        
        private void OnGetIconsInfoOperationCompleted(object arg) {
            if ((this.GetIconsInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetIconsInfoCompleted(this, new GetIconsInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetAllMakesInfo", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetAllMakesInfo(int userId, string SID, ref string xml) {
            object[] results = this.Invoke("GetAllMakesInfo", new object[] {
                        userId,
                        SID,
                        xml});
            xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllMakesInfoAsync(int userId, string SID, string xml) {
            this.GetAllMakesInfoAsync(userId, SID, xml, null);
        }
        
        /// <remarks/>
        public void GetAllMakesInfoAsync(int userId, string SID, string xml, object userState) {
            if ((this.GetAllMakesInfoOperationCompleted == null)) {
                this.GetAllMakesInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllMakesInfoOperationCompleted);
            }
            this.InvokeAsync("GetAllMakesInfo", new object[] {
                        userId,
                        SID,
                        xml}, this.GetAllMakesInfoOperationCompleted, userState);
        }
        
        private void OnGetAllMakesInfoOperationCompleted(object arg) {
            if ((this.GetAllMakesInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllMakesInfoCompleted(this, new GetAllMakesInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetModelsInfoByMakeId", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetModelsInfoByMakeId(int userId, string SID, int makeId, ref string xml) {
            object[] results = this.Invoke("GetModelsInfoByMakeId", new object[] {
                        userId,
                        SID,
                        makeId,
                        xml});
            xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetModelsInfoByMakeIdAsync(int userId, string SID, int makeId, string xml) {
            this.GetModelsInfoByMakeIdAsync(userId, SID, makeId, xml, null);
        }
        
        /// <remarks/>
        public void GetModelsInfoByMakeIdAsync(int userId, string SID, int makeId, string xml, object userState) {
            if ((this.GetModelsInfoByMakeIdOperationCompleted == null)) {
                this.GetModelsInfoByMakeIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetModelsInfoByMakeIdOperationCompleted);
            }
            this.InvokeAsync("GetModelsInfoByMakeId", new object[] {
                        userId,
                        SID,
                        makeId,
                        xml}, this.GetModelsInfoByMakeIdOperationCompleted, userState);
        }
        
        private void OnGetModelsInfoByMakeIdOperationCompleted(object arg) {
            if ((this.GetModelsInfoByMakeIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetModelsInfoByMakeIdCompleted(this, new GetModelsInfoByMakeIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetSheduledTasksHistory", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetSheduledTasksHistory(int userId, string SID, string fromDate, string toDate, int fleetId, int boxId, ref string xml) {
            object[] results = this.Invoke("GetSheduledTasksHistory", new object[] {
                        userId,
                        SID,
                        fromDate,
                        toDate,
                        fleetId,
                        boxId,
                        xml});
            xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetSheduledTasksHistoryAsync(int userId, string SID, string fromDate, string toDate, int fleetId, int boxId, string xml) {
            this.GetSheduledTasksHistoryAsync(userId, SID, fromDate, toDate, fleetId, boxId, xml, null);
        }
        
        /// <remarks/>
        public void GetSheduledTasksHistoryAsync(int userId, string SID, string fromDate, string toDate, int fleetId, int boxId, string xml, object userState) {
            if ((this.GetSheduledTasksHistoryOperationCompleted == null)) {
                this.GetSheduledTasksHistoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSheduledTasksHistoryOperationCompleted);
            }
            this.InvokeAsync("GetSheduledTasksHistory", new object[] {
                        userId,
                        SID,
                        fromDate,
                        toDate,
                        fleetId,
                        boxId,
                        xml}, this.GetSheduledTasksHistoryOperationCompleted, userState);
        }
        
        private void OnGetSheduledTasksHistoryOperationCompleted(object arg) {
            if ((this.GetSheduledTasksHistoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSheduledTasksHistoryCompleted(this, new GetSheduledTasksHistoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/AddSystemUpdate", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AddSystemUpdate(int userId, string SID, string msg, string msgFr, short systemUpdateType, short severity, string FontColor, short FontBold) {
            object[] results = this.Invoke("AddSystemUpdate", new object[] {
                        userId,
                        SID,
                        msg,
                        msgFr,
                        systemUpdateType,
                        severity,
                        FontColor,
                        FontBold});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AddSystemUpdateAsync(int userId, string SID, string msg, string msgFr, short systemUpdateType, short severity, string FontColor, short FontBold) {
            this.AddSystemUpdateAsync(userId, SID, msg, msgFr, systemUpdateType, severity, FontColor, FontBold, null);
        }
        
        /// <remarks/>
        public void AddSystemUpdateAsync(int userId, string SID, string msg, string msgFr, short systemUpdateType, short severity, string FontColor, short FontBold, object userState) {
            if ((this.AddSystemUpdateOperationCompleted == null)) {
                this.AddSystemUpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddSystemUpdateOperationCompleted);
            }
            this.InvokeAsync("AddSystemUpdate", new object[] {
                        userId,
                        SID,
                        msg,
                        msgFr,
                        systemUpdateType,
                        severity,
                        FontColor,
                        FontBold}, this.AddSystemUpdateOperationCompleted, userState);
        }
        
        private void OnAddSystemUpdateOperationCompleted(object arg) {
            if ((this.AddSystemUpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddSystemUpdateCompleted(this, new AddSystemUpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/UpdateSystemUpdateTable", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateSystemUpdateTable(int userId, string SID, int msgid, string msg, string msgFr, short systemUpdateType, short severity, string FontColor, short FontBold) {
            object[] results = this.Invoke("UpdateSystemUpdateTable", new object[] {
                        userId,
                        SID,
                        msgid,
                        msg,
                        msgFr,
                        systemUpdateType,
                        severity,
                        FontColor,
                        FontBold});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateSystemUpdateTableAsync(int userId, string SID, int msgid, string msg, string msgFr, short systemUpdateType, short severity, string FontColor, short FontBold) {
            this.UpdateSystemUpdateTableAsync(userId, SID, msgid, msg, msgFr, systemUpdateType, severity, FontColor, FontBold, null);
        }
        
        /// <remarks/>
        public void UpdateSystemUpdateTableAsync(int userId, string SID, int msgid, string msg, string msgFr, short systemUpdateType, short severity, string FontColor, short FontBold, object userState) {
            if ((this.UpdateSystemUpdateTableOperationCompleted == null)) {
                this.UpdateSystemUpdateTableOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateSystemUpdateTableOperationCompleted);
            }
            this.InvokeAsync("UpdateSystemUpdateTable", new object[] {
                        userId,
                        SID,
                        msgid,
                        msg,
                        msgFr,
                        systemUpdateType,
                        severity,
                        FontColor,
                        FontBold}, this.UpdateSystemUpdateTableOperationCompleted, userState);
        }
        
        private void OnUpdateSystemUpdateTableOperationCompleted(object arg) {
            if ((this.UpdateSystemUpdateTableCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateSystemUpdateTableCompleted(this, new UpdateSystemUpdateTableCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetSystemUpdates", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetSystemUpdates(int userId, string SID, string from, string to, short systemUpdateType, ref string xml) {
            object[] results = this.Invoke("GetSystemUpdates", new object[] {
                        userId,
                        SID,
                        from,
                        to,
                        systemUpdateType,
                        xml});
            xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetSystemUpdatesAsync(int userId, string SID, string from, string to, short systemUpdateType, string xml) {
            this.GetSystemUpdatesAsync(userId, SID, from, to, systemUpdateType, xml, null);
        }
        
        /// <remarks/>
        public void GetSystemUpdatesAsync(int userId, string SID, string from, string to, short systemUpdateType, string xml, object userState) {
            if ((this.GetSystemUpdatesOperationCompleted == null)) {
                this.GetSystemUpdatesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSystemUpdatesOperationCompleted);
            }
            this.InvokeAsync("GetSystemUpdates", new object[] {
                        userId,
                        SID,
                        from,
                        to,
                        systemUpdateType,
                        xml}, this.GetSystemUpdatesOperationCompleted, userState);
        }
        
        private void OnGetSystemUpdatesOperationCompleted(object arg) {
            if ((this.GetSystemUpdatesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSystemUpdatesCompleted(this, new GetSystemUpdatesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetFullInfoSystemUpdates", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetFullInfoSystemUpdates(int userId, string SID, string from, string to, short systemUpdateType, ref string xml) {
            object[] results = this.Invoke("GetFullInfoSystemUpdates", new object[] {
                        userId,
                        SID,
                        from,
                        to,
                        systemUpdateType,
                        xml});
            xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetFullInfoSystemUpdatesAsync(int userId, string SID, string from, string to, short systemUpdateType, string xml) {
            this.GetFullInfoSystemUpdatesAsync(userId, SID, from, to, systemUpdateType, xml, null);
        }
        
        /// <remarks/>
        public void GetFullInfoSystemUpdatesAsync(int userId, string SID, string from, string to, short systemUpdateType, string xml, object userState) {
            if ((this.GetFullInfoSystemUpdatesOperationCompleted == null)) {
                this.GetFullInfoSystemUpdatesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFullInfoSystemUpdatesOperationCompleted);
            }
            this.InvokeAsync("GetFullInfoSystemUpdates", new object[] {
                        userId,
                        SID,
                        from,
                        to,
                        systemUpdateType,
                        xml}, this.GetFullInfoSystemUpdatesOperationCompleted, userState);
        }
        
        private void OnGetFullInfoSystemUpdatesOperationCompleted(object arg) {
            if ((this.GetFullInfoSystemUpdatesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFullInfoSystemUpdatesCompleted(this, new GetFullInfoSystemUpdatesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetSystemUpdatesByLang", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetSystemUpdatesByLang(int userId, string SID, string from, string to, short systemUpdateType, string lang, ref string xml) {
            object[] results = this.Invoke("GetSystemUpdatesByLang", new object[] {
                        userId,
                        SID,
                        from,
                        to,
                        systemUpdateType,
                        lang,
                        xml});
            xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetSystemUpdatesByLangAsync(int userId, string SID, string from, string to, short systemUpdateType, string lang, string xml) {
            this.GetSystemUpdatesByLangAsync(userId, SID, from, to, systemUpdateType, lang, xml, null);
        }
        
        /// <remarks/>
        public void GetSystemUpdatesByLangAsync(int userId, string SID, string from, string to, short systemUpdateType, string lang, string xml, object userState) {
            if ((this.GetSystemUpdatesByLangOperationCompleted == null)) {
                this.GetSystemUpdatesByLangOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSystemUpdatesByLangOperationCompleted);
            }
            this.InvokeAsync("GetSystemUpdatesByLang", new object[] {
                        userId,
                        SID,
                        from,
                        to,
                        systemUpdateType,
                        lang,
                        xml}, this.GetSystemUpdatesByLangOperationCompleted, userState);
        }
        
        private void OnGetSystemUpdatesByLangOperationCompleted(object arg) {
            if ((this.GetSystemUpdatesByLangCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSystemUpdatesByLangCompleted(this, new GetSystemUpdatesByLangCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/DeleteSystemUpdate", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int DeleteSystemUpdate(int userId, string SID, int msgId) {
            object[] results = this.Invoke("DeleteSystemUpdate", new object[] {
                        userId,
                        SID,
                        msgId});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteSystemUpdateAsync(int userId, string SID, int msgId) {
            this.DeleteSystemUpdateAsync(userId, SID, msgId, null);
        }
        
        /// <remarks/>
        public void DeleteSystemUpdateAsync(int userId, string SID, int msgId, object userState) {
            if ((this.DeleteSystemUpdateOperationCompleted == null)) {
                this.DeleteSystemUpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteSystemUpdateOperationCompleted);
            }
            this.InvokeAsync("DeleteSystemUpdate", new object[] {
                        userId,
                        SID,
                        msgId}, this.DeleteSystemUpdateOperationCompleted, userState);
        }
        
        private void OnDeleteSystemUpdateOperationCompleted(object arg) {
            if ((this.DeleteSystemUpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteSystemUpdateCompleted(this, new DeleteSystemUpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetConfigurationModuleTypesInfo", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetConfigurationModuleTypesInfo(int userId, string SID, ref string xml) {
            object[] results = this.Invoke("GetConfigurationModuleTypesInfo", new object[] {
                        userId,
                        SID,
                        xml});
            xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetConfigurationModuleTypesInfoAsync(int userId, string SID, string xml) {
            this.GetConfigurationModuleTypesInfoAsync(userId, SID, xml, null);
        }
        
        /// <remarks/>
        public void GetConfigurationModuleTypesInfoAsync(int userId, string SID, string xml, object userState) {
            if ((this.GetConfigurationModuleTypesInfoOperationCompleted == null)) {
                this.GetConfigurationModuleTypesInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetConfigurationModuleTypesInfoOperationCompleted);
            }
            this.InvokeAsync("GetConfigurationModuleTypesInfo", new object[] {
                        userId,
                        SID,
                        xml}, this.GetConfigurationModuleTypesInfoOperationCompleted, userState);
        }
        
        private void OnGetConfigurationModuleTypesInfoOperationCompleted(object arg) {
            if ((this.GetConfigurationModuleTypesInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetConfigurationModuleTypesInfoCompleted(this, new GetConfigurationModuleTypesInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetConfigurationModuleTypeId", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetConfigurationModuleTypeId(int userId, string SID, string moduleTypeName, ref short moduleTypeId) {
            object[] results = this.Invoke("GetConfigurationModuleTypeId", new object[] {
                        userId,
                        SID,
                        moduleTypeName,
                        moduleTypeId});
            moduleTypeId = ((short)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetConfigurationModuleTypeIdAsync(int userId, string SID, string moduleTypeName, short moduleTypeId) {
            this.GetConfigurationModuleTypeIdAsync(userId, SID, moduleTypeName, moduleTypeId, null);
        }
        
        /// <remarks/>
        public void GetConfigurationModuleTypeIdAsync(int userId, string SID, string moduleTypeName, short moduleTypeId, object userState) {
            if ((this.GetConfigurationModuleTypeIdOperationCompleted == null)) {
                this.GetConfigurationModuleTypeIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetConfigurationModuleTypeIdOperationCompleted);
            }
            this.InvokeAsync("GetConfigurationModuleTypeId", new object[] {
                        userId,
                        SID,
                        moduleTypeName,
                        moduleTypeId}, this.GetConfigurationModuleTypeIdOperationCompleted, userState);
        }
        
        private void OnGetConfigurationModuleTypeIdOperationCompleted(object arg) {
            if ((this.GetConfigurationModuleTypeIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetConfigurationModuleTypeIdCompleted(this, new GetConfigurationModuleTypeIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetConfigurationValue", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetConfigurationValue(int userId, string SID, short moduleTypeId, short cfgGroupId, string keyName, ref string keyValue) {
            object[] results = this.Invoke("GetConfigurationValue", new object[] {
                        userId,
                        SID,
                        moduleTypeId,
                        cfgGroupId,
                        keyName,
                        keyValue});
            keyValue = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetConfigurationValueAsync(int userId, string SID, short moduleTypeId, short cfgGroupId, string keyName, string keyValue) {
            this.GetConfigurationValueAsync(userId, SID, moduleTypeId, cfgGroupId, keyName, keyValue, null);
        }
        
        /// <remarks/>
        public void GetConfigurationValueAsync(int userId, string SID, short moduleTypeId, short cfgGroupId, string keyName, string keyValue, object userState) {
            if ((this.GetConfigurationValueOperationCompleted == null)) {
                this.GetConfigurationValueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetConfigurationValueOperationCompleted);
            }
            this.InvokeAsync("GetConfigurationValue", new object[] {
                        userId,
                        SID,
                        moduleTypeId,
                        cfgGroupId,
                        keyName,
                        keyValue}, this.GetConfigurationValueOperationCompleted, userState);
        }
        
        private void OnGetConfigurationValueOperationCompleted(object arg) {
            if ((this.GetConfigurationValueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetConfigurationValueCompleted(this, new GetConfigurationValueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetComputerModulesInfo", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetComputerModulesInfo(int userId, string SID, short moduleTypeId, string computerIp, ref string xml) {
            object[] results = this.Invoke("GetComputerModulesInfo", new object[] {
                        userId,
                        SID,
                        moduleTypeId,
                        computerIp,
                        xml});
            xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetComputerModulesInfoAsync(int userId, string SID, short moduleTypeId, string computerIp, string xml) {
            this.GetComputerModulesInfoAsync(userId, SID, moduleTypeId, computerIp, xml, null);
        }
        
        /// <remarks/>
        public void GetComputerModulesInfoAsync(int userId, string SID, short moduleTypeId, string computerIp, string xml, object userState) {
            if ((this.GetComputerModulesInfoOperationCompleted == null)) {
                this.GetComputerModulesInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetComputerModulesInfoOperationCompleted);
            }
            this.InvokeAsync("GetComputerModulesInfo", new object[] {
                        userId,
                        SID,
                        moduleTypeId,
                        computerIp,
                        xml}, this.GetComputerModulesInfoOperationCompleted, userState);
        }
        
        private void OnGetComputerModulesInfoOperationCompleted(object arg) {
            if ((this.GetComputerModulesInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetComputerModulesInfoCompleted(this, new GetComputerModulesInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/UpdateModuleStatus", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateModuleStatus(int userId, string SID, short moduleTypeId, bool enable) {
            object[] results = this.Invoke("UpdateModuleStatus", new object[] {
                        userId,
                        SID,
                        moduleTypeId,
                        enable});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateModuleStatusAsync(int userId, string SID, short moduleTypeId, bool enable) {
            this.UpdateModuleStatusAsync(userId, SID, moduleTypeId, enable, null);
        }
        
        /// <remarks/>
        public void UpdateModuleStatusAsync(int userId, string SID, short moduleTypeId, bool enable, object userState) {
            if ((this.UpdateModuleStatusOperationCompleted == null)) {
                this.UpdateModuleStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateModuleStatusOperationCompleted);
            }
            this.InvokeAsync("UpdateModuleStatus", new object[] {
                        userId,
                        SID,
                        moduleTypeId,
                        enable}, this.UpdateModuleStatusOperationCompleted, userState);
        }
        
        private void OnUpdateModuleStatusOperationCompleted(object arg) {
            if ((this.UpdateModuleStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateModuleStatusCompleted(this, new UpdateModuleStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/DeleteModule", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int DeleteModule(int userId, string SID, short moduleId) {
            object[] results = this.Invoke("DeleteModule", new object[] {
                        userId,
                        SID,
                        moduleId});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteModuleAsync(int userId, string SID, short moduleId) {
            this.DeleteModuleAsync(userId, SID, moduleId, null);
        }
        
        /// <remarks/>
        public void DeleteModuleAsync(int userId, string SID, short moduleId, object userState) {
            if ((this.DeleteModuleOperationCompleted == null)) {
                this.DeleteModuleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteModuleOperationCompleted);
            }
            this.InvokeAsync("DeleteModule", new object[] {
                        userId,
                        SID,
                        moduleId}, this.DeleteModuleOperationCompleted, userState);
        }
        
        private void OnDeleteModuleOperationCompleted(object arg) {
            if ((this.DeleteModuleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteModuleCompleted(this, new DeleteModuleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetCommModesInfo", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetCommModesInfo(int userId, string SID, ref string xml) {
            object[] results = this.Invoke("GetCommModesInfo", new object[] {
                        userId,
                        SID,
                        xml});
            xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetCommModesInfoAsync(int userId, string SID, string xml) {
            this.GetCommModesInfoAsync(userId, SID, xml, null);
        }
        
        /// <remarks/>
        public void GetCommModesInfoAsync(int userId, string SID, string xml, object userState) {
            if ((this.GetCommModesInfoOperationCompleted == null)) {
                this.GetCommModesInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCommModesInfoOperationCompleted);
            }
            this.InvokeAsync("GetCommModesInfo", new object[] {
                        userId,
                        SID,
                        xml}, this.GetCommModesInfoOperationCompleted, userState);
        }
        
        private void OnGetCommModesInfoOperationCompleted(object arg) {
            if ((this.GetCommModesInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCommModesInfoCompleted(this, new GetCommModesInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetAllFirmwareInfo", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetAllFirmwareInfo(int userId, string SID, ref string xml) {
            object[] results = this.Invoke("GetAllFirmwareInfo", new object[] {
                        userId,
                        SID,
                        xml});
            xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllFirmwareInfoAsync(int userId, string SID, string xml) {
            this.GetAllFirmwareInfoAsync(userId, SID, xml, null);
        }
        
        /// <remarks/>
        public void GetAllFirmwareInfoAsync(int userId, string SID, string xml, object userState) {
            if ((this.GetAllFirmwareInfoOperationCompleted == null)) {
                this.GetAllFirmwareInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllFirmwareInfoOperationCompleted);
            }
            this.InvokeAsync("GetAllFirmwareInfo", new object[] {
                        userId,
                        SID,
                        xml}, this.GetAllFirmwareInfoOperationCompleted, userState);
        }
        
        private void OnGetAllFirmwareInfoOperationCompleted(object arg) {
            if ((this.GetAllFirmwareInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllFirmwareInfoCompleted(this, new GetAllFirmwareInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetUserControls", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetUserControls(int userId, string SID, ref string xml) {
            object[] results = this.Invoke("GetUserControls", new object[] {
                        userId,
                        SID,
                        xml});
            xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserControlsAsync(int userId, string SID, string xml) {
            this.GetUserControlsAsync(userId, SID, xml, null);
        }
        
        /// <remarks/>
        public void GetUserControlsAsync(int userId, string SID, string xml, object userState) {
            if ((this.GetUserControlsOperationCompleted == null)) {
                this.GetUserControlsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserControlsOperationCompleted);
            }
            this.InvokeAsync("GetUserControls", new object[] {
                        userId,
                        SID,
                        xml}, this.GetUserControlsOperationCompleted, userState);
        }
        
        private void OnGetUserControlsOperationCompleted(object arg) {
            if ((this.GetUserControlsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserControlsCompleted(this, new GetUserControlsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetUserReports", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetUserReports(int userId, string SID, ref string xml) {
            object[] results = this.Invoke("GetUserReports", new object[] {
                        userId,
                        SID,
                        xml});
            xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserReportsAsync(int userId, string SID, string xml) {
            this.GetUserReportsAsync(userId, SID, xml, null);
        }
        
        /// <remarks/>
        public void GetUserReportsAsync(int userId, string SID, string xml, object userState) {
            if ((this.GetUserReportsOperationCompleted == null)) {
                this.GetUserReportsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserReportsOperationCompleted);
            }
            this.InvokeAsync("GetUserReports", new object[] {
                        userId,
                        SID,
                        xml}, this.GetUserReportsOperationCompleted, userState);
        }
        
        private void OnGetUserReportsOperationCompleted(object arg) {
            if ((this.GetUserReportsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserReportsCompleted(this, new GetUserReportsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetUserReportsByLang", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetUserReportsByLang(int userId, string SID, string lang, ref string xml) {
            object[] results = this.Invoke("GetUserReportsByLang", new object[] {
                        userId,
                        SID,
                        lang,
                        xml});
            xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserReportsByLangAsync(int userId, string SID, string lang, string xml) {
            this.GetUserReportsByLangAsync(userId, SID, lang, xml, null);
        }
        
        /// <remarks/>
        public void GetUserReportsByLangAsync(int userId, string SID, string lang, string xml, object userState) {
            if ((this.GetUserReportsByLangOperationCompleted == null)) {
                this.GetUserReportsByLangOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserReportsByLangOperationCompleted);
            }
            this.InvokeAsync("GetUserReportsByLang", new object[] {
                        userId,
                        SID,
                        lang,
                        xml}, this.GetUserReportsByLangOperationCompleted, userState);
        }
        
        private void OnGetUserReportsByLangOperationCompleted(object arg) {
            if ((this.GetUserReportsByLangCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserReportsByLangCompleted(this, new GetUserReportsByLangCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetUserReportsByCategory", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetUserReportsByCategory(int userId, string SID, string lang, int category, ref string xml) {
            object[] results = this.Invoke("GetUserReportsByCategory", new object[] {
                        userId,
                        SID,
                        lang,
                        category,
                        xml});
            xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserReportsByCategoryAsync(int userId, string SID, string lang, int category, string xml) {
            this.GetUserReportsByCategoryAsync(userId, SID, lang, category, xml, null);
        }
        
        /// <remarks/>
        public void GetUserReportsByCategoryAsync(int userId, string SID, string lang, int category, string xml, object userState) {
            if ((this.GetUserReportsByCategoryOperationCompleted == null)) {
                this.GetUserReportsByCategoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserReportsByCategoryOperationCompleted);
            }
            this.InvokeAsync("GetUserReportsByCategory", new object[] {
                        userId,
                        SID,
                        lang,
                        category,
                        xml}, this.GetUserReportsByCategoryOperationCompleted, userState);
        }
        
        private void OnGetUserReportsByCategoryOperationCompleted(object arg) {
            if ((this.GetUserReportsByCategoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserReportsByCategoryCompleted(this, new GetUserReportsByCategoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetGroupSecurityFullInfo", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetGroupSecurityFullInfo(int userId, string SID, short userGroupId, ref string xml) {
            object[] results = this.Invoke("GetGroupSecurityFullInfo", new object[] {
                        userId,
                        SID,
                        userGroupId,
                        xml});
            xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetGroupSecurityFullInfoAsync(int userId, string SID, short userGroupId, string xml) {
            this.GetGroupSecurityFullInfoAsync(userId, SID, userGroupId, xml, null);
        }
        
        /// <remarks/>
        public void GetGroupSecurityFullInfoAsync(int userId, string SID, short userGroupId, string xml, object userState) {
            if ((this.GetGroupSecurityFullInfoOperationCompleted == null)) {
                this.GetGroupSecurityFullInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetGroupSecurityFullInfoOperationCompleted);
            }
            this.InvokeAsync("GetGroupSecurityFullInfo", new object[] {
                        userId,
                        SID,
                        userGroupId,
                        xml}, this.GetGroupSecurityFullInfoOperationCompleted, userState);
        }
        
        private void OnGetGroupSecurityFullInfoOperationCompleted(object arg) {
            if ((this.GetGroupSecurityFullInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetGroupSecurityFullInfoCompleted(this, new GetGroupSecurityFullInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetAllGroupSecurityFullInfo", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetAllGroupSecurityFullInfo(int userId, string SID, ref string xml) {
            object[] results = this.Invoke("GetAllGroupSecurityFullInfo", new object[] {
                        userId,
                        SID,
                        xml});
            xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllGroupSecurityFullInfoAsync(int userId, string SID, string xml) {
            this.GetAllGroupSecurityFullInfoAsync(userId, SID, xml, null);
        }
        
        /// <remarks/>
        public void GetAllGroupSecurityFullInfoAsync(int userId, string SID, string xml, object userState) {
            if ((this.GetAllGroupSecurityFullInfoOperationCompleted == null)) {
                this.GetAllGroupSecurityFullInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllGroupSecurityFullInfoOperationCompleted);
            }
            this.InvokeAsync("GetAllGroupSecurityFullInfo", new object[] {
                        userId,
                        SID,
                        xml}, this.GetAllGroupSecurityFullInfoOperationCompleted, userState);
        }
        
        private void OnGetAllGroupSecurityFullInfoOperationCompleted(object arg) {
            if ((this.GetAllGroupSecurityFullInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllGroupSecurityFullInfoCompleted(this, new GetAllGroupSecurityFullInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetAuditGroupInfo", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetAuditGroupInfo(ref string xml) {
            object[] results = this.Invoke("GetAuditGroupInfo", new object[] {
                        xml});
            xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetAuditGroupInfoAsync(string xml) {
            this.GetAuditGroupInfoAsync(xml, null);
        }
        
        /// <remarks/>
        public void GetAuditGroupInfoAsync(string xml, object userState) {
            if ((this.GetAuditGroupInfoOperationCompleted == null)) {
                this.GetAuditGroupInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAuditGroupInfoOperationCompleted);
            }
            this.InvokeAsync("GetAuditGroupInfo", new object[] {
                        xml}, this.GetAuditGroupInfoOperationCompleted, userState);
        }
        
        private void OnGetAuditGroupInfoOperationCompleted(object arg) {
            if ((this.GetAuditGroupInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAuditGroupInfoCompleted(this, new GetAuditGroupInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/AddMapUserUsage", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AddMapUserUsage(int userId, string SID, short mapTypeId, short mapId) {
            object[] results = this.Invoke("AddMapUserUsage", new object[] {
                        userId,
                        SID,
                        mapTypeId,
                        mapId});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AddMapUserUsageAsync(int userId, string SID, short mapTypeId, short mapId) {
            this.AddMapUserUsageAsync(userId, SID, mapTypeId, mapId, null);
        }
        
        /// <remarks/>
        public void AddMapUserUsageAsync(int userId, string SID, short mapTypeId, short mapId, object userState) {
            if ((this.AddMapUserUsageOperationCompleted == null)) {
                this.AddMapUserUsageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddMapUserUsageOperationCompleted);
            }
            this.InvokeAsync("AddMapUserUsage", new object[] {
                        userId,
                        SID,
                        mapTypeId,
                        mapId}, this.AddMapUserUsageOperationCompleted, userState);
        }
        
        private void OnAddMapUserUsageOperationCompleted(object arg) {
            if ((this.AddMapUserUsageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddMapUserUsageCompleted(this, new AddMapUserUsageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetOrganizationMapUsageInfo", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetOrganizationMapUsageInfo(int userId, string SID, int organizationId, int mapId, short usageYear, short usageMonth, ref string xml) {
            object[] results = this.Invoke("GetOrganizationMapUsageInfo", new object[] {
                        userId,
                        SID,
                        organizationId,
                        mapId,
                        usageYear,
                        usageMonth,
                        xml});
            xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetOrganizationMapUsageInfoAsync(int userId, string SID, int organizationId, int mapId, short usageYear, short usageMonth, string xml) {
            this.GetOrganizationMapUsageInfoAsync(userId, SID, organizationId, mapId, usageYear, usageMonth, xml, null);
        }
        
        /// <remarks/>
        public void GetOrganizationMapUsageInfoAsync(int userId, string SID, int organizationId, int mapId, short usageYear, short usageMonth, string xml, object userState) {
            if ((this.GetOrganizationMapUsageInfoOperationCompleted == null)) {
                this.GetOrganizationMapUsageInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOrganizationMapUsageInfoOperationCompleted);
            }
            this.InvokeAsync("GetOrganizationMapUsageInfo", new object[] {
                        userId,
                        SID,
                        organizationId,
                        mapId,
                        usageYear,
                        usageMonth,
                        xml}, this.GetOrganizationMapUsageInfoOperationCompleted, userState);
        }
        
        private void OnGetOrganizationMapUsageInfoOperationCompleted(object arg) {
            if ((this.GetOrganizationMapUsageInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOrganizationMapUsageInfoCompleted(this, new GetOrganizationMapUsageInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetMapTypes", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetMapTypes(int userId, string SID, ref string xml) {
            object[] results = this.Invoke("GetMapTypes", new object[] {
                        userId,
                        SID,
                        xml});
            xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetMapTypesAsync(int userId, string SID, string xml) {
            this.GetMapTypesAsync(userId, SID, xml, null);
        }
        
        /// <remarks/>
        public void GetMapTypesAsync(int userId, string SID, string xml, object userState) {
            if ((this.GetMapTypesOperationCompleted == null)) {
                this.GetMapTypesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMapTypesOperationCompleted);
            }
            this.InvokeAsync("GetMapTypes", new object[] {
                        userId,
                        SID,
                        xml}, this.GetMapTypesOperationCompleted, userState);
        }
        
        private void OnGetMapTypesOperationCompleted(object arg) {
            if ((this.GetMapTypesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMapTypesCompleted(this, new GetMapTypesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetBoxGeoCodeEngineInfoXML", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetBoxGeoCodeEngineInfoXML(int userId, string SID, int boxId, ref string xml) {
            object[] results = this.Invoke("GetBoxGeoCodeEngineInfoXML", new object[] {
                        userId,
                        SID,
                        boxId,
                        xml});
            xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetBoxGeoCodeEngineInfoXMLAsync(int userId, string SID, int boxId, string xml) {
            this.GetBoxGeoCodeEngineInfoXMLAsync(userId, SID, boxId, xml, null);
        }
        
        /// <remarks/>
        public void GetBoxGeoCodeEngineInfoXMLAsync(int userId, string SID, int boxId, string xml, object userState) {
            if ((this.GetBoxGeoCodeEngineInfoXMLOperationCompleted == null)) {
                this.GetBoxGeoCodeEngineInfoXMLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBoxGeoCodeEngineInfoXMLOperationCompleted);
            }
            this.InvokeAsync("GetBoxGeoCodeEngineInfoXML", new object[] {
                        userId,
                        SID,
                        boxId,
                        xml}, this.GetBoxGeoCodeEngineInfoXMLOperationCompleted, userState);
        }
        
        private void OnGetBoxGeoCodeEngineInfoXMLOperationCompleted(object arg) {
            if ((this.GetBoxGeoCodeEngineInfoXMLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBoxGeoCodeEngineInfoXMLCompleted(this, new GetBoxGeoCodeEngineInfoXMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetBoxMapEngineInfoXML", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetBoxMapEngineInfoXML(int userId, string SID, int boxId, ref string xml) {
            object[] results = this.Invoke("GetBoxMapEngineInfoXML", new object[] {
                        userId,
                        SID,
                        boxId,
                        xml});
            xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetBoxMapEngineInfoXMLAsync(int userId, string SID, int boxId, string xml) {
            this.GetBoxMapEngineInfoXMLAsync(userId, SID, boxId, xml, null);
        }
        
        /// <remarks/>
        public void GetBoxMapEngineInfoXMLAsync(int userId, string SID, int boxId, string xml, object userState) {
            if ((this.GetBoxMapEngineInfoXMLOperationCompleted == null)) {
                this.GetBoxMapEngineInfoXMLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBoxMapEngineInfoXMLOperationCompleted);
            }
            this.InvokeAsync("GetBoxMapEngineInfoXML", new object[] {
                        userId,
                        SID,
                        boxId,
                        xml}, this.GetBoxMapEngineInfoXMLOperationCompleted, userState);
        }
        
        private void OnGetBoxMapEngineInfoXMLOperationCompleted(object arg) {
            if ((this.GetBoxMapEngineInfoXMLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBoxMapEngineInfoXMLCompleted(this, new GetBoxMapEngineInfoXMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetUserGeoCodeEngineInfoXML", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetUserGeoCodeEngineInfoXML(int userId, string SID, ref string xml) {
            object[] results = this.Invoke("GetUserGeoCodeEngineInfoXML", new object[] {
                        userId,
                        SID,
                        xml});
            xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserGeoCodeEngineInfoXMLAsync(int userId, string SID, string xml) {
            this.GetUserGeoCodeEngineInfoXMLAsync(userId, SID, xml, null);
        }
        
        /// <remarks/>
        public void GetUserGeoCodeEngineInfoXMLAsync(int userId, string SID, string xml, object userState) {
            if ((this.GetUserGeoCodeEngineInfoXMLOperationCompleted == null)) {
                this.GetUserGeoCodeEngineInfoXMLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserGeoCodeEngineInfoXMLOperationCompleted);
            }
            this.InvokeAsync("GetUserGeoCodeEngineInfoXML", new object[] {
                        userId,
                        SID,
                        xml}, this.GetUserGeoCodeEngineInfoXMLOperationCompleted, userState);
        }
        
        private void OnGetUserGeoCodeEngineInfoXMLOperationCompleted(object arg) {
            if ((this.GetUserGeoCodeEngineInfoXMLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserGeoCodeEngineInfoXMLCompleted(this, new GetUserGeoCodeEngineInfoXMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetUserMapEngineInfoXML", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetUserMapEngineInfoXML(int userId, string SID, ref string xml) {
            object[] results = this.Invoke("GetUserMapEngineInfoXML", new object[] {
                        userId,
                        SID,
                        xml});
            xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserMapEngineInfoXMLAsync(int userId, string SID, string xml) {
            this.GetUserMapEngineInfoXMLAsync(userId, SID, xml, null);
        }
        
        /// <remarks/>
        public void GetUserMapEngineInfoXMLAsync(int userId, string SID, string xml, object userState) {
            if ((this.GetUserMapEngineInfoXMLOperationCompleted == null)) {
                this.GetUserMapEngineInfoXMLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserMapEngineInfoXMLOperationCompleted);
            }
            this.InvokeAsync("GetUserMapEngineInfoXML", new object[] {
                        userId,
                        SID,
                        xml}, this.GetUserMapEngineInfoXMLOperationCompleted, userState);
        }
        
        private void OnGetUserMapEngineInfoXMLOperationCompleted(object arg) {
            if ((this.GetUserMapEngineInfoXMLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserMapEngineInfoXMLCompleted(this, new GetUserMapEngineInfoXMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetLatitudeLongitudeByLSD", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetLatitudeLongitudeByLSD(int userId, string SID, string specialAddress, ref double latitude, ref double longitude) {
            object[] results = this.Invoke("GetLatitudeLongitudeByLSD", new object[] {
                        userId,
                        SID,
                        specialAddress,
                        latitude,
                        longitude});
            latitude = ((double)(results[1]));
            longitude = ((double)(results[2]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetLatitudeLongitudeByLSDAsync(int userId, string SID, string specialAddress, double latitude, double longitude) {
            this.GetLatitudeLongitudeByLSDAsync(userId, SID, specialAddress, latitude, longitude, null);
        }
        
        /// <remarks/>
        public void GetLatitudeLongitudeByLSDAsync(int userId, string SID, string specialAddress, double latitude, double longitude, object userState) {
            if ((this.GetLatitudeLongitudeByLSDOperationCompleted == null)) {
                this.GetLatitudeLongitudeByLSDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLatitudeLongitudeByLSDOperationCompleted);
            }
            this.InvokeAsync("GetLatitudeLongitudeByLSD", new object[] {
                        userId,
                        SID,
                        specialAddress,
                        latitude,
                        longitude}, this.GetLatitudeLongitudeByLSDOperationCompleted, userState);
        }
        
        private void OnGetLatitudeLongitudeByLSDOperationCompleted(object arg) {
            if ((this.GetLatitudeLongitudeByLSDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLatitudeLongitudeByLSDCompleted(this, new GetLatitudeLongitudeByLSDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/AcknowledgeNotification", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AcknowledgeNotification(int userId, string SID, int notificationId, short typeId, System.DateTime dtTime) {
            object[] results = this.Invoke("AcknowledgeNotification", new object[] {
                        userId,
                        SID,
                        notificationId,
                        typeId,
                        dtTime});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AcknowledgeNotificationAsync(int userId, string SID, int notificationId, short typeId, System.DateTime dtTime) {
            this.AcknowledgeNotificationAsync(userId, SID, notificationId, typeId, dtTime, null);
        }
        
        /// <remarks/>
        public void AcknowledgeNotificationAsync(int userId, string SID, int notificationId, short typeId, System.DateTime dtTime, object userState) {
            if ((this.AcknowledgeNotificationOperationCompleted == null)) {
                this.AcknowledgeNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAcknowledgeNotificationOperationCompleted);
            }
            this.InvokeAsync("AcknowledgeNotification", new object[] {
                        userId,
                        SID,
                        notificationId,
                        typeId,
                        dtTime}, this.AcknowledgeNotificationOperationCompleted, userState);
        }
        
        private void OnAcknowledgeNotificationOperationCompleted(object arg) {
            if ((this.AcknowledgeNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AcknowledgeNotificationCompleted(this, new AcknowledgeNotificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/LocalizationData", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int LocalizationData(int userId, string SID, string lang, string KeyField, string FieldName, string FieldGroup, ref string xml) {
            object[] results = this.Invoke("LocalizationData", new object[] {
                        userId,
                        SID,
                        lang,
                        KeyField,
                        FieldName,
                        FieldGroup,
                        xml});
            xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void LocalizationDataAsync(int userId, string SID, string lang, string KeyField, string FieldName, string FieldGroup, string xml) {
            this.LocalizationDataAsync(userId, SID, lang, KeyField, FieldName, FieldGroup, xml, null);
        }
        
        /// <remarks/>
        public void LocalizationDataAsync(int userId, string SID, string lang, string KeyField, string FieldName, string FieldGroup, string xml, object userState) {
            if ((this.LocalizationDataOperationCompleted == null)) {
                this.LocalizationDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLocalizationDataOperationCompleted);
            }
            this.InvokeAsync("LocalizationData", new object[] {
                        userId,
                        SID,
                        lang,
                        KeyField,
                        FieldName,
                        FieldGroup,
                        xml}, this.LocalizationDataOperationCompleted, userState);
        }
        
        private void OnLocalizationDataOperationCompleted(object arg) {
            if ((this.LocalizationDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LocalizationDataCompleted(this, new LocalizationDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/InstallJob_Add", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int InstallJob_Add(int userId, string SID, string xmlData, string description, string status, System.DateTime dtModified) {
            object[] results = this.Invoke("InstallJob_Add", new object[] {
                        userId,
                        SID,
                        xmlData,
                        description,
                        status,
                        dtModified});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void InstallJob_AddAsync(int userId, string SID, string xmlData, string description, string status, System.DateTime dtModified) {
            this.InstallJob_AddAsync(userId, SID, xmlData, description, status, dtModified, null);
        }
        
        /// <remarks/>
        public void InstallJob_AddAsync(int userId, string SID, string xmlData, string description, string status, System.DateTime dtModified, object userState) {
            if ((this.InstallJob_AddOperationCompleted == null)) {
                this.InstallJob_AddOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInstallJob_AddOperationCompleted);
            }
            this.InvokeAsync("InstallJob_Add", new object[] {
                        userId,
                        SID,
                        xmlData,
                        description,
                        status,
                        dtModified}, this.InstallJob_AddOperationCompleted, userState);
        }
        
        private void OnInstallJob_AddOperationCompleted(object arg) {
            if ((this.InstallJob_AddCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InstallJob_AddCompleted(this, new InstallJob_AddCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/InstallJob_Update", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int InstallJob_Update(int userId, string SID, string xmlData, string description) {
            object[] results = this.Invoke("InstallJob_Update", new object[] {
                        userId,
                        SID,
                        xmlData,
                        description});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void InstallJob_UpdateAsync(int userId, string SID, string xmlData, string description) {
            this.InstallJob_UpdateAsync(userId, SID, xmlData, description, null);
        }
        
        /// <remarks/>
        public void InstallJob_UpdateAsync(int userId, string SID, string xmlData, string description, object userState) {
            if ((this.InstallJob_UpdateOperationCompleted == null)) {
                this.InstallJob_UpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInstallJob_UpdateOperationCompleted);
            }
            this.InvokeAsync("InstallJob_Update", new object[] {
                        userId,
                        SID,
                        xmlData,
                        description}, this.InstallJob_UpdateOperationCompleted, userState);
        }
        
        private void OnInstallJob_UpdateOperationCompleted(object arg) {
            if ((this.InstallJob_UpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InstallJob_UpdateCompleted(this, new InstallJob_UpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/InstallJob_Delete", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int InstallJob_Delete(int userId, string SID, int jobId) {
            object[] results = this.Invoke("InstallJob_Delete", new object[] {
                        userId,
                        SID,
                        jobId});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void InstallJob_DeleteAsync(int userId, string SID, int jobId) {
            this.InstallJob_DeleteAsync(userId, SID, jobId, null);
        }
        
        /// <remarks/>
        public void InstallJob_DeleteAsync(int userId, string SID, int jobId, object userState) {
            if ((this.InstallJob_DeleteOperationCompleted == null)) {
                this.InstallJob_DeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInstallJob_DeleteOperationCompleted);
            }
            this.InvokeAsync("InstallJob_Delete", new object[] {
                        userId,
                        SID,
                        jobId}, this.InstallJob_DeleteOperationCompleted, userState);
        }
        
        private void OnInstallJob_DeleteOperationCompleted(object arg) {
            if ((this.InstallJob_DeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InstallJob_DeleteCompleted(this, new InstallJob_DeleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/InstallJobs_GetAll", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int InstallJobs_GetAll(int userId, string SID, ref string xml) {
            object[] results = this.Invoke("InstallJobs_GetAll", new object[] {
                        userId,
                        SID,
                        xml});
            xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void InstallJobs_GetAllAsync(int userId, string SID, string xml) {
            this.InstallJobs_GetAllAsync(userId, SID, xml, null);
        }
        
        /// <remarks/>
        public void InstallJobs_GetAllAsync(int userId, string SID, string xml, object userState) {
            if ((this.InstallJobs_GetAllOperationCompleted == null)) {
                this.InstallJobs_GetAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInstallJobs_GetAllOperationCompleted);
            }
            this.InvokeAsync("InstallJobs_GetAll", new object[] {
                        userId,
                        SID,
                        xml}, this.InstallJobs_GetAllOperationCompleted, userState);
        }
        
        private void OnInstallJobs_GetAllOperationCompleted(object arg) {
            if ((this.InstallJobs_GetAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InstallJobs_GetAllCompleted(this, new InstallJobs_GetAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/InstallJob_Get", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int InstallJob_Get(int userId, string SID, int jobId, ref string xml) {
            object[] results = this.Invoke("InstallJob_Get", new object[] {
                        userId,
                        SID,
                        jobId,
                        xml});
            xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void InstallJob_GetAsync(int userId, string SID, int jobId, string xml) {
            this.InstallJob_GetAsync(userId, SID, jobId, xml, null);
        }
        
        /// <remarks/>
        public void InstallJob_GetAsync(int userId, string SID, int jobId, string xml, object userState) {
            if ((this.InstallJob_GetOperationCompleted == null)) {
                this.InstallJob_GetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInstallJob_GetOperationCompleted);
            }
            this.InvokeAsync("InstallJob_Get", new object[] {
                        userId,
                        SID,
                        jobId,
                        xml}, this.InstallJob_GetOperationCompleted, userState);
        }
        
        private void OnInstallJob_GetOperationCompleted(object arg) {
            if ((this.InstallJob_GetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InstallJob_GetCompleted(this, new InstallJob_GetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sentinelfm.com/GetLogData", RequestNamespace="http://www.sentinelfm.com", ResponseNamespace="http://www.sentinelfm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetLogData(int userId, string SID, System.DateTime from, System.DateTime to, string ModuleIds, string msgFilter, string topMsgs, ref string xml) {
            object[] results = this.Invoke("GetLogData", new object[] {
                        userId,
                        SID,
                        from,
                        to,
                        ModuleIds,
                        msgFilter,
                        topMsgs,
                        xml});
            xml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetLogDataAsync(int userId, string SID, System.DateTime from, System.DateTime to, string ModuleIds, string msgFilter, string topMsgs, string xml) {
            this.GetLogDataAsync(userId, SID, from, to, ModuleIds, msgFilter, topMsgs, xml, null);
        }
        
        /// <remarks/>
        public void GetLogDataAsync(int userId, string SID, System.DateTime from, System.DateTime to, string ModuleIds, string msgFilter, string topMsgs, string xml, object userState) {
            if ((this.GetLogDataOperationCompleted == null)) {
                this.GetLogDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLogDataOperationCompleted);
            }
            this.InvokeAsync("GetLogData", new object[] {
                        userId,
                        SID,
                        from,
                        to,
                        ModuleIds,
                        msgFilter,
                        topMsgs,
                        xml}, this.GetLogDataOperationCompleted, userState);
        }
        
        private void OnGetLogDataOperationCompleted(object arg) {
            if ((this.GetLogDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLogDataCompleted(this, new GetLogDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetAllStateProvincesCompletedEventHandler(object sender, GetAllStateProvincesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllStateProvincesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllStateProvincesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetAllVehicleTypesCompletedEventHandler(object sender, GetAllVehicleTypesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllVehicleTypesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllVehicleTypesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetBoxMsgInTypesCompletedEventHandler(object sender, GetBoxMsgInTypesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBoxMsgInTypesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBoxMsgInTypesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetBoxMsgInTypesByLangCompletedEventHandler(object sender, GetBoxMsgInTypesByLangCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBoxMsgInTypesByLangCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBoxMsgInTypesByLangCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetIconsInfoCompletedEventHandler(object sender, GetIconsInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetIconsInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetIconsInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetAllMakesInfoCompletedEventHandler(object sender, GetAllMakesInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllMakesInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllMakesInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetModelsInfoByMakeIdCompletedEventHandler(object sender, GetModelsInfoByMakeIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetModelsInfoByMakeIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetModelsInfoByMakeIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetSheduledTasksHistoryCompletedEventHandler(object sender, GetSheduledTasksHistoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSheduledTasksHistoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSheduledTasksHistoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void AddSystemUpdateCompletedEventHandler(object sender, AddSystemUpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddSystemUpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddSystemUpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void UpdateSystemUpdateTableCompletedEventHandler(object sender, UpdateSystemUpdateTableCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateSystemUpdateTableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateSystemUpdateTableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetSystemUpdatesCompletedEventHandler(object sender, GetSystemUpdatesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSystemUpdatesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSystemUpdatesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetFullInfoSystemUpdatesCompletedEventHandler(object sender, GetFullInfoSystemUpdatesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFullInfoSystemUpdatesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFullInfoSystemUpdatesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetSystemUpdatesByLangCompletedEventHandler(object sender, GetSystemUpdatesByLangCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSystemUpdatesByLangCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSystemUpdatesByLangCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void DeleteSystemUpdateCompletedEventHandler(object sender, DeleteSystemUpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteSystemUpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteSystemUpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetConfigurationModuleTypesInfoCompletedEventHandler(object sender, GetConfigurationModuleTypesInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetConfigurationModuleTypesInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetConfigurationModuleTypesInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetConfigurationModuleTypeIdCompletedEventHandler(object sender, GetConfigurationModuleTypeIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetConfigurationModuleTypeIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetConfigurationModuleTypeIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public short moduleTypeId {
            get {
                this.RaiseExceptionIfNecessary();
                return ((short)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetConfigurationValueCompletedEventHandler(object sender, GetConfigurationValueCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetConfigurationValueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetConfigurationValueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string keyValue {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetComputerModulesInfoCompletedEventHandler(object sender, GetComputerModulesInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetComputerModulesInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetComputerModulesInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void UpdateModuleStatusCompletedEventHandler(object sender, UpdateModuleStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateModuleStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateModuleStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void DeleteModuleCompletedEventHandler(object sender, DeleteModuleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteModuleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteModuleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetCommModesInfoCompletedEventHandler(object sender, GetCommModesInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCommModesInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCommModesInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetAllFirmwareInfoCompletedEventHandler(object sender, GetAllFirmwareInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllFirmwareInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllFirmwareInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetUserControlsCompletedEventHandler(object sender, GetUserControlsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserControlsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserControlsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetUserReportsCompletedEventHandler(object sender, GetUserReportsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserReportsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserReportsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetUserReportsByLangCompletedEventHandler(object sender, GetUserReportsByLangCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserReportsByLangCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserReportsByLangCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetUserReportsByCategoryCompletedEventHandler(object sender, GetUserReportsByCategoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserReportsByCategoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserReportsByCategoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetGroupSecurityFullInfoCompletedEventHandler(object sender, GetGroupSecurityFullInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetGroupSecurityFullInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetGroupSecurityFullInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetAllGroupSecurityFullInfoCompletedEventHandler(object sender, GetAllGroupSecurityFullInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllGroupSecurityFullInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllGroupSecurityFullInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetAuditGroupInfoCompletedEventHandler(object sender, GetAuditGroupInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAuditGroupInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAuditGroupInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void AddMapUserUsageCompletedEventHandler(object sender, AddMapUserUsageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddMapUserUsageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddMapUserUsageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetOrganizationMapUsageInfoCompletedEventHandler(object sender, GetOrganizationMapUsageInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOrganizationMapUsageInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOrganizationMapUsageInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetMapTypesCompletedEventHandler(object sender, GetMapTypesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMapTypesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMapTypesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetBoxGeoCodeEngineInfoXMLCompletedEventHandler(object sender, GetBoxGeoCodeEngineInfoXMLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBoxGeoCodeEngineInfoXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBoxGeoCodeEngineInfoXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetBoxMapEngineInfoXMLCompletedEventHandler(object sender, GetBoxMapEngineInfoXMLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBoxMapEngineInfoXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBoxMapEngineInfoXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetUserGeoCodeEngineInfoXMLCompletedEventHandler(object sender, GetUserGeoCodeEngineInfoXMLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserGeoCodeEngineInfoXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserGeoCodeEngineInfoXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetUserMapEngineInfoXMLCompletedEventHandler(object sender, GetUserMapEngineInfoXMLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserMapEngineInfoXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserMapEngineInfoXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetLatitudeLongitudeByLSDCompletedEventHandler(object sender, GetLatitudeLongitudeByLSDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLatitudeLongitudeByLSDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLatitudeLongitudeByLSDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public double latitude {
            get {
                this.RaiseExceptionIfNecessary();
                return ((double)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public double longitude {
            get {
                this.RaiseExceptionIfNecessary();
                return ((double)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void AcknowledgeNotificationCompletedEventHandler(object sender, AcknowledgeNotificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AcknowledgeNotificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AcknowledgeNotificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void LocalizationDataCompletedEventHandler(object sender, LocalizationDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LocalizationDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LocalizationDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void InstallJob_AddCompletedEventHandler(object sender, InstallJob_AddCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InstallJob_AddCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InstallJob_AddCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void InstallJob_UpdateCompletedEventHandler(object sender, InstallJob_UpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InstallJob_UpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InstallJob_UpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void InstallJob_DeleteCompletedEventHandler(object sender, InstallJob_DeleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InstallJob_DeleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InstallJob_DeleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void InstallJobs_GetAllCompletedEventHandler(object sender, InstallJobs_GetAllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InstallJobs_GetAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InstallJobs_GetAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void InstallJob_GetCompletedEventHandler(object sender, InstallJob_GetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InstallJob_GetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InstallJob_GetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetLogDataCompletedEventHandler(object sender, GetLogDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLogDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLogDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
}

#pragma warning restore 1591