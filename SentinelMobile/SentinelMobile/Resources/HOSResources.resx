<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Driver" xml:space="preserve">
    <value>Driver</value>
    <comment>HOS</comment>
  </data>
  <data name="NoDriverFound" xml:space="preserve">
    <value>No Driver Found</value>
    <comment>HOS</comment>
  </data>
  <data name="SearchDrivers" xml:space="preserve">
    <value>Enter Driver Name</value>
    <comment>HOS</comment>
  </data>
  <data name="FailedToLoad" xml:space="preserve">
    <value>Failed to load data, please try again later.</value>
    <comment>HOS</comment>
  </data>
  <data name="Logsheets" xml:space="preserve">
    <value>Logsheets &amp; Inspections</value>
    <comment>HOS</comment>
  </data>
  <data name="ManualLogsheets" xml:space="preserve">
    <value>Manual Entry</value>
    <comment>HOS</comment>
  </data>
  <data name="AddmanualLog" xml:space="preserve">
    <value>Add Manual Entry</value>
    <comment>HOS</comment>
  </data>
  <data name="Approved" xml:space="preserve">
    <value>Approved</value>
    <comment>HOS</comment>
  </data>
  <data name="Pending" xml:space="preserve">
    <value>Pending</value>
    <comment>HOS</comment>
  </data>
  <data name="AddDuty" xml:space="preserve">
    <value>Add Duty</value>
    <comment>HOS</comment>
  </data>
  <data name="Back" xml:space="preserve">
    <value>Back</value>
    <comment>HOS</comment>
  </data>
  <data name="Submit" xml:space="preserve">
    <value>Submit</value>
    <comment>HOS</comment>
  </data>
  <data name="InputDate" xml:space="preserve">
    <value>Input Date</value>
    <comment>HOS</comment>
  </data>
  <data name="InputTime" xml:space="preserve">
    <value>Input Time</value>
    <comment>HOS</comment>
  </data>
  <data name="InputRemark" xml:space="preserve">
    <value>Input Remark</value>
    <comment>HOS</comment>
  </data>
  <data name="SelectCity" xml:space="preserve">
    <value>Select City</value>
    <comment>HOS</comment>
  </data>
  <data name="SelectDuty" xml:space="preserve">
    <value>Select Duty</value>
    <comment>HOS</comment>
  </data>
  <data name="SelectProvince" xml:space="preserve">
    <value>Select Province/State</value>
    <comment>HOS</comment>
  </data>
  <data name="SelectAction" xml:space="preserve">
    <value>Select Action</value>
    <comment>HOS</comment>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Save</value>
    <comment>HOS</comment>
  </data>
  <data name="AddedDutySuccessfully" xml:space="preserve">
    <value>Added Duty successfully. Do you want to add more?</value>
    <comment>HOS</comment>
  </data>
  <data name="DeleteDutySuccessfully" xml:space="preserve">
    <value>Deleted Successfully</value>
    <comment>HOS</comment>
  </data>
  <data name="Remark" xml:space="preserve">
    <value>Remark</value>
    <comment>HOS</comment>
  </data>
  <data name="City" xml:space="preserve">
    <value>City</value>
    <comment>HOS</comment>
  </data>
  <data name="Action" xml:space="preserve">
    <value>Action</value>
    <comment>HOS</comment>
  </data>
  <data name="No" xml:space="preserve">
    <value>No</value>
    <comment>HOS</comment>
  </data>
  <data name="Yes" xml:space="preserve">
    <value>Yes</value>
    <comment>HOS</comment>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Delete</value>
    <comment>HOS</comment>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Edit</value>
    <comment>HOS</comment>
  </data>
  <data name="SavedSuccessfully" xml:space="preserve">
    <value>Saved Successfully</value>
    <comment>HOS</comment>
  </data>
  <data name="ConfirmDelete" xml:space="preserve">
    <value>Are you sure you want to delete the record?</value>
    <comment>HOS</comment>
  </data>
  <data name="Driving" xml:space="preserve">
    <value>Driving</value>
    <comment>HOS</comment>
  </data>
  <data name="OffDuty" xml:space="preserve">
    <value>Off Duty</value>
    <comment>HOS</comment>
  </data>
  <data name="OnDuty" xml:space="preserve">
    <value>On Duty</value>
    <comment>HOS</comment>
  </data>
  <data name="Sleep" xml:space="preserve">
    <value>Sleep</value>
    <comment>HOS</comment>
  </data>
  <data name="SelectCycle" xml:space="preserve">
    <value>Select Cycle</value>
    <comment>HOS</comment>
  </data>
  <data name="InputCompany" xml:space="preserve">
    <value>Input Company</value>
    <comment>HOS</comment>
  </data>
  <data name="InputDeferred" xml:space="preserve">
    <value>Input Deferred Hrs</value>
    <comment>HOS</comment>
  </data>
  <data name="InputEmergency" xml:space="preserve">
    <value>Input Emergency Driving Reason</value>
    <comment>HOS</comment>
  </data>
  <data name="InputEndOdometer" xml:space="preserve">
    <value>Input End Odometer</value>
    <comment>HOS</comment>
  </data>
  <data name="InputEquipmentNo" xml:space="preserve">
    <value>Input Equipment No</value>
    <comment>HOS</comment>
  </data>
  <data name="InputHomeTerminal" xml:space="preserve">
    <value>Input Home Terminal</value>
    <comment>HOS</comment>
  </data>
  <data name="InputPersonalUseEndOdo" xml:space="preserve">
    <value>Input Personal Use End Odometer</value>
    <comment>HOS</comment>
  </data>
  <data name="InputPersonalUseStartOdo" xml:space="preserve">
    <value>Input Personal Use Start Odometer</value>
    <comment>HOS</comment>
  </data>
  <data name="InputShiftStart" xml:space="preserve">
    <value>Input Shift Start</value>
    <comment>HOS</comment>
  </data>
  <data name="InputShippingDocument" xml:space="preserve">
    <value>Input Shipping Document</value>
    <comment>HOS</comment>
  </data>
  <data name="InputStartOdometer" xml:space="preserve">
    <value>Input Start Odometer</value>
    <comment>HOS</comment>
  </data>
  <data name="InputTrailerNo" xml:space="preserve">
    <value>Input Trailer Plate/Unit</value>
    <comment>HOS</comment>
  </data>
  <data name="InputTruckNo" xml:space="preserve">
    <value>Input Truck/Tractor Plate/Unit</value>
    <comment>HOS</comment>
  </data>
  <data name="InputCoDriver" xml:space="preserve">
    <value>Input Co-Driver</value>
    <comment>HOS</comment>
  </data>
  <data name="AdverseDrivingCondition" xml:space="preserve">
    <value>Adverse Driving Condition</value>
    <comment>HOS</comment>
  </data>
  <data name="DeferredHoursUnder" xml:space="preserve">
    <value>Deferrd Hours Under</value>
    <comment>HOS</comment>
  </data>
  <data name="AddTripInfo" xml:space="preserve">
    <value>Trip Info</value>
    <comment>HOS</comment>
  </data>
  <data name="Day1" xml:space="preserve">
    <value>Day1</value>
    <comment>HOS</comment>
  </data>
  <data name="Day2" xml:space="preserve">
    <value>Day2</value>
    <comment>HOS</comment>
  </data>
  <data name="InputDuty" xml:space="preserve">
    <value>Input Duty</value>
    <comment>HOS</comment>
  </data>
  <data name="FailedToSave" xml:space="preserve">
    <value>Failed to save data.</value>
    <comment>HOS</comment>
  </data>
  <data name="BackConfirm" xml:space="preserve">
    <value>Are you sure you want to exit without submitting?</value>
    <comment>HOS</comment>
  </data>
  <data name="Approve" xml:space="preserve">
    <value>Approve</value>
    <comment>HOS</comment>
  </data>
  <data name="ApprovePopup" xml:space="preserve">
    <value>Are you sure you want to approve the manual entries for </value>
    <comment>HOS</comment>
  </data>
  <data name="DateTimeGreateThanCurrent" xml:space="preserve">
    <value>Date is greater than current date.</value>
  </data>
  <data name="Summary" xml:space="preserve">
    <value>Summary</value>
  </data>
  <data name="ApprovedSuccessfully" xml:space="preserve">
    <value>Approved Successfully.</value>
  </data>
  <data name="LastRecordNotOffDufty" xml:space="preserve">
    <value>Warning: Last record is neither off duty nor sleeping.</value>
  </data>
  <data name="MakeSureLastOffDuty" xml:space="preserve">
    <value>Please don't forget to input your off duty time.</value>
  </data>
  <data name="NoDataFound" xml:space="preserve">
    <value>No Data Found</value>
  </data>
  <data name="Odometer" xml:space="preserve">
    <value>Odometer</value>
  </data>
  <data name="Please" xml:space="preserve">
    <value>Please</value>
  </data>
  <data name="OilFieldWaiting" xml:space="preserve">
    <value>Oil Field Waiting Time</value>
  </data>
  <data name="ApprovePendings" xml:space="preserve">
    <value>Approve  Pendings</value>
    <comment>HOS</comment>
  </data>
  <data name="NoPendingListFound" xml:space="preserve">
    <value>No Pending List Found</value>
  </data>
  <data name="ApproveWarning" xml:space="preserve">
    <value>There are no selected items</value>
  </data>
  <data name="TimeRounded" xml:space="preserve">
    <value>Time will be rounded to 15 minutes interval</value>
  </data>
</root>